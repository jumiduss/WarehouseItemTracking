(() => {
        var e, t = {
                87757: (e, t, n) => {
                    e.exports = n(35666)
                },
                15897: (e, t, n) => {
                        "use strict";
                        t.__esModule = !0;
                        var o = n(67294),
                            r = (a(o), a(n(45697))),
                            i = a(n(47815));
                        a(n(42473));

                        function a(e) {
                            return e && e.__esModule ? e : {
                                default: e
                            }
                        }

                        function s(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }

                        function l(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }

                        function c(e, t) {
                            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                        }
                        var u = 1073741823;

                        function d(e) {
                            var t = [];
                            return {
                                on: function(e) {
                                    t.push(e)
                                },
                                off: function(e) {
                                    t = t.filter((function(t) {
                                        return t !== e
                                    }))
                                },
                                get: function() {
                                    return e
                                },
                                set: function(n, o) {
                                    e = n, t.forEach((function(t) {
                                        return t(e, o)
                                    }))
                                }
                            }
                        }
                        t.default = function(e, t) {
                                var n, a, p = "__create-react-context-" + (0, i.default)() + "__",
                                    f = function(e) {
                                        function n() {
                                            var t, o;
                                            s(this, n);
                                            for (var r = arguments.length, i = Array(r), a = 0; a {
                                                    "use strict";
                                                    t.__esModule = !0;
                                                    var o = i(n(67294)),
                                                        r = i(n(15897));

                                                    function i(e) {
                                                        return e && e.__esModule ? e : {
                                                            default: e
                                                        }
                                                    }
                                                    t.default = o.default.createContext || r.default, e.exports = t.default
                                                }, 79928: (e, t, n) => {
                                                    "use strict";
                                                    n.d(t, {
                                                        Z: () => i
                                                    });
                                                    var o = n(83996),
                                                        r = n(40271);
                                                    const i = function(e, t, n) {
                                                        void 0 === n && (n = {});
                                                        var i = (0, o.c9)(e),
                                                            a = (0, o.c9)(t),
                                                            s = (0, r.Ht)(a[1] - i[1]),
                                                            l = (0, r.Ht)(a[0] - i[0]),
                                                            c = (0, r.Ht)(i[1]),
                                                            u = (0, r.Ht)(a[1]),
                                                            d = Math.pow(Math.sin(s / 2), 2) + Math.pow(Math.sin(l / 2), 2) * Math.cos(c) * Math.cos(u);
                                                        return (0, r.DL)(2 * Math.atan2(Math.sqrt(d), Math.sqrt(1 - d)), n.units)
                                                    }
                                                }, 40271: (e, t, n) => {
                                                    "use strict";
                                                    n.d(t, {
                                                        DL: () => i,
                                                        Ht: () => a
                                                    });
                                                    var o = 6371008.8,
                                                        r = {
                                                            centimeters: 637100880,
                                                            centimetres: 637100880,
                                                            degrees: 57.22891354143274,
                                                            feet: 20902260.511392,
                                                            inches: 39.37 * o,
                                                            kilometers: 6371.0088,
                                                            kilometres: 6371.0088,
                                                            meters: o,
                                                            metres: o,
                                                            miles: 3958.761333810546,
                                                            millimeters: 6371008800,
                                                            millimetres: 6371008800,
                                                            nauticalmiles: o / 1852,
                                                            radians: 1,
                                                            yards: 6967335.223679999
                                                        };

                                                    function i(e, t) {
                                                        void 0 === t && (t = "kilometers");
                                                        var n = r[t];
                                                        if (!n) throw new Error(t + " units is invalid");
                                                        return e * n
                                                    }

                                                    function a(e) {
                                                        return e % 360 * Math.PI / 180
                                                    }
                                                }, 83996: (e, t, n) => {
                                                    "use strict";
                                                    n.d(t, {
                                                        c9: () => o
                                                    });
                                                    n(40271);

                                                    function o(e) {
                                                        if (!e) throw new Error("coord is required");
                                                        if (!Array.isArray(e)) {
                                                            if ("Feature" === e.type && null !== e.geometry && "Point" === e.geometry.type) return e.geometry.coordinates;
                                                            if ("Point" === e.type) return e.coordinates
                                                        }
                                                        if (Array.isArray(e) && e.length >= 2 && !Array.isArray(e[0]) && !Array.isArray(e[1])) return e;
                                                        throw new Error("coord must be GeoJSON Point or an Array of numbers")
                                                    }
                                                }, 9669: (e, t, n) => {
                                                    e.exports = n(51609)
                                                }, 55448: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(64867),
                                                        r = n(36026),
                                                        i = n(15327),
                                                        a = n(84109),
                                                        s = n(67985),
                                                        l = n(85061),
                                                        c = "undefined" != typeof window && window.btoa && window.btoa.bind(window) || n(64657);
                                                    e.exports = function(e) {
                                                        return new Promise((function(t, u) {
                                                            var d = e.data,
                                                                p = e.headers;
                                                            o.isFormData(d) && delete p["Content-Type"];
                                                            var f = new XMLHttpRequest,
                                                                g = "onreadystatechange",
                                                                h = !1;
                                                            if ("undefined" == typeof window || !window.XDomainRequest || "withCredentials" in f || s(e.url) || (f = new window.XDomainRequest, g = "onload", h = !0, f.onprogress = function() {}, f.ontimeout = function() {}), e.auth) {
                                                                var m = e.auth.username || "",
                                                                    y = e.auth.password || "";
                                                                p.Authorization = "Basic " + c(m + ":" + y)
                                                            }
                                                            if (f.open(e.method.toUpperCase(), i(e.url, e.params, e.paramsSerializer), !0), f.timeout = e.timeout, f[g] = function() {
                                                                    if (f && (4 === f.readyState || h) && (0 !== f.status || f.responseURL && 0 === f.responseURL.indexOf("file:"))) {
                                                                        var n = "getAllResponseHeaders" in f ? a(f.getAllResponseHeaders()) : null,
                                                                            o = {
                                                                                data: e.responseType && "text" !== e.responseType ? f.response : f.responseText,
                                                                                status: 1223 === f.status ? 204 : f.status,
                                                                                statusText: 1223 === f.status ? "No Content" : f.statusText,
                                                                                headers: n,
                                                                                config: e,
                                                                                request: f
                                                                            };
                                                                        r(t, u, o), f = null
                                                                    }
                                                                }, f.onerror = function() {
                                                                    u(l("Network Error", e, null, f)), f = null
                                                                }, f.ontimeout = function() {
                                                                    u(l("timeout of " + e.timeout + "ms exceeded", e, "ECONNABORTED", f)), f = null
                                                                }, o.isStandardBrowserEnv()) {
                                                                var v = n(4372),
                                                                    w = (e.withCredentials || s(e.url)) && e.xsrfCookieName ? v.read(e.xsrfCookieName) : void 0;
                                                                w && (p[e.xsrfHeaderName] = w)
                                                            }
                                                            if ("setRequestHeader" in f && o.forEach(p, (function(e, t) {
                                                                    void 0 === d && "content-type" === t.toLowerCase() ? delete p[t] : f.setRequestHeader(t, e)
                                                                })), e.withCredentials && (f.withCredentials = !0), e.responseType) try {
                                                                f.responseType = e.responseType
                                                            } catch (t) {
                                                                if ("json" !== e.responseType) throw t
                                                            }
                                                            "function" == typeof e.onDownloadProgress && f.addEventListener("progress", e.onDownloadProgress), "function" == typeof e.onUploadProgress && f.upload && f.upload.addEventListener("progress", e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then((function(e) {
                                                                f && (f.abort(), u(e), f = null)
                                                            })), void 0 === d && (d = null), f.send(d)
                                                        }))
                                                    }
                                                }, 51609: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(64867),
                                                        r = n(91849),
                                                        i = n(30321),
                                                        a = n(45655);

                                                    function s(e) {
                                                        var t = new i(e),
                                                            n = r(i.prototype.request, t);
                                                        return o.extend(n, i.prototype, t), o.extend(n, t), n
                                                    }
                                                    var l = s(a);
                                                    l.Axios = i, l.create = function(e) {
                                                        return s(o.merge(a, e))
                                                    }, l.Cancel = n(65263), l.CancelToken = n(14972), l.isCancel = n(26502), l.all = function(e) {
                                                        return Promise.all(e)
                                                    }, l.spread = n(8713), e.exports = l, e.exports.default = l
                                                }, 65263: e => {
                                                    "use strict";

                                                    function t(e) {
                                                        this.message = e
                                                    }
                                                    t.prototype.toString = function() {
                                                        return "Cancel" + (this.message ? ": " + this.message : "")
                                                    }, t.prototype.__CANCEL__ = !0, e.exports = t
                                                }, 14972: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(65263);

                                                    function r(e) {
                                                        if ("function" != typeof e) throw new TypeError("executor must be a function.");
                                                        var t;
                                                        this.promise = new Promise((function(e) {
                                                            t = e
                                                        }));
                                                        var n = this;
                                                        e((function(e) {
                                                            n.reason || (n.reason = new o(e), t(n.reason))
                                                        }))
                                                    }
                                                    r.prototype.throwIfRequested = function() {
                                                        if (this.reason) throw this.reason
                                                    }, r.source = function() {
                                                        var e;
                                                        return {
                                                            token: new r((function(t) {
                                                                e = t
                                                            })),
                                                            cancel: e
                                                        }
                                                    }, e.exports = r
                                                }, 26502: e => {
                                                    "use strict";
                                                    e.exports = function(e) {
                                                        return !(!e || !e.__CANCEL__)
                                                    }
                                                }, 30321: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(45655),
                                                        r = n(64867),
                                                        i = n(80782),
                                                        a = n(13572);

                                                    function s(e) {
                                                        this.defaults = e, this.interceptors = {
                                                            request: new i,
                                                            response: new i
                                                        }
                                                    }
                                                    s.prototype.request = function(e) {
                                                        "string" == typeof e && (e = r.merge({
                                                            url: arguments[0]
                                                        }, arguments[1])), (e = r.merge(o, {
                                                            method: "get"
                                                        }, this.defaults, e)).method = e.method.toLowerCase();
                                                        var t = [a, void 0],
                                                            n = Promise.resolve(e);
                                                        for (this.interceptors.request.forEach((function(e) {
                                                                t.unshift(e.fulfilled, e.rejected)
                                                            })), this.interceptors.response.forEach((function(e) {
                                                                t.push(e.fulfilled, e.rejected)
                                                            })); t.length;) n = n.then(t.shift(), t.shift());
                                                        return n
                                                    }, r.forEach(["delete", "get", "head", "options"], (function(e) {
                                                        s.prototype[e] = function(t, n) {
                                                            return this.request(r.merge(n || {}, {
                                                                method: e,
                                                                url: t
                                                            }))
                                                        }
                                                    })), r.forEach(["post", "put", "patch"], (function(e) {
                                                        s.prototype[e] = function(t, n, o) {
                                                            return this.request(r.merge(o || {}, {
                                                                method: e,
                                                                url: t,
                                                                data: n
                                                            }))
                                                        }
                                                    })), e.exports = s
                                                }, 80782: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(64867);

                                                    function r() {
                                                        this.handlers = []
                                                    }
                                                    r.prototype.use = function(e, t) {
                                                        return this.handlers.push({
                                                            fulfilled: e,
                                                            rejected: t
                                                        }), this.handlers.length - 1
                                                    }, r.prototype.eject = function(e) {
                                                        this.handlers[e] && (this.handlers[e] = null)
                                                    }, r.prototype.forEach = function(e) {
                                                        o.forEach(this.handlers, (function(t) {
                                                            null !== t && e(t)
                                                        }))
                                                    }, e.exports = r
                                                }, 85061: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(80481);
                                                    e.exports = function(e, t, n, r, i) {
                                                        var a = new Error(e);
                                                        return o(a, t, n, r, i)
                                                    }
                                                }, 13572: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(64867),
                                                        r = n(18527),
                                                        i = n(26502),
                                                        a = n(45655),
                                                        s = n(91793),
                                                        l = n(7303);

                                                    function c(e) {
                                                        e.cancelToken && e.cancelToken.throwIfRequested()
                                                    }
                                                    e.exports = function(e) {
                                                        return c(e), e.baseURL && !s(e.url) && (e.url = l(e.baseURL, e.url)), e.headers = e.headers || {}, e.data = r(e.data, e.headers, e.transformRequest), e.headers = o.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers || {}), o.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (function(t) {
                                                            delete e.headers[t]
                                                        })), (e.adapter || a.adapter)(e).then((function(t) {
                                                            return c(e), t.data = r(t.data, t.headers, e.transformResponse), t
                                                        }), (function(t) {
                                                            return i(t) || (c(e), t && t.response && (t.response.data = r(t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t)
                                                        }))
                                                    }
                                                }, 80481: e => {
                                                    "use strict";
                                                    e.exports = function(e, t, n, o, r) {
                                                        return e.config = t, n && (e.code = n), e.request = o, e.response = r, e
                                                    }
                                                }, 36026: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(85061);
                                                    e.exports = function(e, t, n) {
                                                        var r = n.config.validateStatus;
                                                        n.status && r && !r(n.status) ? t(o("Request failed with status code " + n.status, n.config, null, n.request, n)) : e(n)
                                                    }
                                                }, 18527: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(64867);
                                                    e.exports = function(e, t, n) {
                                                        return o.forEach(n, (function(n) {
                                                            e = n(e, t)
                                                        })), e
                                                    }
                                                }, 45655: (e, t, n) => {
                                                    "use strict";
                                                    var o = n(34155),
                                                        r = n(64867),
                                                        i = n(16016),
                                                        a = {
                                                            "Content-Type": "application/x-www-form-urlencoded"
                                                        };

                                                    function s(e, t) {
                                                        !r.isUndefined(e) && r.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t)
                                                    }
                                                    var l, c = {
                                                        adapter: (("undefined" != typeof XMLHttpRequest || void 0 !== o) && (l = n(55448)), l),
                                                        transformRequest: [function(e, t) {
                                                            return i(t, "Content-Type"), r.isFormData(e) || r.isArrayBuffer(e) || r.isBuffer(e) || r.isStream(e) || r.isFile(e) || r.isBlob(e) ? e : r.isArrayBufferView(e) ? e.buffer : r.isURLSearchParams(e) ? (s(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString()) : r.isObject(e) ? (s(t, "application/json;charset=utf-8"), JSON.stringify(e)) : e
                                                        }],
                                                        transformResponse: [function(e) {
                                                            if ("string" == typeof e) try {
                                                                e = JSON.parse(e)
                                                            } catch (e) {}
                                                            return e
                                                        }],
                                                        timeout: 0,
                                                        xsrfCookieName: "XSRF-TOKEN",
                                                        xsrfHeaderName: "X-XSRF-TOKEN",
                                                        maxContentLength: -1,
                                                        validateStatus: function(e) {
                                                            return e >= 200 && e < 300
                                                        }
                                                    };
                                                    c.headers = {
                                                        common: {
                                                            Accept: "application/json, text/plain, */*"
                                                        }
                                                    }, r.forEach(["delete", "get", "head"], (function(e) {
                                                        c.headers[e] = {}
                                                    })), r.forEach(["post", "put", "patch"], (function(e) {
                                                        c.headers[e] = r.merge(a)
                                                    })), e.exports = c
                                                }, 91849: e => {
                                                    "use strict";
                                                    e.exports = function(e, t) {
                                                            return function() {
                                                                    for (var n = new Array(arguments.length), o = 0; o {
                                                                            "use strict";

                                                                            function t() {
                                                                                this.message = "String contains an invalid character"
                                                                            }
                                                                            t.prototype = new Error, t.prototype.code = 5, t.prototype.name = "InvalidCharacterError", e.exports = function(e) {
                                                                                for (var n, o, r = String(e), i = "", a = 0, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; r.charAt(0 | a) || (s = "=", a % 1); i += s.charAt(63 & n >> 8 - a % 1 * 8)) {
                                                                                    if ((o = r.charCodeAt(a += 3 / 4)) > 255) throw new t;
                                                                                    n = n << 8 | o
                                                                                }
                                                                                return i
                                                                            }
                                                                        }, 15327: (e, t, n) => {
                                                                            "use strict";
                                                                            var o = n(64867);

                                                                            function r(e) {
                                                                                return encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
                                                                            }
                                                                            e.exports = function(e, t, n) {
                                                                                if (!t) return e;
                                                                                var i;
                                                                                if (n) i = n(t);
                                                                                else if (o.isURLSearchParams(t)) i = t.toString();
                                                                                else {
                                                                                    var a = [];
                                                                                    o.forEach(t, (function(e, t) {
                                                                                        null != e && (o.isArray(e) ? t += "[]" : e = [e], o.forEach(e, (function(e) {
                                                                                            o.isDate(e) ? e = e.toISOString() : o.isObject(e) && (e = JSON.stringify(e)), a.push(r(t) + "=" + r(e))
                                                                                        })))
                                                                                    })), i = a.join("&")
                                                                                }
                                                                                return i && (e += (-1 === e.indexOf("?") ? "?" : "&") + i), e
                                                                            }
                                                                        }, 7303: e => {
                                                                            "use strict";
                                                                            e.exports = function(e, t) {
                                                                                return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e
                                                                            }
                                                                        }, 4372: (e, t, n) => {
                                                                            "use strict";
                                                                            var o = n(64867);
                                                                            e.exports = o.isStandardBrowserEnv() ? {
                                                                                write: function(e, t, n, r, i, a) {
                                                                                    var s = [];
                                                                                    s.push(e + "=" + encodeURIComponent(t)), o.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()), o.isString(r) && s.push("path=" + r), o.isString(i) && s.push("domain=" + i), !0 === a && s.push("secure"), document.cookie = s.join("; ")
                                                                                },
                                                                                read: function(e) {
                                                                                    var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                                                                                    return t ? decodeURIComponent(t[3]) : null
                                                                                },
                                                                                remove: function(e) {
                                                                                    this.write(e, "", Date.now() - 864e5)
                                                                                }
                                                                            } : {
                                                                                write: function() {},
                                                                                read: function() {
                                                                                    return null
                                                                                },
                                                                                remove: function() {}
                                                                            }
                                                                        }, 91793: e => {
                                                                            "use strict";
                                                                            e.exports = function(e) {
                                                                                return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)
                                                                            }
                                                                        }, 67985: (e, t, n) => {
                                                                            "use strict";
                                                                            var o = n(64867);
                                                                            e.exports = o.isStandardBrowserEnv() ? function() {
                                                                                var e, t = /(msie|trident)/i.test(navigator.userAgent),
                                                                                    n = document.createElement("a");

                                                                                function r(e) {
                                                                                    var o = e;
                                                                                    return t && (n.setAttribute("href", o), o = n.href), n.setAttribute("href", o), {
                                                                                        href: n.href,
                                                                                        protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                                                                                        host: n.host,
                                                                                        search: n.search ? n.search.replace(/^\?/, "") : "",
                                                                                        hash: n.hash ? n.hash.replace(/^#/, "") : "",
                                                                                        hostname: n.hostname,
                                                                                        port: n.port,
                                                                                        pathname: "/" === n.pathname.charAt(0) ? n.pathname : "/" + n.pathname
                                                                                    }
                                                                                }
                                                                                return e = r(window.location.href),
                                                                                    function(t) {
                                                                                        var n = o.isString(t) ? r(t) : t;
                                                                                        return n.protocol === e.protocol && n.host === e.host
                                                                                    }
                                                                            }() : function() {
                                                                                return !0
                                                                            }
                                                                        }, 16016: (e, t, n) => {
                                                                            "use strict";
                                                                            var o = n(64867);
                                                                            e.exports = function(e, t) {
                                                                                o.forEach(e, (function(n, o) {
                                                                                    o !== t && o.toUpperCase() === t.toUpperCase() && (e[t] = n, delete e[o])
                                                                                }))
                                                                            }
                                                                        }, 84109: (e, t, n) => {
                                                                            "use strict";
                                                                            var o = n(64867),
                                                                                r = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
                                                                            e.exports = function(e) {
                                                                                var t, n, i, a = {};
                                                                                return e ? (o.forEach(e.split("\n"), (function(e) {
                                                                                    if (i = e.indexOf(":"), t = o.trim(e.substr(0, i)).toLowerCase(), n = o.trim(e.substr(i + 1)), t) {
                                                                                        if (a[t] && r.indexOf(t) >= 0) return;
                                                                                        a[t] = "set-cookie" === t ? (a[t] ? a[t] : []).concat([n]) : a[t] ? a[t] + ", " + n : n
                                                                                    }
                                                                                })), a) : a
                                                                            }
                                                                        }, 8713: e => {
                                                                            "use strict";
                                                                            e.exports = function(e) {
                                                                                return function(t) {
                                                                                    return e.apply(null, t)
                                                                                }
                                                                            }
                                                                        }, 64867: (e, t, n) => {
                                                                            "use strict";
                                                                            var o = n(91849),
                                                                                r = n(48738),
                                                                                i = Object.prototype.toString;

                                                                            function a(e) {
                                                                                return "[object Array]" === i.call(e)
                                                                            }

                                                                            function s(e) {
                                                                                return null !== e && "object" == typeof e
                                                                            }

                                                                            function l(e) {
                                                                                return "[object Function]" === i.call(e)
                                                                            }

                                                                            function c(e, t) {
                                                                                if (null != e)
                                                                                    if ("object" != typeof e && (e = [e]), a(e))
                                                                                        for (var n = 0, o = e.length; n {
                                                                                                "use strict";
                                                                                                n.d(t, {
                                                                                                    Z: () => b
                                                                                                });
                                                                                                var o = n(67294),
                                                                                                    r = n(41825),
                                                                                                    i = n(24820),
                                                                                                    a = n(32701),
                                                                                                    s = n(10684),
                                                                                                    l = n(15538),
                                                                                                    c = n(16792),
                                                                                                    u = n(97985),
                                                                                                    d = n(97975),
                                                                                                    p = n(97118);

                                                                                                function f(e) {
                                                                                                    return (f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                        return typeof e
                                                                                                    } : function(e) {
                                                                                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                    })(e)
                                                                                                }

                                                                                                function g(e, t) {
                                                                                                    for (var n = 0; n {
                                                                                                            window.axios = n(9669), window.axios.defaults.baseURL = document.head.querySelector('meta[name="base-url"]').content, window.axios.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
                                                                                                            var o = document.head.querySelector('meta[name="auth-token"]');
                                                                                                            o && (window.axios.defaults.headers.common.Authorization = "Bearer " + o.content), window.mapData && (window.mapData.map.id && (window.axios.defaults.headers.common["X-Map-ID"] = window.mapData.map.id), window.game && window.game.id && (window.axios.defaults.headers.common["X-Game-ID"] = window.game.id));
                                                                                                            var r = document.documentElement.lang;
                                                                                                            window.axios.defaults.headers.common["X-Locale"] = r;
                                                                                                            var i = document.head.querySelector('meta[name="csrf-token"]');
                                                                                                            i ? window.axios.defaults.headers.common["X-CSRF-TOKEN"] = i.content : console.error("CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token"), Number.isInteger = Number.isInteger || function(e) {
                                                                                                                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
                                                                                                            }, window.i18n = window.i18n || {
                                                                                                                locale: "en",
                                                                                                                messages: {}
                                                                                                            }, "en" !== window.i18n.locale ? window.__ = function(e) {
                                                                                                                return window.i18n.messages[e] || e
                                                                                                            } : window.__ = function(e) {
                                                                                                                return e
                                                                                                            }
                                                                                                        }, 74778: (e, t, n) => {
                                                                                                            "use strict";
                                                                                                            n.d(t, {
                                                                                                                F: () => C,
                                                                                                                Z: () => O
                                                                                                            });
                                                                                                            var o = n(67294),
                                                                                                                r = n(24820),
                                                                                                                i = n(32701),
                                                                                                                a = n(10684),
                                                                                                                s = n(15538),
                                                                                                                l = n(82669),
                                                                                                                c = n(67954),
                                                                                                                u = n(609),
                                                                                                                d = n(97985),
                                                                                                                p = n(97975),
                                                                                                                f = n(47919);

                                                                                                            function g(e) {
                                                                                                                return (g = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                    return typeof e
                                                                                                                } : function(e) {
                                                                                                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                })(e)
                                                                                                            }

                                                                                                            function h(e, t) {
                                                                                                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                                                                                                            }

                                                                                                            function m(e, t) {
                                                                                                                for (var n = 0; n {
                                                                                                                        "use strict";
                                                                                                                        n.d(t, {
                                                                                                                            Z: () => C
                                                                                                                        });
                                                                                                                        var o = n(67294),
                                                                                                                            r = n(96486),
                                                                                                                            i = n(24820),
                                                                                                                            a = n(32701),
                                                                                                                            s = n(10684),
                                                                                                                            l = n(15538),
                                                                                                                            c = n(82669),
                                                                                                                            u = n(67954),
                                                                                                                            d = n(609),
                                                                                                                            p = n(97985),
                                                                                                                            f = n(97975),
                                                                                                                            g = n(38650),
                                                                                                                            h = n(47919);

                                                                                                                        function m(e) {
                                                                                                                            return (m = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                return typeof e
                                                                                                                            } : function(e) {
                                                                                                                                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                            })(e)
                                                                                                                        }

                                                                                                                        function y(e, t) {
                                                                                                                            for (var n = 0; n0 ? x || e.categories[0].id : 0, isSaving: !1, shouldCreateNote: !1
                                                                                                                            }, t
                                                                                                                        }
                                                                                                                        return t = k, (n = [{
                                                                                                                            key: "render",
                                                                                                                            value: function() {
                                                                                                                                var e = this,
                                                                                                                                    t = window.user && window.user.hasPro;
                                                                                                                                return o.createElement("div", null, o.createElement(i.Z, {
                                                                                                                                    isOpen: !0,
                                                                                                                                    fade: !1,
                                                                                                                                    toggle: this.onPressCancel,
                                                                                                                                    backdrop: !0,
                                                                                                                                    autoFocus: !1,
                                                                                                                                    keyboard: !0
                                                                                                                                }, o.createElement(a.Z, {
                                                                                                                                    toggle: this.onPressCancel
                                                                                                                                }, this.props.suggestion ? "Edit Suggestion" : "Suggest New Location"), o.createElement(s.Z, null, o.createElement(l.Z, null, o.createElement("p", {
                                                                                                                                    className: "alert alert-dark text-center",
                                                                                                                                    style: {
                                                                                                                                        fontSize: 13
                                                                                                                                    }
                                                                                                                                }, "A mod will review your suggestion before it becomes visible on the map!"), o.createElement(c.Z, null, o.createElement(u.Z, {
                                                                                                                                    for: "location-title"
                                                                                                                                }, "Location Title"), o.createElement(h.Z, {
                                                                                                                                    type: "text",
                                                                                                                                    name: "location-title",
                                                                                                                                    id: "location-title",
                                                                                                                                    onChange: function(t) {
                                                                                                                                        e.setState({
                                                                                                                                            title: t.target.value
                                                                                                                                        })
                                                                                                                                    },
                                                                                                                                    value: this.state.title,
                                                                                                                                    autoFocus: !0,
                                                                                                                                    autoComplete: "off"
                                                                                                                                })), o.createElement(c.Z, null, o.createElement(u.Z, {
                                                                                                                                    for: "location-category"
                                                                                                                                }, "Location Category"), o.createElement(d.Z, {
                                                                                                                                    type: "select",
                                                                                                                                    name: "location-category",
                                                                                                                                    id: "location-category",
                                                                                                                                    value: this.state.categoryId,
                                                                                                                                    onChange: function(t) {
                                                                                                                                        var n = Number(t.target.value),
                                                                                                                                            o = store.getState().map.categories[n];
                                                                                                                                        e.setState({
                                                                                                                                            categoryId: n,
                                                                                                                                            description: !e.state.description && o.template ? o.template : e.state.description
                                                                                                                                        })
                                                                                                                                    }
                                                                                                                                }, this.props.categories.map((function(e) {
                                                                                                                                    return o.createElement("option", {
                                                                                                                                        key: e.id,
                                                                                                                                        value: e.id
                                                                                                                                    }, e.title)
                                                                                                                                })))), o.createElement(c.Z, null, o.createElement(u.Z, {
                                                                                                                                    for: "location-description"
                                                                                                                                }, "Location Description"), o.createElement(h.Z, {
                                                                                                                                    type: "textarea",
                                                                                                                                    name: "location-description",
                                                                                                                                    id: "location-description",
                                                                                                                                    onChange: function(t) {
                                                                                                                                        e.setState({
                                                                                                                                            description: t.target.value
                                                                                                                                        })
                                                                                                                                    },
                                                                                                                                    placeholder: "You can use markdown here e.g. **This will be bold** or _This will be italic_",
                                                                                                                                    rows: 6,
                                                                                                                                    value: this.state.description
                                                                                                                                })), o.createElement(c.Z, null, o.createElement(u.Z, {
                                                                                                                                    for: "location-image"
                                                                                                                                }, "Screenshot Url (optional)"), o.createElement(d.Z, {
                                                                                                                                    type: "url",
                                                                                                                                    name: "location-image",
                                                                                                                                    id: "location-image",
                                                                                                                                    placeholder: "https://i.imgur.com/zvA1LHn",
                                                                                                                                    onChange: function(t) {
                                                                                                                                        var n = e.state.images;
                                                                                                                                        n[0] = t.target.value, e.setState({
                                                                                                                                            images: n
                                                                                                                                        })
                                                                                                                                    },
                                                                                                                                    value: this.state.images.length ? this.state.images[0] : void 0,
                                                                                                                                    autoComplete: "off"
                                                                                                                                }), o.createElement("small", {
                                                                                                                                    className: "form-text",
                                                                                                                                    style: {
                                                                                                                                        opacity: .5
                                                                                                                                    }
                                                                                                                                }, "Resolution should be at least 1920x1080")), !this.props.suggestion && t && o.createElement(c.Z, {
                                                                                                                                    check: !0
                                                                                                                                }, o.createElement(u.Z, {
                                                                                                                                    check: !0
                                                                                                                                }, o.createElement(d.Z, {
                                                                                                                                    type: "checkbox",
                                                                                                                                    name: "create_note",
                                                                                                                                    onChange: function(t) {
                                                                                                                                        return e.setState({
                                                                                                                                            shouldCreateNote: !!t.target.value
                                                                                                                                        })
                                                                                                                                    }
                                                                                                                                }), " ", "Also add this suggestion to My Notes")))), o.createElement(p.Z, null, o.createElement(f.Z, {
                                                                                                                                    color: "dark",
                                                                                                                                    onClick: this.onPressCancel
                                                                                                                                }, "Cancel"), o.createElement(f.Z, {
                                                                                                                                    style: {
                                                                                                                                        marginRight: "auto"
                                                                                                                                    },
                                                                                                                                    color: "danger",
                                                                                                                                    onClick: this.onPressDelete,
                                                                                                                                    disabled: this.state.isSaving
                                                                                                                                }, "Delete"), o.createElement(f.Z, {
                                                                                                                                    color: "primary",
                                                                                                                                    onClick: this.onPressSave,
                                                                                                                                    disabled: this.state.isSaving
                                                                                                                                }, "Suggest Changes!"))))
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onPressSave",
                                                                                                                            value: function(e) {
                                                                                                                                var t = this,
                                                                                                                                    n = this.props.suggestion,
                                                                                                                                    o = this.state,
                                                                                                                                    i = o.title,
                                                                                                                                    a = o.description,
                                                                                                                                    s = o.images,
                                                                                                                                    l = o.categoryId,
                                                                                                                                    c = o.shouldCreateNote;
                                                                                                                                e.preventDefault(), i ? (this.setState({
                                                                                                                                    isSaving: !0
                                                                                                                                }), (n ? window.axios.put("/api/v1/suggestions/".concat(n.id), {
                                                                                                                                    map_id: window.mapData.map.id,
                                                                                                                                    title: i,
                                                                                                                                    description: a,
                                                                                                                                    image: s.join(" || "),
                                                                                                                                    category_id: l,
                                                                                                                                    latitude: this.props.position.lat,
                                                                                                                                    longitude: this.props.position.lng
                                                                                                                                }) : window.axios.post("/api/v1/suggestions", {
                                                                                                                                    map_id: window.mapData.map.id,
                                                                                                                                    title: i,
                                                                                                                                    description: a,
                                                                                                                                    image: s.join(" || "),
                                                                                                                                    category_id: l,
                                                                                                                                    latitude: this.props.position.lat,
                                                                                                                                    longitude: this.props.position.lng,
                                                                                                                                    create_note: c
                                                                                                                                })).then((function(e) {
                                                                                                                                    window.toastr.success("The mods will review it ASAP", "Suggestion submitted!"), t.setState({
                                                                                                                                        isSaving: !1
                                                                                                                                    }), t.props.onPressDone(), n ? window.store.dispatch(g.cq.updateSuggestion(e.data.suggestion)) : (window.store.dispatch(g.cq.addSuggestion(e.data.suggestion)), c && window.store.dispatch(g.cq.addNote(e.data.note)), x = l)
                                                                                                                                })).catch((function(e) {
                                                                                                                                    t.setState({
                                                                                                                                        isSaving: !1
                                                                                                                                    }), console.warn(e);
                                                                                                                                    var n = r.get(e, "response.data.message", e.message);
                                                                                                                                    window.toastr.error(n, "Something went wrong")
                                                                                                                                }))) : window.toastr.error("Please add a title", "Invalid Submission")
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onPressDelete",
                                                                                                                            value: function() {
                                                                                                                                var e = this,
                                                                                                                                    t = this.props.suggestion;
                                                                                                                                t ? window.axios.delete("/api/v1/suggestions/".concat(t.id)).then((function(n) {
                                                                                                                                    window.toastr.success("Suggestion deleted!"), e.setState({
                                                                                                                                        isSaving: !1
                                                                                                                                    }), window.store.dispatch(g.cq.deleteSuggestion(t)), e.props.onPressDone()
                                                                                                                                })).catch((function(t) {
                                                                                                                                    e.setState({
                                                                                                                                        isSaving: !1
                                                                                                                                    }), console.warn(t);
                                                                                                                                    var n = r.get(t, "response.data.message", t.message);
                                                                                                                                    window.toastr.error(n, "Something went wrong")
                                                                                                                                })) : (this.props.onPressDone(), window.mapManager.deleteSuggestionMarker())
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onPressCancel",
                                                                                                                            value: function() {
                                                                                                                                this.props.onPressDone()
                                                                                                                            }
                                                                                                                        }]) && y(t.prototype, n), m && y(t, m), k
                                                                                                                    }(o.Component)
                                                                                                                }, 59625: (e, t, n) => {
                                                                                                                    "use strict";
                                                                                                                    n.d(t, {
                                                                                                                        Z: () => d
                                                                                                                    });
                                                                                                                    var o = n(67294);

                                                                                                                    function r(e) {
                                                                                                                        return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                            return typeof e
                                                                                                                        } : function(e) {
                                                                                                                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                        })(e)
                                                                                                                    }

                                                                                                                    function i(e, t) {
                                                                                                                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                                                                                                                    }

                                                                                                                    function a(e, t) {
                                                                                                                        for (var n = 0; n {
                                                                                                                                "use strict";
                                                                                                                                n.d(t, {
                                                                                                                                    Z: () => N
                                                                                                                                });
                                                                                                                                var o = n(67294),
                                                                                                                                    r = n(96486),
                                                                                                                                    i = n(41825),
                                                                                                                                    a = n(38650),
                                                                                                                                    s = n(97118),
                                                                                                                                    l = n(5794),
                                                                                                                                    c = n(43249),
                                                                                                                                    u = n(30148),
                                                                                                                                    d = n(74864),
                                                                                                                                    p = n(32467),
                                                                                                                                    f = n(68450);

                                                                                                                                function g(e) {
                                                                                                                                    return (g = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                        return typeof e
                                                                                                                                    } : function(e) {
                                                                                                                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                    })(e)
                                                                                                                                }

                                                                                                                                function h(e) {
                                                                                                                                    return function(e) {
                                                                                                                                        if (Array.isArray(e)) return m(e)
                                                                                                                                    }(e) || function(e) {
                                                                                                                                        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                                                                                                                                    }(e) || function(e, t) {
                                                                                                                                        if (!e) return;
                                                                                                                                        if ("string" == typeof e) return m(e, t);
                                                                                                                                        var n = Object.prototype.toString.call(e).slice(8, -1);
                                                                                                                                        "Object" === n && e.constructor && (n = e.constructor.name);
                                                                                                                                        if ("Map" === n || "Set" === n) return Array.from(e);
                                                                                                                                        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return m(e, t)
                                                                                                                                    }(e) || function() {
                                                                                                                                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                                                                                                                    }()
                                                                                                                                }

                                                                                                                                function m(e, t) {
                                                                                                                                    (null == t || t > e.length) && (t = e.length);
                                                                                                                                    for (var n = 0, o = new Array(t); n0
                                                                                                                                    }, iframe: {
                                                                                                                                        patterns: {
                                                                                                                                            youtube: {
                                                                                                                                                index: "youtu",
                                                                                                                                                id: function(e) {
                                                                                                                                                    var t = 0,
                                                                                                                                                        n = e.match(/^.*(?:youtu.be\/|v\/|e\/|u\/\w+\/|embed\/|v=)([^#\&\?]*).*/);
                                                                                                                                                    if (!n || !n[1]) return null;
                                                                                                                                                    if (-1 !== e.indexOf("t=")) {
                                                                                                                                                        var o = e.split("t=")[1].replace("h", ":").replace("m", ":").replace("s", "").split(":");
                                                                                                                                                        1 === o.length ? t = o[0] : 2 === o.length ? t = 60 * +o[0] + +o[1] : 3 === o.length && (t = 60 * +o[0] * 60 + 60 * +o[1] + +o[2])
                                                                                                                                                    }
                                                                                                                                                    var r = "?autoplay=1";
                                                                                                                                                    return t > 0 && (r = "?start=" + t + "&autoplay=1"), n[1] + r
                                                                                                                                                },
                                                                                                                                                src: "//www.youtube.com/embed/%id%"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }, callbacks: {
                                                                                                                                        open: function() {},
                                                                                                                                        close: function() {
                                                                                                                                            t.onMediaViewerModalClosed()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }, n), t.setState({
                                                                                                                                isShowingMediaViewerModal: !0
                                                                                                                            })
                                                                                                                        }, t.onClickMarkAsFound = t.onClickMarkAsFound.bind(E(t)), t.onClickSuggestEdit = t.onClickSuggestEdit.bind(E(t)), t.onEditButtonClicked = t.onEditButtonClicked.bind(E(t)), t.onFeaturesButtonClicked = t.onFeaturesButtonClicked.bind(E(t)), t.onDeleteButtonClicked = t.onDeleteButtonClicked.bind(E(t)), t.onAddMediaButtonClicked = t.onAddMediaButtonClicked.bind(E(t)), t.onPermalinkButtonClicked = window.config.v2popupEnabled ? t.onPermalinkButtonClickedV2.bind(E(t)) : t.onPermalinkButtonClicked.bind(E(t)), t.renderPermalink = window.config.v2popupEnabled ? t.renderSimplePermalink.bind(E(t)) : t.renderPermalink.bind(E(t)), t.onClickImage = t.onClickImage.bind(E(t)), t.onKeyDown = t.onKeyDown.bind(E(t)), t.onMediaViewerModalClosed = t.onMediaViewerModalClosed.bind(E(t)), t.renderToolbar = e.renderToolbar || t.renderToolbar, t.foundLocationService = new u.Z((function(e, n) {
                                                                                                                            t.props.markLocation(e, n)
                                                                                                                        })), t.subgroupTitle = T[e.category.id], window.isEditor && (t.addDragListeners = function() {
                                                                                                                            document.body.addEventListener("dragover", this.highlightDragArea, !1), document.body.addEventListener("dragleave", this.unhighlightDragArea, !1), document.body.addEventListener("drop", this.onDropFile, !1)
                                                                                                                        }, t.removeDragListeners = function() {
                                                                                                                            document.body.removeEventListener("dragover", this.highlightDragArea, !1), document.body.removeEventListener("dragleave", this.unhighlightDragArea, !1), document.body.removeEventListener("drop", this.onDropFile, !1)
                                                                                                                        }, t.highlightDragArea = function(e) {
                                                                                                                            e.preventDefault(), this.setState({
                                                                                                                                isDraggingFile: !0
                                                                                                                            })
                                                                                                                        }.bind(E(t)), t.unhighlightDragArea = function(e) {
                                                                                                                            this.setState({
                                                                                                                                isDraggingFile: !1
                                                                                                                            })
                                                                                                                        }.bind(E(t)), t.onDropFile = function(e) {
                                                                                                                            e.preventDefault(), this.setState({
                                                                                                                                isDraggingFile: !1
                                                                                                                            }), this.setState({
                                                                                                                                isShowingAddMediaModal: !0,
                                                                                                                                droppedMediaFiles: e.target.files || e.dataTransfer.files
                                                                                                                            })
                                                                                                                        }.bind(E(t)), t.preventDropOutside = function(e) {
                                                                                                                            e.target && this.dragElement && this.dragElement.contains(e.target) || e.preventDefault()
                                                                                                                        }.bind(E(t)), t.onPasteEvent = function(e) {
                                                                                                                            for (var n, o, r = null != (o = null === (n = e.clipboardData) || void 0 === n ? void 0 : n.items) ? o : [], i = 0; i3, r = n ? e.slice(0, 2) : e, i = n ? 3 : r.length;
                                                                                                                                return o.createElement("div", {
                                                                                                                                    className: "marker-images"
                                                                                                                                }, r.map((function(n, r) {
                                                                                                                                    if ("image" === n.type) return o.createElement("div", {
                                                                                                                                        key: n.id,
                                                                                                                                        className: "marker-image-wrapper",
                                                                                                                                        onClick: function() {
                                                                                                                                            return t.onClickImage(n, e, r)
                                                                                                                                        }
                                                                                                                                    }, o.createElement("img", {
                                                                                                                                        className: "marker-image marker-image-group-".concat(i),
                                                                                                                                        src: n.url
                                                                                                                                    }));
                                                                                                                                    if ("youtube" === n.type) return o.createElement("div", {
                                                                                                                                        key: n.id,
                                                                                                                                        className: "marker-image-wrapper",
                                                                                                                                        onClick: function() {
                                                                                                                                            return t.onClickYoutubeLink(n, e, r)
                                                                                                                                        }
                                                                                                                                    }, o.createElement("img", {
                                                                                                                                        className: "marker-image marker-video-image marker-image-group-".concat(i),
                                                                                                                                        src: "https://img.youtube.com/vi/" + n.file_name + "/" + L
                                                                                                                                    }), o.createElement("i", {
                                                                                                                                        className: "icon ion-logo-youtube video-icon"
                                                                                                                                    }));
                                                                                                                                    if ("ign_video" === n.type) {
                                                                                                                                        var a = t.getThumbnailForIgnVideo(n);
                                                                                                                                        return o.createElement("div", {
                                                                                                                                            key: n.id,
                                                                                                                                            className: "marker-image-wrapper",
                                                                                                                                            onClick: function() {
                                                                                                                                                return t.onClickYoutubeLink(n, e, r)
                                                                                                                                            }
                                                                                                                                        }, o.createElement("img", {
                                                                                                                                            className: "marker-image marker-video-image marker-image-group-".concat(i),
                                                                                                                                            src: a || ""
                                                                                                                                        }), o.createElement("i", {
                                                                                                                                            className: "icon ion-logo-youtube video-icon"
                                                                                                                                        }))
                                                                                                                                    }
                                                                                                                                    return console.warn("Unhandled media type: ".concat(n.type)), null
                                                                                                                                })), n && o.createElement("div", {
                                                                                                                                    className: "marker-image-wrapper more-media-wrapper",
                                                                                                                                    onClick: function() {
                                                                                                                                        return t.onClickImage(e[2], e, 2)
                                                                                                                                    }
                                                                                                                                }, o.createElement("img", {
                                                                                                                                    className: "marker-image marker-image-group-".concat(i),
                                                                                                                                    src: e[2].url
                                                                                                                                }), o.createElement("div", {
                                                                                                                                    className: "more-media-button"
                                                                                                                                }, "+ ", e.length - r.length)))
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onClickMarkAsFound",
                                                                                                                            value: function() {
                                                                                                                                this.foundLocationService.markLocationFound(this.props.location, !this.props.isFound)
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onClickSuggestEdit",
                                                                                                                            value: function() {
                                                                                                                                this.setState({
                                                                                                                                    isShowingSuggestionModal: !0
                                                                                                                                })
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onEditButtonClicked",
                                                                                                                            value: function() {
                                                                                                                                this.props.showMarkerEditMode(!0)
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onFeaturesButtonClicked",
                                                                                                                            value: function() {
                                                                                                                                var e = this.props.location;
                                                                                                                                window.store.dispatch(s.cq.showLocationInfo(e, !1)), window.mapManager.enableLocationFeaturesEditor(e)
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onDeleteButtonClicked",
                                                                                                                            value: function(e) {
                                                                                                                                (e.shiftKey || e.metaKey || window.confirm('Are you sure you want to delete "'.concat(this.props.location.title, '"?\nShift + Click Delete to skip this message in future'))) && this.props.deleteLocation(this.props.location)
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onAddMediaButtonClicked",
                                                                                                                            value: function() {
                                                                                                                                this.setState({
                                                                                                                                    isShowingAddMediaModal: !0
                                                                                                                                })
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onPermalinkButtonClicked",
                                                                                                                            value: function() {
                                                                                                                                (0, l.n)(this.permalinkInput), window.Analytics.trackEngagement("location link copy", {}, {
                                                                                                                                    category: this.props.location.category,
                                                                                                                                    location: this.props.location
                                                                                                                                })
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onPermalinkButtonClickedV2",
                                                                                                                            value: function(e) {
                                                                                                                                var t = e.target;
                                                                                                                                (0, l.i)(window.mapUrl + "?locationIds=" + this.props.location.id), $(t).tooltip("show"), setTimeout((function() {
                                                                                                                                    $(t).tooltip("hide")
                                                                                                                                }), 2e3), window.Analytics.trackEngagement("location link copy", {}, {
                                                                                                                                    category: this.props.location.category,
                                                                                                                                    location: this.props.location
                                                                                                                                })
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onClickYoutubeLink",
                                                                                                                            value: function(e, t, n) {
                                                                                                                                this.showMediaViewerModalGallery(t, n)
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onClickImage",
                                                                                                                            value: function(e, t, n) {
                                                                                                                                this.showMediaViewerModalGallery(t, n)
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onClickUpgrade",
                                                                                                                            value: function() {
                                                                                                                                window.open(window.baseUrl + "/upgrade", "_blank")
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onKeyDown",
                                                                                                                            value: function(e) {
                                                                                                                                e = e || window.event, this.props.isEditingMarker || this.state.isShowingAddMediaModal || this.state.isShowingSuggestionModal || this.state.isShowingMediaViewerModal || (27 === e.keyCode ? this.props.showLocationInfo(this.props.location, !1) : window.isEditor && (69 === e.keyCode && (e.ctrlKey || e.metaKey) ? (this.onEditButtonClicked(), e.preventDefault()) : 65 === e.keyCode && (e.ctrlKey || e.metaKey) && (this.onAddMediaButtonClicked(), e.preventDefault())))
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "onMediaViewerModalClosed",
                                                                                                                            value: function() {
                                                                                                                                this.setState({
                                                                                                                                    isShowingMediaViewerModal: !1
                                                                                                                                })
                                                                                                                            }
                                                                                                                        }, {
                                                                                                                            key: "getThumbnailForIgnVideo",
                                                                                                                            value: function(e) {
                                                                                                                                var t = this,
                                                                                                                                    n = e.url.split("/videos/")[1];
                                                                                                                                return M[n] ? M[n] : (f.Z.getVideoPlayerProps(n).then((function(e) {
                                                                                                                                    var o = e.data.data.videoPlayerProps.thumbnails[0].styleUrl.replace("{size}", "large");
                                                                                                                                    M[n] = o, t.forceUpdate()
                                                                                                                                })).catch((function(e) {
                                                                                                                                    console.log("Error retreiving IGN video link for slug: " + n, e)
                                                                                                                                })), null)
                                                                                                                            }
                                                                                                                        }]) && y(t.prototype, n), r && y(t, r), a
                                                                                                                }(o.Component);
                                                                                                                const N = (0, i.$j)((function(e, t) {
                                                                                                                    return Object.assign(Object.assign({}, t), {
                                                                                                                        foundLocationsCount: e.user.foundLocationsCount,
                                                                                                                        isFound: a.wl.isLocationFound(e, t.location.id),
                                                                                                                        canMarkLocation: a.wl.canMarkLocation(e, t.location.id),
                                                                                                                        isEditingMarker: e.map.isEditingMarker,
                                                                                                                        selectedLocation: e.map.selectedLocation
                                                                                                                    })
                                                                                                                }), Object.assign(Object.assign({}, s.cq), a.cq), null, {
                                                                                                                    forwardRef: !0
                                                                                                                })(I)
                                                                                                            }, 74864: (e, t, n) => {
                                                                                                                    "use strict";
                                                                                                                    n.d(t, {
                                                                                                                        Z: () => k
                                                                                                                    });
                                                                                                                    var o = n(67294),
                                                                                                                        r = n(96486),
                                                                                                                        i = n(24820),
                                                                                                                        a = n(32701),
                                                                                                                        s = n(10684),
                                                                                                                        l = n(15538),
                                                                                                                        c = n(82669),
                                                                                                                        u = n(67954),
                                                                                                                        d = n(609),
                                                                                                                        p = n(97985),
                                                                                                                        f = n(97975),
                                                                                                                        g = n(47919);

                                                                                                                    function h(e) {
                                                                                                                        return (h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                            return typeof e
                                                                                                                        } : function(e) {
                                                                                                                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                        })(e)
                                                                                                                    }

                                                                                                                    function m(e, t) {
                                                                                                                        for (var n = 0; n {
                                                                                                                                "use strict";
                                                                                                                                n.d(t, {
                                                                                                                                    Z: () => y
                                                                                                                                });
                                                                                                                                var o = n(67294),
                                                                                                                                    r = n(41825),
                                                                                                                                    i = n(53346),
                                                                                                                                    a = n(38650),
                                                                                                                                    s = n(97118),
                                                                                                                                    l = n(5794);

                                                                                                                                function c(e) {
                                                                                                                                    return (c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                        return typeof e
                                                                                                                                    } : function(e) {
                                                                                                                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                    })(e)
                                                                                                                                }

                                                                                                                                function u(e, t) {
                                                                                                                                    for (var n = 0; n {
                                                                                                                                            "use strict";
                                                                                                                                            n.d(t, {
                                                                                                                                                Z: () => g
                                                                                                                                            });
                                                                                                                                            var o = n(67294),
                                                                                                                                                r = n(41825),
                                                                                                                                                i = n(97118),
                                                                                                                                                a = n(38650);

                                                                                                                                            function s(e) {
                                                                                                                                                return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                                    return typeof e
                                                                                                                                                } : function(e) {
                                                                                                                                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                                })(e)
                                                                                                                                            }

                                                                                                                                            function l(e, t) {
                                                                                                                                                for (var n = 0; n {
                                                                                                                                                        "use strict";
                                                                                                                                                        n.d(t, {
                                                                                                                                                            Z: () => f
                                                                                                                                                        });
                                                                                                                                                        var o = n(67294),
                                                                                                                                                            r = n(609),
                                                                                                                                                            i = n(74506);

                                                                                                                                                        function a(e) {
                                                                                                                                                            return (a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                                                return typeof e
                                                                                                                                                            } : function(e) {
                                                                                                                                                                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                                            })(e)
                                                                                                                                                        }

                                                                                                                                                        function s(e, t) {
                                                                                                                                                            for (var n = 0; n {
                                                                                                                                                                    "use strict";
                                                                                                                                                                    n.d(t, {
                                                                                                                                                                        Z: () => y
                                                                                                                                                                    });
                                                                                                                                                                    var o = n(67294),
                                                                                                                                                                        r = n(41825),
                                                                                                                                                                        i = n(96486),
                                                                                                                                                                        a = n(38650),
                                                                                                                                                                        s = n(97118),
                                                                                                                                                                        l = n(55928);

                                                                                                                                                                    function c(e) {
                                                                                                                                                                        return (c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                                                            return typeof e
                                                                                                                                                                        } : function(e) {
                                                                                                                                                                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                                                        })(e)
                                                                                                                                                                    }

                                                                                                                                                                    function u(e, t) {
                                                                                                                                                                        for (var n = 0; n {
                                                                                                                                                                                "use strict";
                                                                                                                                                                                n.d(t, {
                                                                                                                                                                                    Z: () => L
                                                                                                                                                                                });
                                                                                                                                                                                var o = n(67294),
                                                                                                                                                                                    r = n(96486),
                                                                                                                                                                                    i = n(53346),
                                                                                                                                                                                    a = n(24820),
                                                                                                                                                                                    s = n(32701),
                                                                                                                                                                                    l = n(10684),
                                                                                                                                                                                    c = n(15538),
                                                                                                                                                                                    u = n(82669),
                                                                                                                                                                                    d = n(609),
                                                                                                                                                                                    p = n(97985),
                                                                                                                                                                                    f = n(97975),
                                                                                                                                                                                    g = n(59625),
                                                                                                                                                                                    h = n(97118),
                                                                                                                                                                                    m = n(95742),
                                                                                                                                                                                    y = n(68450);

                                                                                                                                                                                function v(e) {
                                                                                                                                                                                    return (v = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                                                                        return typeof e
                                                                                                                                                                                    } : function(e) {
                                                                                                                                                                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                                                                    })(e)
                                                                                                                                                                                }

                                                                                                                                                                                function w(e) {
                                                                                                                                                                                    return function(e) {
                                                                                                                                                                                        if (Array.isArray(e)) return b(e)
                                                                                                                                                                                    }(e) || function(e) {
                                                                                                                                                                                        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                                                                                                                                                                                    }(e) || function(e, t) {
                                                                                                                                                                                        if (!e) return;
                                                                                                                                                                                        if ("string" == typeof e) return b(e, t);
                                                                                                                                                                                        var n = Object.prototype.toString.call(e).slice(8, -1);
                                                                                                                                                                                        "Object" === n && e.constructor && (n = e.constructor.name);
                                                                                                                                                                                        if ("Map" === n || "Set" === n) return Array.from(e);
                                                                                                                                                                                        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return b(e, t)
                                                                                                                                                                                    }(e) || function() {
                                                                                                                                                                                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                                                                                                                                                                    }()
                                                                                                                                                                                }

                                                                                                                                                                                function b(e, t) {
                                                                                                                                                                                    (null == t || t > e.length) && (t = e.length);
                                                                                                                                                                                    for (var n = 0, o = new Array(t); n0 && void 0 !== arguments[0] && arguments[0]; this.setState({
                                                                                                                                                                                            isSaving: !0
                                                                                                                                                                                        });
                                                                                                                                                                                        var n = new FormData; n.append("location_id", this.props.location.id), n.append("map_id", window.mapData.map.id), this.state.pendingFile ? n.append("image", this.state.pendingFile) : this.state.pendingVideoLink ? this.state.pendingVideoLink.includes("ign.com") ? n.append("ign_media_link", this.state.pendingVideoLink) : n.append("youtube_link", this.state.pendingVideoLink) : this.state.pendingImage && (-1 !== this.state.pendingImage.indexOf(window.storageCdnUrl) ? n.append("cdn_media_link", this.state.pendingImage) : -1 !== this.state.pendingImage.indexOf("imgur") ? n.append("imgur_link", this.state.pendingImage) : n.append("image_link", this.state.pendingImage)), window.axios.post("/api/v1/media", n, {
                                                                                                                                                                                            onUploadProgress: function(e) {
                                                                                                                                                                                                var t = Math.round(100 * e.loaded / e.total);
                                                                                                                                                                                                console.log("Upload progress: " + t)
                                                                                                                                                                                            }
                                                                                                                                                                                        }).then((function(n) {
                                                                                                                                                                                            e.setState({
                                                                                                                                                                                                mediaItems: [].concat(w(e.state.mediaItems), w(n.data.media)),
                                                                                                                                                                                                pendingFile: null,
                                                                                                                                                                                                pendingImage: null,
                                                                                                                                                                                                pendingVideoLink: null,
                                                                                                                                                                                                isSaving: !1
                                                                                                                                                                                            }), t && e.onPressDone()
                                                                                                                                                                                        })).catch((function(t) {
                                                                                                                                                                                            e.setState({
                                                                                                                                                                                                isSaving: !1
                                                                                                                                                                                            }), console.warn(t);
                                                                                                                                                                                            var n = r.get(t, "response.data.errors.image[0]", t.message);
                                                                                                                                                                                            window.toastr.error("Something went wrong", n)
                                                                                                                                                                                        }))
                                                                                                                                                                                    }
                                                                                                                                                                                }]) && E(t.prototype, n), i && E(t, i), v
                                                                                                                                                                    }(o.Component)
                                                                                                                                                                }, 18446: (e, t, n) => {
                                                                                                                                                                    "use strict";
                                                                                                                                                                    n.d(t, {
                                                                                                                                                                        Z: () => v
                                                                                                                                                                    });
                                                                                                                                                                    var o = n(67294),
                                                                                                                                                                        r = n(24820),
                                                                                                                                                                        i = n(32701),
                                                                                                                                                                        a = n(10684),
                                                                                                                                                                        s = n(15538),
                                                                                                                                                                        l = n(97985),
                                                                                                                                                                        c = n(97975),
                                                                                                                                                                        u = n(97118);

                                                                                                                                                                    function d(e) {
                                                                                                                                                                        return (d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                                                            return typeof e
                                                                                                                                                                        } : function(e) {
                                                                                                                                                                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                                                                        })(e)
                                                                                                                                                                    }

                                                                                                                                                                    function p(e, t) {
                                                                                                                                                                        for (var n = 0; n\ n\ n[').concat(y[o.map_id].title,"]\n ").concat(t(o.title),"\n \n ")}},onChange:function(t){e.setState({selectedLocation:n[t]})}}),$("#move-location-dialog input").focus()}))}))}},{key:"render",value:function(){return o.createElement("div",null,o.createElement(r.Z,{id:"move-location-dialog",isOpen:!0,fade:!1,toggle:this.onPressCancel,backdrop:!0,keyboard:!0,autoFocus:!1},o.createElement(i.Z,{toggle:this.onPressCancel},"Select Location"),o.createElement(a.Z,null,o.createElement(s.Z,null,o.createElement("select",null))),o.createElement(l.Z,null,o.createElement(c.Z,{color:"dark",onClick:this.onPressCancel},"Cancel"),o.createElement(c.Z,{color:"primary",onClick:this.onPressSave,disabled:this.state.isSaving},"Save Changes"))))}}])&&p(t.prototype,n),d&&p(t,d),m}(o.Component)},46675:(e,t,n)=>{"use strict";var o=n(67294),r=n(73935),i=n(41825),a=n(96486),s=n(97118),l=n(38650),c=n(15429),u=n(24820),d=n(32701),p=n(10684),f=n(15538),g=n(82669),h=n(67954),m=n(609),y=n(97985),v=n(97975);function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n1?window.mapData.maps:[];const O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(s,e);var t,n,r,i=k(s);function s(e){var t,n;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=i.call(this,e)).LINKABLE_CATEGORIES=a.sortBy(Object.values(window.mapData.categories),"title"),t.LINKABLE_REGIONS=a.sortBy(window.mapData.regions.filter((function(e){return e.features})),"title"),t.enableEscapeKey=function(){window.addEventListener("keyup",t.onKeyUpListener,!0)},t.onKeyUpListener=function(e){switch(e.key){case"Escape":t.props.onCancelled();break;default:return}e.preventDefault()},t.getSelectDOMNode=function(){return document.getElementById("link-select-input")},264===window.mapData.map.id){var o={802:!0,804:!0,806:!0,807:!0,789:!0,798:!0};n=window.store.getState().map.locations.filter((function(e){return!o[e.category.group_id]}))}else n=window.store.getState().map.locations;return t.state={linkableItems:t.props.multiMapLinksEnabled?null:n,allLocations:null},t}return t=s,(n=[{key:"componentDidMount",value:function(){var e=this,t=this.getSelectDOMNode(),n=this.props.initiallySelectedText;$("select option[value="+this.initiallySelectedId+"]").attr("selected",!0),$(t).selectpicker({liveSearch:!0,liveSearchNormalize:!0,liveSearchStyle:"contains",showContent:!0,noneSelectedText:this.props.multiMapLinksEnabled?"Loading...":"Nothing selected"}).on("show.bs.select",(function(){window.removeEventListener("keyup",e.onKeyUpListener,!0),$(".select-location-overlay .bs-searchbox input").val(n),$(".select-location-overlay .bs-searchbox input").trigger("propertychange"),$(".select-location-overlay .bs-searchbox input")[0].select(),$(".dropdown.bootstrap-select select")[0].selectedIndex=-1})).on("hide.bs.select",this.enableEscapeKey).on("changed.bs.select",(function(t,n,o,r){if(n').concat(n.title, "")
                                                                                                                                                                        }, n.title)
                                                                                                                                                                }))))
                                                                                                                                            }
                                                                                                                                        }, {
                                                                                                                                            key: "renderAllLocationSelector",
                                                                                                                                            value: function() {
                                                                                                                                                var e = this;
                                                                                                                                                if (!this.state.allLocations) return o.createElement("div", {
                                                                                                                                                    className: "select-location-overlay"
                                                                                                                                                }, o.createElement("select", {
                                                                                                                                                    id: "link-select-input"
                                                                                                                                                }));
                                                                                                                                                var t = window.getSelection().toString();
                                                                                                                                                return o.createElement("div", {
                                                                                                                                                    className: "select-location-overlay"
                                                                                                                                                }, o.createElement("select", {
                                                                                                                                                    id: "link-select-input"
                                                                                                                                                }, this.state.linkableItems.map((function(n) {
                                                                                                                                                        t && !e.initiallySelectedId && t === n.title && (e.initiallySelectedId = n.id);
                                                                                                                                                        var r = n.map_id === window.map.id ? "" : "[".concat(S[n.map_id].title, "] ");
                                                                                                                                                        return o.createElement("option", {
                                                                                                                                                                key: n.id,
                                                                                                                                                                value: n.id,
                                                                                                                                                                "data-content": '').concat(r + n.title, "")
                                                                                                                                                        }, r + n.title)
                                                                                                                                                })), _.map((function(e) {
                                                                                                                                                    return o.createElement("option", {
                                                                                                                                                        key: "map-" + e.id,
                                                                                                                                                        value: e.id,
                                                                                                                                                        "data-content": "".concat("[MAP] " + e.title, "")
                                                                                                                                                    }, "[MAP] " + e.title)
                                                                                                                                                })), this.LINKABLE_CATEGORIES.map((function(e) {
                                                                                                                                                    return o.createElement("option", {
                                                                                                                                                        key: "category-" + e.id,
                                                                                                                                                        value: e.id,
                                                                                                                                                        "data-content": "".concat("[CATEGORY] " + e.title, "")
                                                                                                                                                    }, "[CATEGORY] " + e.title)
                                                                                                                                                })), this.LINKABLE_REGIONS.map((function(e) {
                                                                                                                                                    return o.createElement("option", {
                                                                                                                                                        key: "region-" + e.id,
                                                                                                                                                        value: e.id,
                                                                                                                                                        "data-content": "".concat("[REGION] " + e.title, "")
                                                                                                                                                    }, "[REGION] " + e.title)
                                                                                                                                                }))))
                                                                                                                                        }
                                                                                                                                    }, {
                                                                                                                                        key: "loadAllLocationsData",
                                                                                                                                        value: function() {
                                                                                                                                            var e = this;
                                                                                                                                            window.axios.get("/api/v1/games/".concat(window.game.id, "/full"), {
                                                                                                                                                headers: {
                                                                                                                                                    "X-Api-Secret": window.apiSecretKey
                                                                                                                                                }
                                                                                                                                            }).then((function(e) {
                                                                                                                                                var t = window.store.getState();
                                                                                                                                                return e.data.maps.flatMap((function(e) {
                                                                                                                                                    return e.groups.flatMap((function(e) {
                                                                                                                                                        return e.categories.flatMap((function(e) {
                                                                                                                                                            return e.locations
                                                                                                                                                        }))
                                                                                                                                                    }))
                                                                                                                                                })).map((function(e) {
                                                                                                                                                    return e.category = t.map.categories[e.category_id], e
                                                                                                                                                }))
                                                                                                                                            })).then((function(t) {
                                                                                                                                                return e.setState({
                                                                                                                                                    linkableItems: t,
                                                                                                                                                    allLocations: t
                                                                                                                                                }, (function() {
                                                                                                                                                    var t = e.getSelectDOMNode();
                                                                                                                                                    $(t).selectpicker("refresh")
                                                                                                                                                }))
                                                                                                                                            }))
                                                                                                                                        }
                                                                                                                                    }]) && b(t.prototype, n), r && b(t, r), s
                                                                                                                        }(o.Component);
                                                                                                                        var P = n(68450);

                                                                                                                        function L(e, t) {
                                                                                                                            var n;
                                                                                                                            return function() {
                                                                                                                                var o = this,
                                                                                                                                    r = arguments;
                                                                                                                                clearTimeout(n), n = setTimeout((function() {
                                                                                                                                    e.apply(o, r)
                                                                                                                                }), t)
                                                                                                                            }
                                                                                                                        }

                                                                                                                        function T(e) {
                                                                                                                            return (T = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                                return typeof e
                                                                                                                            } : function(e) {
                                                                                                                                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                            })(e)
                                                                                                                        }

                                                                                                                        function M(e, t) {
                                                                                                                            for (var n = 0; n = 0 && n.setSelectionRange(r, r + 2)
                                                                                                                            }
                                                                                                                        }, t.initializeTagField = function(e, n) {
                                                                                                                            var o = $("#location-tags");
                                                                                                                            o.length && (o[0].selectize && o[0].selectize.destroy(), o.selectize({
                                                                                                                                options: e.map((function(e) {
                                                                                                                                    return window.mapData.tagsById[e]
                                                                                                                                })),
                                                                                                                                items: t.state.tagIds,
                                                                                                                                maxItems: n,
                                                                                                                                valueField: "id",
                                                                                                                                labelField: "title",
                                                                                                                                searchField: ["title"],
                                                                                                                                create: !1,
                                                                                                                                wrapperClass: "selectize-control form-control",
                                                                                                                                inputClass: "selectize-input",
                                                                                                                                onChange: function(e) {
                                                                                                                                    console.log(e), t.setState({
                                                                                                                                        tagIds: e.split(",").map((function(e) {
                                                                                                                                            return parseInt(e)
                                                                                                                                        }))
                                                                                                                                    })
                                                                                                                                }
                                                                                                                            }))
                                                                                                                        }, t.onPressSave = t.onPressSave.bind(H(t)), t.onPressDelete = t.onPressDelete.bind(H(t)), t.onKeyDown = t.onKeyDown.bind(H(t)), t.onGlobalKeyDown = t.onGlobalKeyDown.bind(H(t)), t.tagInputRef = o.createRef(), t.descriptionInputRef = o.createRef(), t.ignWikiLinkInputRef = o.createRef(), t.state = {
                                                                                                                            title: e.location.title,
                                                                                                                            description: e.location.description,
                                                                                                                            categoryId: e.location.category_id,
                                                                                                                            tagIds: e.location.tags || [],
                                                                                                                            regionId: e.location.region_id,
                                                                                                                            zPosition: e.location.z,
                                                                                                                            showSelectLocationOverlay: !1,
                                                                                                                            loadOtherMapLocationLinks: !1,
                                                                                                                            availableTags: t.getAvailableTags(e.location.category_id),
                                                                                                                            ignWikiLink: e.location.ign_page_id ? "https://www.ign.com/wikis/".concat(window.game.ign_slug, "/").concat(e.location.ign_page_id) : null,
                                                                                                                            ignMarkerId: e.location.ign_marker_id,
                                                                                                                            editorNotes: e.location.editor_notes
                                                                                                                        }, t
                                                                                                                    }
                                                                                                                    return t = a, (n = [{
                                                                                                                        key: "componentDidMount",
                                                                                                                        value: function() {
                                                                                                                            var e = this;
                                                                                                                            setTimeout((function() {
                                                                                                                                var t = store.getState().map.locations,
                                                                                                                                    n = new Bloodhound({
                                                                                                                                        datumTokenizer: Bloodhound.tokenizers.whitespace,
                                                                                                                                        queryTokenizer: Bloodhound.tokenizers.whitespace,
                                                                                                                                        local: t.map((function(e) {
                                                                                                                                            return e.title
                                                                                                                                        })),
                                                                                                                                        sorter: function(e, t) {
                                                                                                                                            return e.sort((function(e, n) {
                                                                                                                                                return e.startsWith(t) ? n.startsWith(t) ? en ? 1 : 0 : -1 : n.startsWith(t) ? 1 : en ? 1 : 0
                                                                                                                                            }))
                                                                                                                                        }
                                                                                                                                    }),
                                                                                                                                    o = $("#location-title");
                                                                                                                                o.typeahead({
                                                                                                                                    hint: !0,
                                                                                                                                    highlight: !0,
                                                                                                                                    minLength: 1
                                                                                                                                }, {
                                                                                                                                    name: "locations",
                                                                                                                                    source: n
                                                                                                                                }), window.mapManager.ignModeControl && window.mapManager.ignModeControl.isEnabled() ? $("#location-ign-marker-id").focus() : o.focus(), o.typeahead("close"), o.bind("typeahead:select", (function(t, n) {
                                                                                                                                    e.setState({
                                                                                                                                        title: n
                                                                                                                                    })
                                                                                                                                })), $("#location-region-select").selectize({
                                                                                                                                    options: window.mapData.regions,
                                                                                                                                    items: [e.state.regionId],
                                                                                                                                    maxItems: 1,
                                                                                                                                    valueField: "id",
                                                                                                                                    labelField: "title",
                                                                                                                                    searchField: ["title"],
                                                                                                                                    create: !1,
                                                                                                                                    wrapperClass: "selectize-control form-control",
                                                                                                                                    inputClass: "selectize-input",
                                                                                                                                    onChange: function(t) {
                                                                                                                                        e.setState({
                                                                                                                                            regionId: t
                                                                                                                                        })
                                                                                                                                    }
                                                                                                                                }), (0, j.c5)(e.descriptionInputRef.current, 6), e.state.availableTags.length && e.initializeTagField(e.state.availableTags, 80 === window.game.id || 1 === window.game.id ? 1 : null), document.addEventListener("keydown", e.onGlobalKeyDown)
                                                                                                                            }))
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "componentDidUpdate",
                                                                                                                        value: function(e, t, n) {
                                                                                                                            if (t.categoryId !== this.state.categoryId) {
                                                                                                                                var o = this.getAvailableTags(this.state.categoryId);
                                                                                                                                this.initializeTagField(o, 80 === window.game.id ? 1 : null)
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "render",
                                                                                                                        value: function() {
                                                                                                                            var e = this,
                                                                                                                                t = this.props.location,
                                                                                                                                n = this.state,
                                                                                                                                r = n.description,
                                                                                                                                i = n.showSelectLocationOverlay,
                                                                                                                                a = n.loadOtherMapLocationLinks,
                                                                                                                                s = n.categoryId,
                                                                                                                                l = store.getState().map.categories[s],
                                                                                                                                c = this.getAvailableTags(s),
                                                                                                                                w = window.isSupereditor;
                                                                                                                            return o.createElement("div", null, o.createElement(u.Z, {
                                                                                                                                id: "edit-location-modal",
                                                                                                                                isOpen: !0,
                                                                                                                                fade: !1,
                                                                                                                                toggle: this.props.onPressCancel,
                                                                                                                                backdrop: !0,
                                                                                                                                keyboard: !i,
                                                                                                                                autoFocus: !1
                                                                                                                            }, o.createElement(d.Z, {
                                                                                                                                toggle: this.props.onPressCancel
                                                                                                                            }, "Edit Location ", o.createElement("span", {
                                                                                                                                style: {
                                                                                                                                    fontFamily: "initial"
                                                                                                                                }
                                                                                                                            }, "Â "), t.reference_id ? o.createElement("span", {
                                                                                                                                className: "modal-subtitle"
                                                                                                                            }, " ", t.reference_id) : void 0), o.createElement(p.Z, null, o.createElement(f.Z, null, o.createElement(g.Z, null, o.createElement(h.Z, {
                                                                                                                                for: "location-title"
                                                                                                                            }, "Location Title"), o.createElement(m.Z, {
                                                                                                                                type: "text",
                                                                                                                                name: "location-title",
                                                                                                                                id: "location-title",
                                                                                                                                onKeyDown: this.onKeyDown,
                                                                                                                                onChange: function(t) {
                                                                                                                                    var n = t.target.value;
                                                                                                                                    e.setState({
                                                                                                                                        title: n
                                                                                                                                    })
                                                                                                                                },
                                                                                                                                onBlur: function(t) {
                                                                                                                                    var n = t.target.value,
                                                                                                                                        o = ne(store.getState().map.locations, n);
                                                                                                                                    if (!o) {
                                                                                                                                        var r = n.toLowerCase(),
                                                                                                                                            i = te(e.props.categories, r);
                                                                                                                                        i && (o = i.id)
                                                                                                                                    }
                                                                                                                                    var a = o || e.state.categoryId;
                                                                                                                                    e.setState({
                                                                                                                                        title: n,
                                                                                                                                        categoryId: a
                                                                                                                                    })
                                                                                                                                },
                                                                                                                                value: this.state.title,
                                                                                                                                autoComplete: "off"
                                                                                                                            })), o.createElement("div", {
                                                                                                                                className: "form-row"
                                                                                                                            }, o.createElement(g.Z, {
                                                                                                                                className: Y ? "col-8" : "col-12"
                                                                                                                            }, o.createElement(h.Z, {
                                                                                                                                for: "location-category"
                                                                                                                            }, "Location Category"), o.createElement(m.Z, {
                                                                                                                                type: "select",
                                                                                                                                name: "location-category",
                                                                                                                                id: "location-category",
                                                                                                                                onKeyDown: this.onKeyDown,
                                                                                                                                value: this.state.categoryId,
                                                                                                                                onChange: function(t) {
                                                                                                                                    e.setState({
                                                                                                                                        categoryId: Number(t.target.value)
                                                                                                                                    })
                                                                                                                                }
                                                                                                                            }, this.props.categories.map((function(e) {
                                                                                                                                return o.createElement("option", {
                                                                                                                                    key: e.id,
                                                                                                                                    value: e.id
                                                                                                                                }, e.title)
                                                                                                                            })))), Y && o.createElement(g.Z, {
                                                                                                                                className: "col-md-4"
                                                                                                                            }, o.createElement(h.Z, {
                                                                                                                                for: "location-z"
                                                                                                                            }, "Z Position"), o.createElement(m.Z, {
                                                                                                                                type: "text",
                                                                                                                                name: "location-z",
                                                                                                                                id: "location-z",
                                                                                                                                onKeyDown: this.onKeyDown,
                                                                                                                                onChange: function(t) {
                                                                                                                                    var n = parseInt(t.target.value);
                                                                                                                                    e.setState({
                                                                                                                                        zPosition: Number.isNaN(n) ? null : n
                                                                                                                                    })
                                                                                                                                },
                                                                                                                                value: null != this.state.zPosition ? this.state.zPosition : "",
                                                                                                                                autoComplete: "off"
                                                                                                                            }))), o.createElement(g.Z, null, o.createElement(h.Z, {
                                                                                                                                for: "location-description"
                                                                                                                            }, "Location Description"), l.template ? o.createElement("span", {
                                                                                                                                id: "description-template-button",
                                                                                                                                onClick: this.applyCategoryTemplate
                                                                                                                            }, "Use Template") : null, o.createElement(m.Z, {
                                                                                                                                innerRef: this.descriptionInputRef,
                                                                                                                                type: "textarea",
                                                                                                                                name: "location-description",
                                                                                                                                id: "location-description",
                                                                                                                                onKeyDown: this.onKeyDown,
                                                                                                                                onChange: function(t) {
                                                                                                                                    e.setState({
                                                                                                                                        description: t.target.value
                                                                                                                                    })
                                                                                                                                },
                                                                                                                                rows: 6,
                                                                                                                                value: r
                                                                                                                            })), c.length ? o.createElement(g.Z, null, o.createElement(h.Z, {
                                                                                                                                for: "location-tags"
                                                                                                                            }, "Tags"), o.createElement("input", {
                                                                                                                                type: "select",
                                                                                                                                name: "location-tags",
                                                                                                                                id: "location-tags",
                                                                                                                                onKeyDown: this.onKeyDown,
                                                                                                                                value: this.state.tagIds,
                                                                                                                                onChange: function(t) {
                                                                                                                                    e.setState({
                                                                                                                                        tagIds: Array.from(t.target.selectedOptions, (function(e) {
                                                                                                                                            return parseInt(e.value)
                                                                                                                                        }))
                                                                                                                                    })
                                                                                                                                }
                                                                                                                            })) : null, K && o.createElement(g.Z, null, o.createElement(h.Z, {
                                                                                                                                for: "location-region"
                                                                                                                            }, "Region"), o.createElement("input", {
                                                                                                                                id: "location-region-select",
                                                                                                                                type: "text"
                                                                                                                            })), o.createElement(D, {
                                                                                                                                link: this.state.ignWikiLink,
                                                                                                                                ref: this.ignWikiLinkInputRef
                                                                                                                            }), window.mapManager.isIgnModeActive() && o.createElement(g.Z, null, o.createElement(h.Z, {
                                                                                                                                for: "location-ign-marker-id"
                                                                                                                            }, "IGN Marker ID"), o.createElement(m.Z, {
                                                                                                                                type: "text",
                                                                                                                                name: "location-ign-marker-id",
                                                                                                                                id: "location-ign-marker-id",
                                                                                                                                defaultValue: this.state.ignMarkerId || void 0,
                                                                                                                                autoComplete: "off"
                                                                                                                            })), o.createElement(g.Z, null, o.createElement(h.Z, {
                                                                                                                                for: "location-description"
                                                                                                                            }, "Editor-Only Notes"), o.createElement(m.Z, {
                                                                                                                                type: "textarea",
                                                                                                                                name: "location-editor-notes",
                                                                                                                                id: "location-editor-notes",
                                                                                                                                onKeyDown: this.onKeyDown,
                                                                                                                                onChange: function(t) {
                                                                                                                                    return e.setState({
                                                                                                                                        editorNotes: t.target.value
                                                                                                                                    })
                                                                                                                                },
                                                                                                                                rows: 2,
                                                                                                                                value: this.state.editorNotes || ""
                                                                                                                            })))), o.createElement(y.Z, null, o.createElement(v.Z, {
                                                                                                                                className: w ? "" : "mr-auto",
                                                                                                                                color: "dark",
                                                                                                                                onClick: this.onPressEditCategory
                                                                                                                            }, "Edit Category"), w && o.createElement("a", {
                                                                                                                                className: "mr-auto",
                                                                                                                                href: "".concat(window.studioUrl, "?locationIds=").concat(t.id),
                                                                                                                                target: "_blank"
                                                                                                                            }, o.createElement(v.Z, {
                                                                                                                                color: "dark"
                                                                                                                            }, o.createElement("svg", {
                                                                                                                                xmlns: "http://www.w3.org/2000/svg",
                                                                                                                                width: "1em",
                                                                                                                                height: "1em",
                                                                                                                                viewBox: "0 0 24 24"
                                                                                                                            }, o.createElement("rect", {
                                                                                                                                x: "0",
                                                                                                                                y: "0",
                                                                                                                                width: "24",
                                                                                                                                height: "24",
                                                                                                                                fill: "none",
                                                                                                                                stroke: "none"
                                                                                                                            }), o.createElement("path", {
                                                                                                                                fill: "currentColor",
                                                                                                                                d: "M20 19.88V22l-1.8-1.17l-4.79-9c.66-.21 1.26-.55 1.78-1L20 19.88M15 7a3 3 0 0 1-3 3h-.44L5.8 20.83L4 22v-2.12L9.79 9c-1.1-1.23-1-3.13.24-4.24C10.57 4.28 11.27 4 12 4V2a1 1 0 0 1 1 1v1.18c1.2.42 2 1.55 2 2.82m-2 0a1 1 0 0 0-1-1a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1Z"
                                                                                                                            })))), o.createElement(v.Z, {
                                                                                                                                color: "danger",
                                                                                                                                onClick: this.onPressDelete
                                                                                                                            }, "Delete"), o.createElement(v.Z, {
                                                                                                                                color: "dark",
                                                                                                                                onClick: this.props.onPressCancel
                                                                                                                            }, "Cancel"), o.createElement(v.Z, {
                                                                                                                                color: "primary",
                                                                                                                                onClick: this.onPressSave,
                                                                                                                                disabled: this.props.isSaving
                                                                                                                            }, "Save")), i && o.createElement(O, {
                                                                                                                                initiallySelectedText: window.getSelection().toString(),
                                                                                                                                multiMapLinksEnabled: a,
                                                                                                                                onLinkSelected: function(t, n) {
                                                                                                                                    e.setState({
                                                                                                                                        showSelectLocationOverlay: !1,
                                                                                                                                        loadOtherMapLocationLinks: !1
                                                                                                                                    }, (function() {
                                                                                                                                        $("#location-description").focus();
                                                                                                                                        var e = window.getSelection().toString();
                                                                                                                                        0 === e.length || "??" === e ? (0, j.XL)("[".concat(t.title, "](").concat(n, ")")) : (0, j.DT)("[", "](" + n + ")")
                                                                                                                                    }))
                                                                                                                                },
                                                                                                                                onCancelled: function() {
                                                                                                                                    e.setState({
                                                                                                                                        showSelectLocationOverlay: !1,
                                                                                                                                        loadOtherMapLocationLinks: !1
                                                                                                                                    }, (function() {
                                                                                                                                        $("#location-description").focus()
                                                                                                                                    }))
                                                                                                                                }
                                                                                                                            })))
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "componentWillUnmount",
                                                                                                                        value: function() {
                                                                                                                            document.removeEventListener("keydown", this.onGlobalKeyDown)
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "onPressSave",
                                                                                                                        value: function() {
                                                                                                                            var e = this.props,
                                                                                                                                t = e.location,
                                                                                                                                n = e.onPressSave,
                                                                                                                                o = this.state,
                                                                                                                                r = o.title,
                                                                                                                                i = o.description,
                                                                                                                                a = o.tagIds,
                                                                                                                                s = o.regionId,
                                                                                                                                l = o.zPosition,
                                                                                                                                c = o.editorNotes,
                                                                                                                                u = this.state.categoryId;
                                                                                                                            if (r) {
                                                                                                                                var d = this.getAvailableTags(u),
                                                                                                                                    p = a.filter((function(e) {
                                                                                                                                        return d.includes(e)
                                                                                                                                    }));
                                                                                                                                n({
                                                                                                                                    id: t.id,
                                                                                                                                    title: r,
                                                                                                                                    region_id: s || void 0,
                                                                                                                                    category_id: u,
                                                                                                                                    description: i,
                                                                                                                                    latitude: t.latitude,
                                                                                                                                    longitude: t.longitude,
                                                                                                                                    z: l || null,
                                                                                                                                    media: t.media,
                                                                                                                                    tags: p,
                                                                                                                                    reference_id: t.reference_id,
                                                                                                                                    ign_wiki_link: this.ignWikiLinkInputRef.current.getIgnWikiLink(),
                                                                                                                                    ign_marker_id: document.getElementById("location-ign-marker-id") ? document.getElementById("location-ign-marker-id").value : void 0,
                                                                                                                                    editor_notes: c
                                                                                                                                }), Number.isInteger(t.id) || (X = r, Q = i, J = p, l, window.lastAddedRegionId = s, window.lastAddedCategoryId = u)
                                                                                                                            } else window.toastr.error("Please add a title", "Invalid Location")
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "onPressDelete",
                                                                                                                        value: function() {
                                                                                                                            this.props.onPressDelete(this.props.location)
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "onKeyDown",
                                                                                                                        value: function(e) {
                                                                                                                            if (e.ctrlKey || e.metaKey || e.altKey) {
                                                                                                                                var t = String.fromCharCode(e.which).toLowerCase();
                                                                                                                                if ("b" === t) window.getSelection() && (0, j.DT)("**");
                                                                                                                                else if ("i" === t) window.getSelection() && (0, j.DT)("_");
                                                                                                                                else if (e.shiftKey && "k" === t) document.activeElement && (0, j.XL)("**Location:** ");
                                                                                                                                else if ("k" === t) document.activeElement && (0, j.DT)("[", "](??)");
                                                                                                                                else if ("l" === t) window.getSelection() && ((e.ctrlKey || e.metaKey) && e.altKey && e.shiftKey ? (e.preventDefault(), this.setState({
                                                                                                                                    showSelectLocationOverlay: !0,
                                                                                                                                    loadOtherMapLocationLinks: !0
                                                                                                                                })) : (e.preventDefault(), this.setState({
                                                                                                                                    showSelectLocationOverlay: !0,
                                                                                                                                    loadOtherMapLocationLinks: !1
                                                                                                                                })));
                                                                                                                                else if (e.shiftKey && "p" === t) {
                                                                                                                                    e.preventDefault();
                                                                                                                                    var n = this.state.availableTags.length > 0;
                                                                                                                                    this.setState({
                                                                                                                                        title: X,
                                                                                                                                        description: Q,
                                                                                                                                        tagIds: n && J || []
                                                                                                                                    }), $("location-title").typeahead("update", X);
                                                                                                                                    var o = $("#location-tags");
                                                                                                                                    o.length && o[0].selectize && o[0].selectize.setValue(J || [])
                                                                                                                                } else(e.shiftKey && "1" === t || e.altKey && "t" === t) && (e.preventDefault(), this.applyCategoryTemplate())
                                                                                                                            } else e.altKey || (13 === e.which ? "location-title" === e.target.id && $("#location-title").typeahead("close") : 9 === e.which && "location-description" === e.target.id && (e.shiftKey ? this.selectPreviousPlaceholder() : this.selectNextPlaceholder()) && e.preventDefault())
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "onGlobalKeyDown",
                                                                                                                        value: function(e) {
                                                                                                                            if (e.ctrlKey || e.metaKey) {
                                                                                                                                var t = String.fromCharCode(e.which).toLowerCase();
                                                                                                                                e.shiftKey && "s" === t && (window.store.getState().editor.selectedCategory || this.onPressSave())
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "selectNextPlaceholder",
                                                                                                                        value: function() {
                                                                                                                            var e = document.activeElement;
                                                                                                                            if (!e) return !1;
                                                                                                                            var t = e.value,
                                                                                                                                n = e.selectionEnd,
                                                                                                                                o = t.indexOf("??", n);
                                                                                                                            return o > -1 && (e.setSelectionRange(o, o + 2), !0)
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "selectPreviousPlaceholder",
                                                                                                                        value: function() {
                                                                                                                            var e = document.activeElement;
                                                                                                                            if (!e) return !1;
                                                                                                                            var t = e.value,
                                                                                                                                n = e.selectionStart,
                                                                                                                                o = t.lastIndexOf("??", n - 1);
                                                                                                                            return o > -1 && (e.setSelectionRange(o, o + 2), !0)
                                                                                                                        }
                                                                                                                    }, {
                                                                                                                        key: "getAvailableTags",
                                                                                                                        value: function(e) {
                                                                                                                            var t = e ? window.mapData.categories[e] : null;
                                                                                                                            if (80 === window.game.id || 1 === window.game.id || 149 === window.game.id) {
                                                                                                                                if (t && G[t.group_id]) return G[t.group_id].availableTags
                                                                                                                            } else if (118 === window.game.id || 147 === window.game.id || 159 === window.game.id) return q.map((function(e) {
                                                                                                                                return e.id
                                                                                                                            }));
                                                                                                                            return []
                                                                                                                        }
                                                                                                                    }]) && z(t.prototype, n), r && z(t, r), a
                                                                                                                }(o.Component), te = function(e, t) {
                                                                                                                    for (var n = e.length, o = null, r = null, i = 0; i '})),o.createElement("div",{className:"map-control ".concat("add"!==r?"disabled":""),onClick:this.onClickAdd},o.createElement("img",{src:'
                                                                                                                        data: image / svg + xml; utf8, '})),o.createElement("div",{className:"map-control ".concat("delete"!==r?"disabled":""),onClick:this.onClickDelete},o.createElement("img",{src:'
                                                                                                                        data: image / svg + xml; utf8, '})),o.createElement("div",{className:"map-control",onClick:this.onClickSave},o.createElement("img",{src:'
                                                                                                                        data: image / svg + xml; utf8, '}))):null}},{key:"onClickMove",value:function(){this.setState({selectedControl:"move"}),window.setupAdminHeatmapMoveListener()}},{key:"onClickAdd",value:function(){this.setState({selectedControl:"add"}),window.setupAdminHeatmapAddListener(this.props.selectedHeatmap)}},{key:"onClickDelete",value:function(){this.setState({selectedControl:"delete"}),window.setupAdminHeatmapDeleteListener()}},{key:"onClickSave",value:function(){var e=this,t=window.mapManager.getHeatmapDataPoints().map((function(e){return{latitude:e.lat(),longitude:e.lng()}}));window.axios.post("/api/v1/categories/".concat(this.props.selectedHeatmap.id,"/heatmap"),{points:t}).then((function(t){e.props.setIsEditingHeatmap(!1),window.mapManager.hideHeatmap(),e.props.updateHeatmapCategory(t.data),window.setupAdminAddMarkerListener(),window.toastr.success("Heatmap saved!")})).catch((function(e){window.toastr.error(e,"Error saving heatmap"),console.error(e)}))}}])&&ae(t.prototype,n),r&&ae(t,r),a}(o.Component);const fe=(0,i.$j)((function(e,t){return{heatmapGroups:e.map.heatmapGroups,isEditingHeatmap:e.map.isEditingHeatmap,selectedHeatmap:e.map.selectedHeatmap}}),s.cq)(pe);function ge(e){return(ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function he(e,t){for(var n=0;n0?e.categories[0].id:-1,title:"",description:""},t}return t=a,(n=[{key:"UNSAFE_componentWillReceiveProps",value:function(e){this.props.showAddMarkerControls&&!e.showAddMarkerControls&&(this.setState({enabled:!1}),window.removeAdminAddMarkerControls&&window.removeAdminAddMarkerControls())}},{key:"render",value:function(){var e=this;if(!this.props.showAddMarkerControls)return null;var t=this.state,n=t.categoryId,r=t.title,i=t.description,a=t.enabled;return o.createElement("div",{id:"editor-map-controls"},o.createElement("select",{id:"editor-control-name",className:"map-control",onChange:function(t){e.onChangeCategory(Number(t.target.value))}},this.props.categories.map((function(e){return e.id===n?o.createElement("option",{key:e.id,value:e.id,selected:!0},e.title):o.createElement("option",{key:e.id,value:e.id},e.title)}))),o.createElement("input",{type:"text",className:"map-control",value:r,placeholder:"Title",onChange:function(t){e.onChangeTitle(t.target.value)}}),o.createElement("textarea",{className:"map-control",value:i,placeholder:"Description",onChange:function(t){e.onChangeDescription(t.target.value)}}),o.createElement("div",{className:"map-control ".concat(a?"":"disabled"),onClick:this.onClickAdd},o.createElement("img",{src:'
                                                                                                                        data: image / svg + xml; utf8, '})))}},{key:"onClickAdd",value:function(){var e=this;this.state.enabled?window.removeAdminAddMarkerControls&&window.removeAdminAddMarkerControls():window.setupAdminAddMarkerControls&&window.setupAdminAddMarkerControls((function(t,n){e.props.saveLocation({id:"_"+Date.now(),title:e.state.title,category_id:e.state.categoryId,description:e.state.description,latitude:t,longitude:n})})),this.setState({enabled:!this.state.enabled})}},{key:"onChangeTitle",value:function(e){this.setState({title:e})}},{key:"onChangeDescription",value:function(e){this.setState({description:e})}},{key:"onChangeCategory",value:function(e){this.setState({categoryId:e})}}])&&he(t.prototype,n),r&&he(t,r),a}(o.Component);const ke=(0,i.$j)((function(e,t){return{categories:s.wl.getCategoriesOrdered(e),showAddMarkerControls:e.editor.showAddMarkerControls}}),c.cq)(Ee);var xe=n(55928),Ce=n(818),Se=n(20252),_e=n(5794),Oe=n(8806);function Pe(e){return(Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Te(e,t){for(var n=0;nt.state.nextWorldBossSpawnInfo.nextSpawnTime){var n=dt(e);t.setState({now:e,nextWorldBossSpawnInfo:n})}else e>t.state.nextLegionEventSpawnInfo.nextSpawnTime?t.setState({now:e,nextLegionEventSpawnInfo:lt(e)}):t.setState({now:e})},t.onClickClose=function(){window.toggleTimerControl()};var n=Date.now();return t.state={now:n,nextWorldBossSpawnInfo:dt(n),nextLegionEventSpawnInfo:lt(n)},t}return t=a,(n=[{key:"componentDidMount",value:function(){this.intervalTimer=setInterval(this.onTick,1e3)}},{key:"render",value:function(){!function(e){if(null==e)throw new TypeError("Cannot destructure undefined")}(this.props);var e=this.state.now,t=function(e){var t=(e-16879518e5)%rt;if(t>it){var n=new Date(rt-t);return{active:!1,infoText:"Next Helltide begins in:",timerText:pt(n)}}var o=new Date(it-t);return{active:!0,infoText:"Helltide Active. Ends in:",timerText:pt(o)}}(e),n=new Date(this.state.nextWorldBossSpawnInfo.nextSpawnTime-e);return o.createElement("div",{id:"timers-panel",className:"tool-info-panel active"},o.createElement("div",{className:"tool-info-title"},"Spawn Timers"),o.createElement("div",{className:"tool-info"},o.createElement("div",{className:"timer-info"},t.active?"ðŸ”¥":""," ",t.infoText),o.createElement("div",{className:"timer-countdown"},t.timerText)),o.createElement("div",{className:"tool-info"},o.createElement("div",{className:"timer-info"},0===n.getUTCHours()&&n.getUTCMinutes()<=30?"ðŸ˜ˆ ":"","Next World Boss",this.state.nextWorldBossSpawnInfo.boss?" (".concat(this.state.nextWorldBossSpawnInfo.boss,")"):"",":"),o.createElement("div",{className:"timer-countdown"},pt(n))),o.createElement("div",{className:"tool-info"},o.createElement("div",{className:"timer-info"},"Next Legion Event in:"),o.createElement("div",{className:"timer-countdown"},pt(new Date(this.state.nextLegionEventSpawnInfo.nextSpawnTime-e)))),o.createElement("button",{className:"mapboxgl-popup-close-button",type:"button",onClick:this.onClickClose},"Ã—"))}},{key:"componentWillUnmount",value:function(){clearInterval(this.intervalTimer)}}])&>(t.prototype,n),r&>(t,r),a}(o.Component);const bt=(0,i.$j)((function(e,t){return Object.assign({},t)}),Object.assign(Object.assign({},Ce.cq),l.cq))(wt);function Et(e){return(Et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function kt(e,t){for(var n=0;ne.length)&&(t=e.length);for(var n=0,o=new Array(t);n=0&&o0?o.createElement("small",{className:"d-block text-center"},"Click a preset to apply your saved filters. ",o.createElement("span",{className:"hotkey"},"Alt + Z")," to undo"):null,o.createElement(xn,{onSortEnd:this.onSortEnd,helperClass:"presets-list",useDragHandle:!0},n.map((function(t,n){return o.createElement(kn,{key:t.id||t.title,index:n,position:n,preset:t,isActive:r[t.id],deletePreset:e.deletePreset,onClickPreset:e.onClickPresetItem})}))),a?this.renderUpgradePrompt():null,this.state.isAddingNewPreset?this.renderSavePresetForm():a?null:o.createElement(o.Fragment,null,o.createElement("div",{className:"button-panel text-center mt-1"},o.createElement("span",{id:"add-preset",onClick:this.onClickAddNewPreset},"+ Save New Preset"))))}}])&&gn(t.prototype,n),r&&gn(t,r),a}(o.Component),_n=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=window.store.getState(),r={};o.map.categoryIds.forEach((function(e){r[e]=!1}));var i=n?o.map.activePresets:{};i[e.id]=!0,n?o.user.presets.map((function(e){i[e.id]&&e.categories.forEach((function(e){r[e]=!0}))})):e.categories.forEach((function(e){r[e]=!0}));var a=s.wl.getCategoryVisibilityMap(store.getState());if(!(0,pn.shallowEqual)(a,r)){var l=s.wl.getVisibleCategories(store.getState()).map((function(e){return e.id}));store.dispatch(It.cq.setPreviouslyVisibleCategories(l))}window.store.dispatch(s.cq.setCategoriesVisibility(r)),window.store.dispatch(s.cq.setActivePresets(i))};const On=(0,i.$j)((function(e,t){return Object.assign(Object.assign({},t),{categoriesMap:e.map.categories,presets:e.user.presets,activePresets:e.map.activePresets})}),Object.assign(Object.assign({},s.cq),l.cq))(Sn);function Pn(e){return(Pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ln(e){return function(e){if(Array.isArray(e))return Tn(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Tn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Tn(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n0&&this.renderHeatmapsHeader(),1===window.mapData.map.id&&o.createElement("div",{className:"coming-soon"},"Animal heatmaps are a work-in-progress",o.createElement("br",null),"Some categories aren'
                                                                                                                        t completed yet(e.g.Deer, Fish, Birds), but I 'm working on it :)"),this.renderHeatmaps(),Bn&&this.renderSubnauticaResources(),zn&&this.renderAdvancedFilters(),window.config.newSuggestionsEnabled&&this.renderSuggestions(),80===window.game.id&&window.specialData&&window.specialData.resources&&this.renderNewWorldResources(),jn&&this.renderPresets(),this.renderSettings(),An&&this.renderCopyrightFooter(),!1)}},{key:"renderCategories",value:function(){var e=this,t=this.props,n=t.categoriesMap,r=t.categoryTextFilter,i=this.state.expansionStates,a=window.user,s=a&&a.hasPro,l=this.props.categoryGroups;if(r){var c=r.toLowerCase();l=l.map((function(e){if(e.title.toLowerCase().includes(c))return e;var t={};return Wn[e.id]&&Wn[e.id].forEach((function(e){var n=e.title,o=e.categories;n&&n.toLowerCase().includes(c)&&o.forEach((function(e){return t[e]=!0}))})),Object.assign(Object.assign({},e),{categories:e.categories.filter((function(e){return t[e.id]||e.title.toLowerCase().includes(c)}))})}))}return l.map((function(t){if(8===t.id)return e.renderRdr2CollectorsGroup(t);if(Wn[t.id])return e.renderGroupWithSubgroups(t,Wn[t.id]);if(Un[t.id]){if(0===t.categories.length)return null;var r=Un[t.id],a=!0,l=t.categories.map((function(e){return a=a&&!n[e.id].visible,e.id})),c=i[t.id],u=e.props.multiTagFilters,d=u[l[0]]||[],p=window.mapData.tagsById;return o.createElement(o.Fragment,{key:t.title},e.renderGroupHeader(t),o.createElement("div",{className:"group-categories "+(c?"":"hidden")},o.createElement("div",{className:"btn-group category-tags "+(a?" hidden":"")},r.map((function(t){var n=p[t];return o.createElement("span",{key:n.id,className:"btn btn-outline-secondary tag ".concat(d&&d.includes(n.id)?"selected":""),onClick:function(){return function(t){var n=d.indexOf(t);-1===n?d.push(t):d.splice(n,1),l.forEach((function(e){u[e]=d})),e.props.setMultiTagFilters(u,l)}(n.id)},onContextMenu:function(t){t.preventDefault(),function(t){l.forEach((function(e){u[e]=[t]})),e.props.setMultiTagFilters(u,l)}(n.id)}},n.title)}))),t.categories.map((function(t){var o=n[t.id];return o.premium&&!s?e.renderProCategory(o):e.renderCategory(o)}))))}if(t.categories.length>0){var f=i[t.id];return o.createElement(o.Fragment,{key:t.title},e.renderGroupHeader(t),o.createElement("div",{className:"group-categories "+(f?"":"hidden")},t.categories.map((function(t){var o=n[t.id];return o.premium&&!s?e.renderProCategory(o):e.renderCategory(o)}))))}return null}))}},{key:"renderHeatmaps",value:function(){var e=this,t=this.props.selectedHeatmap,n=window.user,r=n&&n.hasPro;return this.props.heatmapGroups.map((function(i){return o.createElement(o.Fragment,{key:i.title},o.createElement("div",{className:"header heatmap-header"},o.createElement("span",null,i.title),e.renderProUpgrade()),i.heatmap_categories.map((function(i,a){var s=t&&t.id===i.id,l=!r&&a>=6,c="heatmap-category-".concat(i.id);return o.createElement("div",{id:c,key:i.id,className:"category-item heatmap-category-item ".concat(s?"category-visible":"category-hidden"," ").concat(l?"needs-upgrade":""),onClick:function(){l||(e.props.setHeatmapCategorySelected(i.id,!s),e.props.setIsEditingHeatmap(!1))},onContextMenu:function(t){n&&"admin"===n.role&&(t.preventDefault(),e.props.setHeatmapCategorySelected(i.id,!0),e.props.setIsEditingHeatmap(!0),window.setupAdminHeatmapAddListener(i))}},l&&o.createElement(Mt.Z,{delay:0,placement:"bottom",target:c},"Requires PRO upgrade"),o.createElement("span",{className:"title"},i.title),l&&o.createElement("sup",null,"PRO"))})))}))}},{key:"renderProUpgrade",value:function(){var e=window.user;return(!e||!e.hasPro)&&o.createElement("a",{className:"heatmaps-upgrade",href:Dn},o.createElement("button",{className:"btn btn-outline-secondary btn-upgrade btn-upgrade-small"},"Upgrade To Pro"))}},{key:"renderHeatmapsHeader",value:function(){return o.createElement("div",{className:"heatmaps-title"},o.createElement("span",null,"Heatmaps "))}},{key:"renderCategory",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Vn[e.id])return null;var r=Hn[e.id],i=this.props.locationsByCategory[e.id].length;return r&&r.forEach((function(e){i+=t.props.locationsByCategory[e].length})),o.createElement("div",{id:"category-item-"+e.id,key:e.id,className:"category-item ".concat(e.visible?"category-visible":"category-hidden"," ").concat(n?"subcategory":""),onClick:r?function(){return t.toggleCategories([].concat(Ln(r),[e.id]))}:function(){return t.toggleCategory(e.id)},onContextMenu:function(n){if(window.isEditor&&n.shiftKey)return n.preventDefault(),void window.store.dispatch(c.cq.setSelectedCategory(e));n.preventDefault();var o={};Object.values(t.props.categoriesMap).forEach((function(e){o[e.id]=!1})),o[e.id]=!0,r&&r.forEach((function(e){o[e]=!0})),t.props.setCategoriesVisibility(o)}},o.createElement("span",{className:"icon icon-".concat(e.icon)},o.createElement("span",{className:"path1"}),o.createElement("span",{className:"path2"}),o.createElement("span",{className:"path3"})),o.createElement("span",{className:"title"},e.title),o.createElement("span",{className:"bubble"},i))}},{key:"renderProCategory",value:function(e){var t="pro-category-".concat(e.id);return o.createElement("div",{id:t,key:e.id,className:"category-item category-hidden locked-category"},o.createElement("span",{className:"icon icon-".concat(e.icon)},o.createElement("span",{className:"path1"}),o.createElement("span",{className:"path2"}),o.createElement("span",{className:"path3"})),o.createElement(Mt.Z,{delay:0,placement:"bottom",target:t},__("Premium upgrade required")),o.createElement("span",{className:"title"},e.title),o.createElement("span",{className:"bubble"},window.mapData.proCategoryLocationCounts[e.id]))}},{key:"renderGroupWithSubgroups",value:function(e,t){var n=this,r=this.props,i=r.categoriesMap,a=r.categoryTextFilter,s=this.state.expansionStates[e.id];return 0===e.categories.length?null:o.createElement(o.Fragment,{key:e.title},this.renderGroupHeader(e),t.map((function(e){var t=0,r="",l=[],c=!1,u=e.categories.map((function(o){var s=i[o];return s?a&&!s.title.toLowerCase().includes(a)&&e.title&&!e.title.toLowerCase().includes(a)?null:(t+=n.props.locationsByCategory[s.id].length,r=s.icon,l.push(o),c=c||s.visible,n.renderCategory(s,!0)):null}));return o.createElement("div",{key:e.title,className:"group-categories "+(s?"":"hidden")},l.length&&e.title?n.renderSubGroupHeader(e.title,l,t,r,c):null,u)})))}},{key:"renderRdr2CollectorsGroup",value:function(e){var t=this,n=this.props.categoriesMap,r=n[654],i=window.user,a=i&&i.hasPro;return o.createElement(o.Fragment,{key:e.title},this.renderProGroupHeader(e),o.createElement("div",{className:"w-100"},a?this.renderNazarSuggestionsPanel():this.renderCycleStatusMessage(),o.createElement("div",{id:"category-item-"+r.id,key:r.id,className:"category-item ".concat(r.visible?"category-visible":"category-hidden"," solo"),onClick:function(){t.toggleCategory(r.id)},onContextMenu:function(e){e.preventDefault();var n={};Object.values(t.props.categoriesMap).forEach((function(e){n[e.id]=!1})),n[r.id]=!0,t.props.setCategoriesVisibility(n)}},o.createElement("span",{className:"icon icon-".concat(r.icon)},o.createElement("span",{className:"path1"}),o.createElement("span",{className:"path2"}),o.createElement("span",{className:"path3"})),o.createElement("span",{className:"title"},r.title))),Zn.map((function(e,r){return o.createElement("div",{key:r,className:"tag-group ".concat(1===e.length?"tag-group-single":"")},t.renderRdr2CycleSelector(e),e.map((function(e){var r=n[e];if(!r.premium||a)return t.renderCategory(r);var i="category-".concat(r.id);return o.createElement("div",{id:i,key:r.id,className:"category-item category-hidden locked-category nazar-category"},o.createElement("span",{className:"icon icon-".concat(r.icon)},o.createElement("span",{className:"path1"}),o.createElement("span",{className:"path2"}),o.createElement("span",{className:"path3"})),o.createElement(Mt.Z,{delay:0,placement:"bottom",target:i},"Requires PRO upgrade"),o.createElement("span",{className:"title"},r.title),o.createElement("sup",null,"PRO"))})))})))}},{key:"renderRdr2CycleSelector",value:function(e){var t=this,n=this.props.tagFilters,r=n[e[0]];return o.createElement("div",{className:"btn-group category-tags"},[1,2,3,4,5,6].map((function(i){return o.createElement("span",{key:i,className:"btn btn-outline-secondary tag ".concat(r===i?"selected":""),onClick:function(){!function(o){e.forEach((function(e){n[e]=o})),t.props.setTagFilters(n,e)}(i)}},i)})))}},{key:"renderAdvancedFilters",value:function(){var e,t,n,r=this;116===window.game.id?(t="Resource Areas",n="Most nodes will randomly spawn a specific resource type depending on the region",e=[{name:"Copper",regions:[1372,1373,1374,1376]},{name:"Sulphur",regions:[1372,1373,1374,1376]},{name:"Iron",regions:[1374,1375]},{name:"Silver",regions:[1374,1376]},{name:"Crude Gem Vein",regions:[1372,1373]},{name:"Regular Gem Vein",regions:[1374,1375]},{name:"Flawless Gem Vein",regions:[1376]},{name:"Ghost Crystal",regions:[1375]},{name:"Quartz",regions:[1374,1375,1376]},{name:"Trippy Shroom",regions:[1372,1375]},{name:"Hell'
                                                                                                                        s Clarion ",regions:[1372,1374]},{name:"
                                                                                                                        Snow Flower ",regions:[1372,1376,1374]},{name:"
                                                                                                                        Highland Lotus ",regions:[1376]},{name:"
                                                                                                                        Blood Rose ",regions:[1372,1373,1374]},{name:"
                                                                                                                        Fire Blossom ",regions:[1372,1373,1374]},{name:"
                                                                                                                        Ghost Shroom ",regions:[1375]}]):(t="
                                                                                                                        Resource Zones ",n="
                                                                                                                        ",e=[{name:"
                                                                                                                        Fish ",categories:[{name:"
                                                                                                                        Anglerfish ",regions:[1438]},{name:"
                                                                                                                        Bass ",regions:[1440,1442,1437,1443]},{name:"
                                                                                                                        Bream ",regions:[1440]},{name:"
                                                                                                                        Carp ",regions:[1442,1437]},{name:"
                                                                                                                        Catfish ",regions:[1440]},{name:"
                                                                                                                        Cod ",regions:[1438,1441,1439]},{name:"
                                                                                                                        Crab ",regions:[1443]},{name:"
                                                                                                                        Fugu ",regions:[1441]},{name:"
                                                                                                                        Herring ",regions:[1441,1439]},{name:"
                                                                                                                        Kingfish ",regions:[1441]},{name:"
                                                                                                                        Lancetfish ",regions:[1438]},{name:"
                                                                                                                        Lobster ",regions:[1439]},{name:"
                                                                                                                        Perch ",regions:[1442,1437]},{name:"
                                                                                                                        Pike ",regions:[1442]},{name:"
                                                                                                                        Rainbow Trout ",regions:[1440,1442]},{name:"
                                                                                                                        Salmon ",regions:[1437,1443]},{name:"
                                                                                                                        Seaweed ",regions:[1438,1441,1440,1442,1437,1443,1439]},{name:"
                                                                                                                        Shrimp ",regions:[1441]},{name:"
                                                                                                                        Sole ",regions:[1438]},{name:"
                                                                                                                        Squid ",regions:[1438,1439]},{name:"
                                                                                                                        Swordfish ",regions:[1441]},{name:"
                                                                                                                        Tilapia ",regions:[1437,1443]},{name:"
                                                                                                                        Tuna ",regions:[1438,1439]},{name:"
                                                                                                                        Walleye ",regions:[1437]},{name:"
                                                                                                                        White Sturgeon ",regions:[1443]}]},{name:"
                                                                                                                        Crafting Materials ",categories:[{name:"
                                                                                                                        Clay ",regions:[1438,1437,1439]},{name:"
                                                                                                                        Coal Ore ",regions:[1436,1438,1441,1440,1442,1437,1443,1439]},{name:"
                                                                                                                        Cotton ",regions:[1437]},{name:"
                                                                                                                        Crystal ",regions:[1438]},{name:"
                                                                                                                        Dark Wood ",regions:[1438]},{name:"
                                                                                                                        Dream Shards ",regions:[1436,1438,1441,1440,1442,1437,1443,1439]},{name:"
                                                                                                                        Dry Wood ",regions:[1436,1437,1443]},{name:"
                                                                                                                        Gold Nugget ",regions:[1438,1437,1443]},{name:"
                                                                                                                        Hardwood ",regions:[1438,1442,1437,1443,1439]},{name:"
                                                                                                                        Iron Ore ",regions:[1438,1442,1437,1443,1439]},{name:"
                                                                                                                        Night Shard ",regions:[1436,1438,1441,1440,1442,1437,1443,1439]},{name:"
                                                                                                                        Pebbles ",regions:[1438,1441,1442,1437]},{name:"
                                                                                                                        Sand ",regions:[1441]},{name:"
                                                                                                                        Snowball ",regions:[1443]},{name:"
                                                                                                                        Softwood ",regions:[1436,1438,1440,1442,1437,1443,1439]},{name:"
                                                                                                                        Soil ",regions:[1436,1438,1440,1442,1437,1443,1439]},{name:"
                                                                                                                        Stone ",regions:[1436,1438,1441,1440,1442,1437,1443,1439]}]},{name:"
                                                                                                                        Ingredients ",categories:[{name:"
                                                                                                                        Asparagus ",regions:[1443]},{name:"
                                                                                                                        Basil ",regions:[1440]},{name:"
                                                                                                                        Bell Pepper ",regions:[1442]},{name:"
                                                                                                                        Canola ",regions:[1442]},{name:"
                                                                                                                        Carrot ",regions:[1440]},{name:"
                                                                                                                        Chili Pepper ",regions:[1437]},{name:"
                                                                                                                        Clam ",regions:[1441]},{name:"
                                                                                                                        Corn ",regions:[1441]},{name:"
                                                                                                                        Cucumber ",regions:[1443]},{name:"
                                                                                                                        Eggplant ",regions:[1443]},{name:"
                                                                                                                        Garlic ",regions:[1442]},{name:"
                                                                                                                        Ginger ",regions:[1438]},{name:"
                                                                                                                        Leek ",regions:[1438]},{name:"
                                                                                                                        Lettuce ",regions:[1440]},{name:"
                                                                                                                        Mint ",regions:[1443]},{name:"
                                                                                                                        Mushroom ",regions:[1439]},{name:"
                                                                                                                        Okra ",regions:[1439]},{name:"
                                                                                                                        Onion ",regions:[1442]},{name:"
                                                                                                                        Oregano ",regions:[1436]},{name:"
                                                                                                                        Oyster ",regions:[1441]},{name:"
                                                                                                                        Potato ",regions:[1438]},{name:"
                                                                                                                        Pumpkin ",regions:[1438]},{name:"
                                                                                                                        Rice ",regions:[1439]},{name:"
                                                                                                                        Scallop ",regions:[1441]},{name:"
                                                                                                                        Soya ",regions:[1437]},{name:"
                                                                                                                        Spinach ",regions:[1439]},{name:"
                                                                                                                        Sugarcane ",regions:[1441]},{name:"
                                                                                                                        Tomato ",regions:[1441]},{name:"
                                                                                                                        Vanilla ",regions:[1437]},{name:"
                                                                                                                        Wheat ",regions:[1440]},{name:"
                                                                                                                        Zucchini ",regions:[1437]}]}]);var i=e.reduce((function(e,t){return t.categories?t.categories.forEach((function(t){e[t.name]=t})):e[t.name]=t,e}),{}),a=function(e){var t=r.state.selectedResource===e.name;return o.createElement("
                                                                                                                        div ",{key:e.name,className:"
                                                                                                                        category - item region - category - item ".concat(t?"
                                                                                                                        category - visible ":"
                                                                                                                        category - hidden "),onClick:function(){r.state.selectedResource&&i[r.state.selectedResource].regions.forEach((function(e){window.mapManager.setRegionPersistentlyHighlighted(e,!1)})),t?r.setState({selectedResource:null}):(r.setState({selectedResource:e.name}),e.regions.forEach((function(e){window.mapManager.setRegionPersistentlyHighlighted(e,!0)})))}},e.name)};return o.createElement(o.Fragment,null,o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        advanced - filters - header "},o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        section - title "},t),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        section - description "},o.createElement("
                                                                                                                        small ",null,n))),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        group - categories advanced - filters - group "},116===window.game.id?e.map(a):e.map((function(e){return o.createElement(o.Fragment,null,o.createElement("
                                                                                                                        div ",{key:e.name,className:"
                                                                                                                        header heatmap - header "},e.name),e.categories.map(a))}))))}},{key:"
                                                                                                                        renderSubnauticaResources ",value:function(){var e=this,t=function(t){var n=e.state.selectedResource===t.id;return o.createElement("
                                                                                                                        div ",{key:t.id,className:"
                                                                                                                        category - item region - category - item ".concat(n?"
                                                                                                                        category - visible ":"
                                                                                                                        category - hidden "),onClick:function(){e.state.selectedResource&&window.specialData.resources_by_id[e.state.selectedResource].biomes.forEach((function(e){window.mapManager.setRegionPersistentlyHighlighted(e,!1)})),n?e.setState({selectedResource:null}):(e.setState({selectedResource:t.id}),t.biomes.forEach((function(e){window.mapManager.setRegionPersistentlyHighlighted(e,!0)})))}},t.name)};return o.createElement(o.Fragment,null,o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        heatmaps - title "},o.createElement("
                                                                                                                        span ",null,"
                                                                                                                        Resources ")),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        header heatmap - header "},"
                                                                                                                        Minerals "),window.specialData.resources.mineral.map(t),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        header heatmap - header "},"
                                                                                                                        Biological Resource "),window.specialData.resources.biological.map(t),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        header heatmap - header "},"
                                                                                                                        Fauna "),window.specialData.resources.fauna.map(t))}},{key:"
                                                                                                                        renderNewWorldResources ",value:function(){var e=this;return o.createElement("
                                                                                                                        div ",{id:"
                                                                                                                        resource - finder - panel ",className:"
                                                                                                                        panel - section "},o.createElement("
                                                                                                                        h5 ",{className:"
                                                                                                                        panel - section - header "},"
                                                                                                                        Resource Locator "),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        group - categories "},window.specialData.resources.map((function(t){var n=e.state.selectedResource===t.name;return o.createElement("
                                                                                                                        div ",{key:t.name,className:"
                                                                                                                        category - item resource - finder - item ".concat(n?"
                                                                                                                        active ":"
                                                                                                                        "),onClick:function(){if(n){e.setState({selectedResource:null}),window.mapData.regions.forEach((function(e){window.mapManager.setRegionPersistentlyHighlighted(e.id,!1)}));var o=store.getState().search.previousCategories;if(o){var r={};store.getState().map.categoryIds.forEach((function(e){r[e]=!1})),o.forEach((function(e){return r[e]=!0})),store.dispatch(s.cq.setCategoriesVisibility(r))}}else{e.setState({selectedResource:t.name});var i=s.wl.getVisibleCategories(store.getState()).map((function(e){return e.id}));store.dispatch(It.cq.setPreviouslyVisibleCategories(i)),window.mapManager.applyFilter({categoryIds:t.filter.category_ids,regionIds:t.filter.region_ids,tagIds:t.filter.tag_ids}),window.mapData.regions.forEach((function(e){window.mapManager.setRegionPersistentlyHighlighted(e.id,t.filter.region_ids.includes(e.id))}))}}},t.name)}))))}},{key:"
                                                                                                                        renderGroupHeader ",value:function(e){var t=this,n=e.expandable||80===window.game.id&&264===window.mapData.map.id,r=this.state.expansionStates[e.id];return o.createElement("
                                                                                                                        div ",{id:"
                                                                                                                        group - "+e.id,className:"
                                                                                                                        header "+(n?"
                                                                                                                        expandable ":"
                                                                                                                        "),onClick:function(){return t.props.toggleGroup(e)},onContextMenu:function(n){if(n.preventDefault(),window.isEditor&&n.shiftKey)window.store.dispatch(c.cq.setSelectedGroup(e));else{var o={};Object.values(t.props.categoriesMap).forEach((function(e){o[e.id]=!1})),e.categories.forEach((function(e){o[e.id]=!0})),t.props.setCategoriesVisibility(o)}}},n?o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        expander "+(r?"
                                                                                                                        expanded ":"
                                                                                                                        "),onClick:function(n){n.preventDefault(),n.stopPropagation(),t.toggleGroupExpansion(e.id)}},r?o.createElement("
                                                                                                                        i ",{className:"
                                                                                                                        icon ion - md - remove "}):o.createElement("
                                                                                                                        i ",{className:"
                                                                                                                        icon ion - md - add "})):null,e.title)}},{key:"
                                                                                                                        renderSubGroupHeader ",value:function(e,t,n,r,i){var a=this;return o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        subheader ".concat(i?"
                                                                                                                        category - visible ":"
                                                                                                                        category - hidden "),onClick:function(){return a.props.toggleGroup({id:-1,title:e,expandable:!1,categories:t.map((function(e){return window.mapData.categories[e]}))})},onContextMenu:function(e){e.preventDefault();var n={};Object.values(a.props.categoriesMap).forEach((function(e){n[e.id]=!1})),t.forEach((function(e){n[e]=!0})),a.props.setCategoriesVisibility(n)}},o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        icon icon - ".concat(r)},o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        path1 "}),o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        path2 "}),o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        path3 "})),o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        title "},e),o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        bubble "},n))}},{key:"
                                                                                                                        renderNazarSuggestionsPanel ",value:function(){var e,t=this;try{e=(new Date).toLocaleString("
                                                                                                                        default ",{day:"
                                                                                                                        numeric ",month:"
                                                                                                                        long ",timeZone:"
                                                                                                                        UTC "})}catch(t){e="
                                                                                                                        ",console.error(t)}return o.createElement(o.Fragment,null,o.createElement("
                                                                                                                        hr ",null),o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        button - panel "},o.createElement("
                                                                                                                        span ",{className:"
                                                                                                                        title "},e),o.createElement("
                                                                                                                        span ",{onClick:function(){return t.setState({showNazarSuggestions:!t.state.showNazarSuggestions})}},this.state.showNazarSuggestions?"
                                                                                                                        Hide Voting Panel ":"
                                                                                                                        Vote For Today 's Cycles")),o.createElement("hr",null),this.state.showNazarSuggestions&&o.createElement(Wt,{visible:!0,onPressDone:function(){return t.setState({showNazarSuggestions:!0})}}),this.renderCycleStatusMessage())}},{key:"renderCycleStatusMessage",value:function(){return o.createElement("div",{className:"text-center status-message"},window.specialData.cyclesUpdated?o.createElement("div",null,"Cycle data accurate for today"):o.createElement("div",null,o.createElement("b",null,"Warning"),o.createElement("br",null),"Insufficient votes - today'
                                                                                                                        s cycles currently unknown.
                                                                                                                        "))}},{key:"
                                                                                                                        renderProGroupHeader ",value:function(e){var t=window.user;return t&&t.hasPro?this.renderGroupHeader(e):o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        header "},e.title,this.renderProUpgrade())}},{key:"
                                                                                                                        renderPresets ",value:function(){return o.createElement(On,null)}},{key:"
                                                                                                                        renderSuggestions ",value:function(){return o.createElement(Jt,{needsUpgrade:!1})}},{key:"
                                                                                                                        renderSettings ",value:function(){var e=window.user;return e&&e.hasPro,o.createElement(un,null)}},{key:"
                                                                                                                        renderCopyrightFooter ",value:function(){return o.createElement("
                                                                                                                        div ",{className:"
                                                                                                                        panel - footer copyright - footer w - 100 text - center "+(window.user&&window.user.hasPro?"
                                                                                                                        ":"
                                                                                                                        reduce - margin ")},o.createElement("
                                                                                                                        small ",{className:"
                                                                                                                        text - center mt - 1 "},o.createElement("
                                                                                                                        a ",{href:"
                                                                                                                        https: //mapgenie.io/",className:"copyright-footer-link"},"MapGenie"),"Â ",o.createElement("span",null,"Â Â â€¢Â Â "),"Â ",o.createElement("a",{href:"https://www.ziffdavis.com/privacy-policy",rel:"nofollow",className:"copyright-footer-link"},"Privacy Policy")))}},{key:"renderActiveRegionFilterNotification",value:function(e){var t=this,n=window.mapData.regions.find((function(t){return t.id===e}));return o.createElement("div",{className:"region-filter-notification"},o.createElement("span",{className:"region-filter-clear",onClick:function(){t.props.setRegionFilter(null),window.clearRegionFilter()}},"Ã—"),o.createElement("span",{className:"region-filter-title"},n.title))}}])&&Mn(t.prototype,n),r&&Mn(t,r),a}(o.Component);const Gn=(0,i.$j)((function(e,t){return{heatmapGroups:e.map.heatmapGroups,selectedHeatmap:e.map.selectedHeatmap,categoryGroups:s.wl.getGroupedCategories(e),categoriesMap:e.map.categories,locationsByCategory:e.map.locationsByCategory,locations:e.map.locations,selectedTagId:e.map.includedTagId,selectedRegionId:e.map.regionFilter,tagFilters:e.map.tagFilters,multiTagFilters:e.map.multiTagFilters,categoryTextFilter:e.search.currentInput}}),Object.assign(Object.assign({},l.cq),s.cq))(qn);const Kn="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g;var Yn="object"==typeof self&&self&&self.Object===Object&&self;const Xn=(Kn||Yn||Function("return this")()).Symbol;var Qn=Object.prototype,Jn=Qn.hasOwnProperty,eo=Qn.toString,to=Xn?Xn.toStringTag:void 0;const no=function(e){var t=Jn.call(e,to),n=e[to];try{e[to]=void 0;var o=!0}catch(e){}var r=eo.call(e);return o&&(t?e[to]=n:delete e[to]),r};var oo=Object.prototype.toString;const ro=function(e){return oo.call(e)};var io=Xn?Xn.toStringTag:void 0;const ao=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":io&&io in Object(e)?no(e):ro(e)};const so=function(e,t){return function(n){return e(t(n))}}(Object.getPrototypeOf,Object);const lo=function(e){return null!=e&&"object"==typeof e};var co=Function.prototype,uo=Object.prototype,po=co.toString,fo=uo.hasOwnProperty,go=po.call(Object);const ho=function(e){if(!lo(e)||"[object Object]"!=ao(e))return!1;var t=so(e);if(null===t)return!0;var n=fo.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&po.call(n)==go};var mo=n(67121),yo="@@redux/INIT";function vo(e,t,n){var o;if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(vo)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var r=e,i=t,a=[],s=a,l=!1;function c(){s===a&&(s=a.slice())}function u(){return i}function d(e){if("function"!=typeof e)throw new Error("Expected listener to be a function.");var t=!0;return c(),s.push(e),function(){if(t){t=!1,c();var n=s.indexOf(e);s.splice(n,1)}}}function p(e){if(!ho(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(l)throw new Error("Reducers may not dispatch actions.");try{l=!0,i=r(i,e)}finally{l=!1}for(var t=a=s,n=0;n0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];if(a)throw a;for(var o=!1,r={},s=0;s0&&void 0!==arguments[0]?arguments[0]:{},t=e.promiseTypeSuffixes||jo,n=e.promiseTypeDelimiter||"_";return function(e){var o=e.dispatch;return function(e){return function(r){var i=void 0,a=void 0;if(!r.payload)return e(r);var s=r.payload;if(Fo(s))i=s;else if(Fo(s.promise))i=s.promise,a=s.data;else{if("function"!=typeof s&&"function"!=typeof s.promise)return e(r);if(i=s.promise?s.promise():s(),a=s.promise?s.data:void 0,!Fo(i))return e(Ao({},r,{payload:i}))}var l=r.type,c=r.meta,u=Do(t,3),d=u[0],p=u[1],f=u[2],g=function(e,t){return Ao({type:[l,t?f:p].join(n)},null==e?{}:{payload:e},void 0!==c?{meta:c}:{},t?{error:!0}:{})};return e(Ao({type:[l,d].join(n)},void 0!==a?{payload:a}:{},void 0!==c?{meta:c}:{})),i.then((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=g(e,!1);return o(t),{value:e,action:t}}),(function(e){var t=g(e,!0);throw o(t),e}))}}}}n(94500);function zo(e){return function(e){if(Array.isArray(e))return Zo(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Zo(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Zo(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zo(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);ne.length)&&(t=e.length);for(var n=0,o=new Array(t);n1&&void 0!==arguments[1]?arguments[1]:Ko();return vo(t,{},Go(So.apply(void 0,Vo(qo()))))}({});window.store=ei,ei.dispatch(l.cq.initialize());var ti=window.user?window.user.suggestions:[],ni=new Qr(ei,ti);ni.initMap(s.wl.getAllLocations(ei.getState())),window.mapManager=ni,window.isEditor&&(window.mapManager.CAMERA=new Jr.Z),window.config.altMapSdk?window.studioMapManager=window.mapManager:window.studioMapManager=new tr(ti),1!==window.mapData.map.id||window.config.altMapSdk||!window.config.initialTagFilters||window.visibleCategories||window.visibleLocations||Object.keys(window.mapData.sharedNotes).length||ei.dispatch(s.cq.setTagFilters(window.config.initialTagFilters,Object.keys(window.config.initialTagFilters))),r.render(o.createElement(i.zt,{store:ei},o.createElement(Tt,null)),document.getElementById("dialogs")),r.render(o.createElement(i.zt,{store:ei},o.createElement(Gn,null)),document.getElementById("categories-wrapper")),r.render(o.createElement(i.zt,{store:ei},o.createElement(No,null)),document.getElementById("search-results-wrapper")),r.render(o.createElement(i.zt,{store:ei},o.createElement(Or,null)),document.getElementById("user-panel-wrapper")),!window.isMobile&&window.config.checklistEnabled&&r.render(o.createElement(i.zt,{store:ei},o.createElement(Xr,null)),document.getElementById("checklist-sidebar")),n(61914);var oi=document.getElementById("registration-overlay-wrapper");if(oi){r.render(o.createElement(jr,{visible:!0,onDismiss:function(){r.render(o.createElement(jr,{visible:!1,onDismiss:this}),oi)}}),oi)}if(window.isOverwolf){var ri=function(){r.render(o.createElement(jr,{visible:!1,onDismiss:this}),document.getElementById("auth-overlay-wrapper"))};$(document).ready((function(){$(document).on("click","a",(function(e){var t=$(this).attr("href");t&&(-1!==t.indexOf("/upgrade")&&window.user||-1!==t.indexOf("/import")?(e.preventDefault(),window.location.href=t+"?overwolf=true"):-1!==t.indexOf("/login")||-1!==t.indexOf("/upgrade")&&!window.user?(e.preventDefault(),r.render(o.createElement(jr,{visible:!0,onDismiss:ri}),document.getElementById("auth-overlay-wrapper"))):t.startsWith(window.baseUrl+"/maps/")&&!t.startsWith(window.mapUrl)&&-1===t.indexOf("?")&&(e.preventDefault(),window.location.href=t+"?overwolf=true"))}))}))}if(window.partner&&$(document).ready((function(){$(document).on("click","a",(function(e){$(this).attr("href")&&(this.search="?p="+window.partner)}))})),window.isEditor){var ii=new URLSearchParams(window.location.search),ai=ii.get("classic"),si=ii.get("overwolf");ai&&$(document).ready((function(){$(document).on("click","a.map-link",(function(e){$(this).attr("href")&&(this.search=si?"?classic=1&overwolf=true":"?classic=1")}))}))}$("#show-all").click((function(){ei.dispatch(s.cq.showAllCategories()),window.Analytics.trackEngagement("show all")})),$("#hide-all").click((function(){ei.dispatch(s.cq.hideAllCategories()),window.Analytics.trackEngagement("hide all")})),$("#toggle-found").click((function(){var e=$(this);e.toggleClass("disabled"),ni.setFoundLocationsShown(!e.hasClass("disabled"))})),$("#left-sidebar .sidebar-close").click((function(){$("#left-sidebar").toggleClass("closed"),$("#app").toggleClass("sidebar-closed")})),$("#right-sidebar .sidebar-close").click((function(){$("#right-sidebar").toggleClass("closed")})),$("#user-panel-wrapper").on("click","#toggle-checklist-button",(function(){$("#checklist-sidebar").toggleClass("closed"),$("#app").toggleClass("checklist-open"),$("#app").hasClass("checklist-open")?setTimeout((function(){window.map.resize()}),30):window.map.resize()})),$(document).ready((function(){var e,t=$("#categories"),n=$("#search-results-wrapper"),o=$("#search-close"),r=$("#search-input"),i=$("#search-submit"),a=80===window.game.id&&!window.isMobile;function c(){window.isMobile=window.innerWidth<768,window.isMobile=window.isEmbedded?"compact"===window.embedType:window.isMobile,e!==window.isMobile&&(e=window.isMobile,window.isMobile?($("#search-wrapper").appendTo("#navbar-collapse-search"),$("#left-sidebar-buttons").appendTo("#navbar-collapse"),$("#categories-wrapper").appendTo("#navbar-collapse"),$("#user-panel-wrapper").appendTo("#navbar-collapse-user")):($("#search-wrapper").appendTo("#left-sidebar-search-container"),$("#left-sidebar-buttons").appendTo("#left-sidebar-buttons-container"),$("#categories-wrapper").appendTo("#sidebar-categories-wrapper"),$("#user-panel-wrapper").appendTo("#right-sidebar")))}if(r.keyup((function(e){13===e.keyCode?i.click():a&&L(ei.dispatch(It.cq.setCurrentInput(r.val())),100)})),o.click((function(){t.removeClass("not-shown"),n.addClass("not-shown"),o.addClass("d-none"),r.val(""),ei.dispatch(It.cq.setQuery(null)),ei.dispatch(It.cq.setCurrentInput(null));var e=ei.getState().search.previousCategories;e&&ei.dispatch(s.cq.toggleCategories(e))})),i.click((function(){var e=r.val(),i=ei.getState().search.query;if(i!==e){if(t.addClass("not-shown"),n.removeClass("not-shown"),o.removeClass("d-none"),!i){var a=s.wl.getVisibleCategories(ei.getState()).map((function(e){return e.id}));ei.dispatch(It.cq.setPreviouslyVisibleCategories(a))}ei.dispatch(s.cq.hideAllCategories()),ei.dispatch(l.cq.showNotes(!1)),ei.dispatch(It.cq.setQuery(e)),window.Analytics.trackEvent("search",{search_term:e})}})),null!=window.mapData.searchQuery&&(r.val(window.mapData.searchQuery),i.click()),$(document).on("click","#add-note:not(.disabled)",(function(){window.isMobile&&$("#navbar-collapse-user").collapse("toggle"),ni.addNewNote()})),$(document).on("click","#add-note-mobile",(function(){ni.addNewNote()})),$(window).resize(c),c(),$('[data-toggle="tooltip"]').tooltip(),!window.isMobile||window.user||window.isMini||window.isEmbedded||setTimeout((function(){var e=$("#navbar-toggler-user");e.tooltip("show"),setTimeout((function(){e.tooltip("hide"),e.tooltip("dispose")}),5e3)}),1e3),$(document).on("keydown",(function(e){var t=e.which||e.keyCode;e.ctrlKey||e.metaKey?70===t&&(e.preventDefault(),r.focus()):e.altKey&&(65===t?(e.preventDefault(),$("#show-all").click()):83===t&&(e.preventDefault(),$("#hide-all").click()))})),window.config.presetsEnabled&&$(document).on("keydown",(function(e){var t=e.which||e.keyCode;if(e.altKey)if(t>=49&&t<=57){e.preventDefault();var n=ei.getState(),o=n.user.presets,r=t-49;rTutorial\n
                                                                                                                        Welcome to GTA 5 Map v2!Click next to get a quick tour of the features.

                                                                                                                        \n "},{element:document.getElementById("
                                                                                                                        categories "),intro:"\
                                                                                                                        n Categories\ n Here are all the marker types available on the map.Click on a category to show / hide the markers.

                                                                                                                        \n Tip: You can also click on the headers to toggle an entire group of categories

                                                                                                                        \ n "},{element:document.getElementById("
                                                                                                                        left - sidebar - search - container "),intro:'\n Search\n
                                                                                                                        Use this box to search
                                                                                                                        for a specific location.

                                                                                                                        \n Tip: The search box will also show results from the personal notes you\ 've added.

                                                                                                                        \
                                                                                                                        n "Wtf is a note?!"
                                                                                                                        Well....

                                                                                                                        \n '},{element:window.user?document.querySelectorAll("#user-panel .button-panel")[0]:document.getElementById("user-panel-wrapper"),position:"left",intro:"\n Custom Notes\n
                                                                                                                        Once you 're logged in, you'
                                                                                                                        ll be able to add your own note markers to the map.

                                                                                                                        \n "},{element:document.getElementById("
                                                                                                                        user - panel - wrapper "),position:"
                                                                                                                        left ",intro:"\
                                                                                                                        n Progress Tracking\ n You can also mark locations as completed / found and track your collectibles progress.

                                                                                                                        \n Tip: Right click on location icons to quickly mark them as found.

                                                                                                                        \n "}],skiplabel:"
                                                                                                                        Exit ",showStepNumbers:!1}),u.start()}))}if($("
                                                                                                                        #map - panel - collapse - 1, #map - panel - collapse - 2, #map - panel - collapse - 3 ").click((function(){$(this).toggleClass("
                                                                                                                        expanded "),$($(this).data("
                                                                                                                        target ")).collapse("
                                                                                                                        toggle ")})),$("
                                                                                                                        #region - panel - collapse ").click((function(){var e=$(this);e.toggleClass("
                                                                                                                        expanded "),e.hasClass("
                                                                                                                        expanded ")?(e.parent().addClass("
                                                                                                                        regions - expanded "),e.text(e.data("
                                                                                                                        region - label - hide "))):(e.parent().removeClass("
                                                                                                                        regions - expanded "),e.text(e.data("
                                                                                                                        region - label - show "))),$("
                                                                                                                        #region - panel - collapse - content ").collapse("
                                                                                                                        toggle ")})),$(".temtem - region - link ").click((function(){var e=$(this);window.mapManager.panToLatLng(e.data("
                                                                                                                        latitude "),e.data("
                                                                                                                        longitude "))})),window.config.altMapSdk&&(3===window.mapData.map.id||1===window.mapData.map.id)){var d=$("
                                                                                                                        #toggle - image - overlays ");d.click((function(){d.toggleClass("
                                                                                                                        disabled ");var e=!d.hasClass("
                                                                                                                        disabled ");window.mapManager.setImageOverlaysVisible(e)}))}var p=$(".location - region - link ");p.click((function(){var e=$(this),t=parseInt(e.data("
                                                                                                                        region - id "));if(window.config.regionLocationFocusEnabled){var n=ei.getState().map.locations.filter((function(e){return e.region_id===t})),o=n.map((function(e){return e.id}));ei.dispatch(s.cq.hideAllCategories()),window.mapManager.setMarkersVisibleById(o,!0),window.mapManager.setBoundsFromLocations(n,window.isMobile?50:{left:300,right:100,top:100,bottom:100})}else{var r=window.mapData.regions.find((function(e){return e.id===t}));window.config.altMapSdk?window.mapManager.panToRegion(r):r.features.length>0&&window.mapManager.panToShape(r.features[0].geometry)}})),p.contextmenu((function(e){e.preventDefault();var t=$(this),n=parseInt(t.data("
                                                                                                                        region - id ")),o=t.hasClass("
                                                                                                                        selected ");if(p.removeClass("
                                                                                                                        selected "),o)ei.dispatch(s.cq.setRegionFilter(null));else{ei.dispatch(s.cq.setRegionFilter(n,!0)),t.addClass("
                                                                                                                        selected ");var r=window.mapData.regions.find((function(e){return e.id===n}));window.config.altMapSdk?window.mapManager.panToRegion(r):r.features.length>0&&window.mapManager.panToShape(r.features[0].geometry,window.isMobile?50:{left:300,right:-100,top:-100,bottom:-100})}})),window.clearRegionFilter=function(){p.removeClass("
                                                                                                                        selected ")},$("
                                                                                                                        #navbar - collapse - regions.location - region - link ").click((function(){$("
                                                                                                                        #navbar - collapse - regions ").collapse("
                                                                                                                        toggle ")})),$("
                                                                                                                        #language - dropdown.dropdown - item ").click((function(){var e=$(this).attr("
                                                                                                                        href ").substring(1);console.log("
                                                                                                                        Switching Language: "+e);var t=new Date;t.setTime(t.getTime()+15768e7),document.cookie="
                                                                                                                        locale = ".concat(e,"; expires = ").concat(t.toGMTString(),"; Max - Age = 157680000; path = /;"),window.location.reload(!0)})),$("#embed-button").click((function(){$("#embed-dialog").modal()})),$("#embed-copy-button").click((function(){document.getElementById("embed-textarea").select(),document.execCommand("copy"),$("#embed-dialog").modal("hide"),Se.Z.show("Embed Code Copied!")}))}))},25397:(e,t,n)=>{"use strict";n.d(t,{Z:()=>D});var o=n(87757),r=n.n(o),i=n(67294),a=n(73935),s=n(41825),l=n(6034),c=n(78299),u=n(97118);function d(e,t){for(var n=0;n').concat(e.title," ")})),'\n \n 
                                                                                                                        Title\ n Description\ n\ n '),this.container}},{key:"onRemove",value:function(){this.container.parentNode.removeChild(this.container),this.map=void 0}},{key:"isEnabled",value:function(){return!this.container.classList.contains("disabled")}},{key:"getMultiAddLocationTitle",value:function(){return document.getElementById("multi-marker-title-input").value}},{key:"getMultiAddLocationDescription",value:function(){return document.getElementById("multi-marker-description-input").value}},{key:"getMultiAddLocationCategoryId",value:function(){return parseInt(document.getElementById("multi-marker-category-input").value)}}])&&h(t.prototype,n),o&&h(t,o),e}();function y(e,t){for(var n=0;n=1e3)return window.alert("Select a smaller number of features");var o=n.map((function(e){return e.id}));window.mapManager.setMarkersVisibleById(o,!0),window.mapManager.setMarkersDraggable(!0,(function(e,t){var n=o.reduce((function(e,n){var o=store.getState().map.locationsById[n];return o.latitude+=t.lat,o.longitude+=t.lng,e[n]=o,e}),{});window.store.dispatch(u.cq.updateLocations(n)),window.mapManager.setMarkersDraggable(!1)}))}t.map.dragPan.enable()}}var t,n,o;return t=e,(n=[{key:"onAdd",value:function(e){return this.map=e,this.container=document.createElement("div"),this.canvas=this.map.getCanvasContainer(),this.canvas.addEventListener("mousedown",this.onMouseDown,!0),this.container}},{key:"onRemove",value:function(){this.container.parentNode.removeChild(this.container),this.map=void 0}},{key:"isEnabled",value:function(){}}])&&k(t.prototype,n),o&&k(t,o),e}();var C=n(32467);function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return O(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return O(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,r=function(){};return{s:r,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw i}}}}function O(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n0){var s=this.map.getSource("locations-data")._data;s.features=s.features.filter((function(t){return t.properties.locationId!==e.id})),this.map.getSource("locations-data").setData(s)}if(n.length>0){var l=this.map.getSource("text-locations-data")._data;l.features=l.features.filter((function(t){return t.properties.locationId!==e.id})),this.map.getSource("text-locations-data").setData(l)}if(i.length>0){var c=this.map.getSource("line-locations-data")._data;c.features=c.features.filter((function(t){return t.properties.locationId!==e.id})),this.map.getSource("line-locations-data").setData(c)}if(r.length>0){var u=this.map.getSource("circle-locations-data")._data;u.features=u.features.filter((function(t){return t.properties.locationId!==e.id})),this.map.getSource("circle-locations-data").setData(u)}if(a.length>0){var d=this.map.getSource("polygon-locations-data")._data;d.features=d.features.filter((function(t){return t.properties.locationId!==e.id})),this.map.getSource("polygon-locations-data").setData(d)}this.addMarker(e)}},{key:"setAddLocationsEnabled",value:function(e){this.updateActiveEditingTool(e,this.multiMarkerControl.isEnabled())}},{key:"setAddMultiLocationsEnabled",value:function(e){this.updateActiveEditingTool(this.addMarkersControl.isEnabled(),e)}},{key:"updateActiveEditingTool",value:function(e,t){e?(this.activeEditorTool="single",this.map.getCanvas().classList.remove("cursor-crosshair"),this.map.on("click",this.onClickMap),this.cloneMarkerControl.setEnabled(!0)):t?(this.activeEditorTool="multi",this.map.on("click",this.onClickMap),this.map.getCanvas().classList.add("cursor-crosshair"),this.cloneMarkerControl.setEnabled(!1)):(this.activeEditorTool="none",this.map.off("click",this.onClickMap),this.map.getCanvas().classList.remove("cursor-crosshair"),this.cloneMarkerControl.setEnabled(!1))}},{key:"enableLocationFeaturesEditor",value:function(e){var t=this;document.getElementById("mapbox-gl-draw-close-button")&&this.disableLocationFeaturesEditor(),this.map.addControl(this.drawingTools,"bottom-center");var n=null,o=document.createElement("button");o.classList.add("mapbox-gl-draw_ctrl-draw-btn","mapbox-gl-draw-save-button"),o.title="Save",o.addEventListener("click",(function(){var n=t.drawingTools.getAll().features,o=document.getElementById("location-features-modal");a.render(i.createElement(s.zt,{store:window.store},i.createElement(C.Z,{location:e,features:n,close:function(){a.unmountComponentAtNode(o)}})),o)}));var r=document.createElement("button");r.id="mapbox-gl-draw-edit-properties-button",r.classList.add("mapbox-gl-draw_ctrl-draw-btn","mapbox-gl-draw-edit-properties-button"),r.title="Edit Properties",r.disabled=!0,r.addEventListener("click",(function(){t.showFeaturePropertiesEditor(e,n)}));var c=document.createElement("button");c.id="mapbox-gl-draw-smooth-line-button",c.classList.add("mapbox-gl-draw_ctrl-draw-btn","mapbox-gl-draw-smooth-line-button"),c.title="Smooth Line",c.disabled=!0,c.addEventListener("click",(function(){var e=n.geometry.coordinates,o=l(e);t.drawingTools.delete(n.id),t.drawingTools.add(Object.assign(Object.assign({},n),{geometry:Object.assign(Object.assign({},n.geometry),{coordinates:o})}))}));var u=document.createElement("button");u.id="mapbox-gl-draw-close-button",u.classList.add("mapbox-gl-draw_ctrl-draw-btn","mapbox-gl-draw-close-button"),u.title="Close",u.addEventListener("click",(function(){return t.disableLocationFeaturesEditor()}));var d=document.querySelector(".mapbox-gl-draw_ctrl-draw-btn").parentElement;d.appendChild(o),d.prepend(r),d.prepend(c),d.prepend(u),d.classList.add("mapboxgl-ctrl-group-horizontal"),e.features?(this.drawingTools.set({type:"FeatureCollection",features:e.features}),1===e.features.length?this.drawingTools.changeMode("direct_select",{featureId:e.features[0].id}):this.drawingTools.changeMode("simple_select")):this.drawingTools.changeMode("draw_polygon"),this.map.on("draw.selectionchange",(function(e){console.log("Selected Features",e.features);var t=!1,o=!1,i=e.features;if(1===i.length){var a=i[0];"LineString"===a.geometry.type&&(n=a,t=!0,o=!0)}r.disabled=!t,c.disabled=!o}))}},{key:"disableLocationFeaturesEditor",value:function(){this.drawingTools.deleteAll(),this.map.off("draw.create"),this.map.off("draw.update"),this.map.off("draw.selectionchange"),this.map.removeControl(this.drawingTools)}},{key:"showFeaturePropertiesEditor",value:function(e,t){var n=this,o=t.properties||{},r=document.createElement("div");r.classList.add("mapbox-control-properties-popup");var i=document.createElement("div");i.classList.add("mapbox-control-properties-content"),i.innerHTML='\
                                                                                                                        n\ n Properties Editor\ n\ n\ n\ n\ n\ n\ n line - color '.concat(o["line-color"]||"","\
                                                                                                                        n ");var a=document.createElement("
                                                                                                                        div ");a.classList.add("
                                                                                                                        mapbox - control - properties - footer ");var s=document.createElement("
                                                                                                                        div ");s.classList.add("
                                                                                                                        mapbox - control - properties - button "),s.textContent="
                                                                                                                        Update ",s.addEventListener("
                                                                                                                        click ",(function(){var e=document.querySelector(".mapbox - control - properties - value ").textContent;n.drawingTools.setFeatureProperty(t.id,"
                                                                                                                        line - color ",e),r.remove()}));var l=document.createElement("
                                                                                                                        div ");l.classList.add("
                                                                                                                        mapbox - control - properties - button "),l.textContent="
                                                                                                                        Cancel ",l.addEventListener("
                                                                                                                        click ",(function(){r.remove()})),a.appendChild(l),a.appendChild(s),i.appendChild(a),r.appendChild(i),document.getElementById("
                                                                                                                        mapbox - gl - draw - edit - properties - button ").parentElement.prepend(r)}},{key:"
                                                                                                                        onClickMap ",value:function(e){var t=this;if(!this.isDrawingModeActive){var n=this.map.queryRenderedFeatures(e.point);if(n.length>0){var o,r=_(n);try{for(r.s();!(o=r.n()).done;){var i=o.value;if("
                                                                                                                        regions - data "!==i.source&&"
                                                                                                                        subregions - data "!==i.source&&"
                                                                                                                        text - locations - data "!==i.source&&"
                                                                                                                        polygon - locations - data "!==i.source&&"
                                                                                                                        mapbox - gl - draw - cold "!==i.source&&"
                                                                                                                        mapbox - gl - draw - hot "!==i.source)return}}catch(e){r.e(e)}finally{r.f()}}this.newLocationMarker&&(this.newLocationMarker.remove(),this.newLocationMarker=null);var a=document.createElement("
                                                                                                                        div ");if(a.className="
                                                                                                                        marker add - location - marker ",this.newLocationMarker=new mapboxgl.Marker({draggable:!0,element:a,offset:[0,-20]}).setLngLat(e.lngLat).addTo(this.map),"
                                                                                                                        multi "===this.activeEditorTool){var s=this.multiMarkerControl.getMultiAddLocationTitle(),l=this.multiMarkerControl.getMultiAddLocationCategoryId(),c=this.multiMarkerControl.getMultiAddLocationDescription();return s?void this.saveNewLocation({id:"
                                                                                                                        _ "+Date.now(),title:s,category_id:l,description:c,latitude:e.lngLat.lat,longitude:e.lngLat.lng}).then():void window.toastr.error("
                                                                                                                        Missing title ","
                                                                                                                        Error adding location ")}store.dispatch(u.cq.addNewLocation({lat:e.lngLat.lat,lng:e.lngLat.lng})),this.newLocationMarker.on("
                                                                                                                        dragend ",(function(){var e=t.newLocationMarker.getLngLat();store.dispatch(u.cq.updateNewLocationPosition({lat:e.lat,lng:e.lng}))})),this.newLocationMarker.getElement().addEventListener("
                                                                                                                        click ",(function(e){e.preventDefault(),e.stopPropagation(),store.dispatch(u.cq.showLocationInfo(store.getState().map.newLocation,!0)),store.dispatch(u.cq.showMarkerEditMode(!0))})),this.newLocationMarker.getElement().addEventListener("
                                                                                                                        mousedown ",(function(e){t.isAllowedToDragMarkers=!1,document.addEventListener("
                                                                                                                        mouseup ",(function(){t.isAllowedToDragMarkers=!0}),{once:!0})}))}}},{key:"
                                                                                                                        saveNewLocation ",value:function(e){return F(this,void 0,void 0,r().mark((function t(){var n;return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,window.axios.post("
                                                                                                                        api / v1 / locations ",{map_id:window.mapData.map.id,category_id:e.category_id,region_id:e.region_id,title:e.title,description:e.description,latitude:e.latitude,longitude:e.longitude,z:e.z,tags:e.tags});case 3:n=t.sent,window.store.dispatch(u.cq.createLocation(n.data)),window.store.dispatch(u.cq.showLocationInfo(e,!0)),t.next=12;break;case 8:t.prev=8,t.t0=t.catch(0),window.toastr.error(t.t0,"
                                                                                                                        Error saving location "),console.error(t.t0);case 12:case"
                                                                                                                        end ":return t.stop()}}),t,null,[[0,8]])})))}}])&&L(t.prototype,n),o&&L(t,o),d}(c.default)},52886:(e,t,n)=>{"
                                                                                                                        use strict ";n.d(t,{c6:()=>o,_W:()=>r,vc:()=>i,m$:()=>a,Qu:()=>s,Ye:()=>l,Ne:()=>c,xq:()=>u,aF:()=>d,mG:()=>p,th:()=>h});var o={946:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #fdf3cf ","
                                                                                                                        circle - color ":"
                                                                                                                        #386150","circle-opacity":1},993:{"circle-stroke-color":"# 656565 ","
                                                                                                                        circle - color ":"
                                                                                                                        #656565","circle-opacity":.7},994:{"circle-stroke-color":"# 7 ba84f ","
                                                                                                                        circle - color ":"
                                                                                                                        #7ba84f","circle-opacity":.7},995:{"circle-stroke-color":"# 6794 ce ","
                                                                                                                        circle - color ":"
                                                                                                                        #6794ce","circle-opacity":.7},996:{"circle-stroke-color":"# c169f2 ","
                                                                                                                        circle - color ":"
                                                                                                                        #c169f2 ","
                                                                                                                        circle - opacity ":.7},997:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #FF8C1A ","
                                                                                                                        circle - color ":"
                                                                                                                        #FF8C1A ","
                                                                                                                        circle - opacity ":.7},3374:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3333:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3334:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3375:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3376:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3335:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3377:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3336:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3337:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3378:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3338:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3351:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3339:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3352:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3379:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3340:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3380:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3381:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3341:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3382:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3353:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3342:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3343:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3344:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3383:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3345:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3384:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3354:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3346:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3356:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3385:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3347:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3348:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3349:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3355:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3386:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3350:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #659654","circle-opacity":1},3673:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3674:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3675:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3676:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3677:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3678:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3679:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3680:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3681:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3682:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3683:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3684:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3685:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3687:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},3652:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #7B2E25","circle-opacity":1},3607:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #498C97","circle-opacity":1},5762:{"circle-stroke-color":"# D2E9EF ","
                                                                                                                        circle - color ":"
                                                                                                                        #5A8A95","circle-opacity":1},6107:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #7A8590","circle-opacity":1},6109:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #3C8B65","circle-opacity":1},6861:{"circle-stroke-color":"# E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},6866:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #C37F65 ","
                                                                                                                        circle - opacity ":1},8206:{"
                                                                                                                        circle - stroke - color ":"
                                                                                                                        #E4E0DD ","
                                                                                                                        circle - color ":"
                                                                                                                        #498C97","circle-opacity":1}},r= {
                                                                                                                            126: {
                                                                                                                                "text-color": "#c29cd8",
                                                                                                                                "text-halo-color": "#253139",
                                                                                                                                "line-color": "#533f5d",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#533f5d",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            127: {
                                                                                                                                "text-color": "#c29cd8",
                                                                                                                                "text-halo-color": "#253139",
                                                                                                                                "line-color": "#533f5d",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#533f5d",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            128: {
                                                                                                                                "text-color": "#c29cd8",
                                                                                                                                "text-halo-color": "#253139",
                                                                                                                                "line-color": "#533f5d",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#533f5d",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            129: {
                                                                                                                                "text-color": "#769CB3",
                                                                                                                                "text-halo-color": "#253139",
                                                                                                                                "line-color": "#445A67",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#445A67",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            130: {
                                                                                                                                "text-color": "#769CB3",
                                                                                                                                "text-halo-color": "#253139",
                                                                                                                                "line-color": "#445A67",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#445A67",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            131: {
                                                                                                                                "text-color": "#769CB3",
                                                                                                                                "text-halo-color": "#253139",
                                                                                                                                "line-color": "#445A67",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#445A67",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            132: {
                                                                                                                                "text-color": "#efefef",
                                                                                                                                "text-halo-color": "#aaaaaa",
                                                                                                                                "line-color": "#b1b1b1",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#b1b1b1",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            133: {
                                                                                                                                "text-color": "#efefef",
                                                                                                                                "text-halo-color": "#aaaaaa",
                                                                                                                                "line-color": "#b1b1b1",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#b1b1b1",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            134: {
                                                                                                                                "text-color": "#61BA76",
                                                                                                                                "text-halo-color": "#23462B",
                                                                                                                                "line-color": "#3C7449",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#3C7449",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            135: {
                                                                                                                                "text-color": "#61BA76",
                                                                                                                                "text-halo-color": "#23462B",
                                                                                                                                "line-color": "#3C7449",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#3C7449",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            136: {
                                                                                                                                "text-color": "#61BA76",
                                                                                                                                "text-halo-color": "#23462B",
                                                                                                                                "line-color": "#3C7449",
                                                                                                                                "line-width": 2,
                                                                                                                                "fill-color": "#3C7449",
                                                                                                                                "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                            },
                                                                                                                            354: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            355: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            356: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            357: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            358: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            474: {
                                                                                                                                "text-color": "#B07CEE",
                                                                                                                                "line-color": "#ff6a13"
                                                                                                                            },
                                                                                                                            475: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            476: {
                                                                                                                                "text-color": "#B07CEE",
                                                                                                                                "line-color": "#ff6a13"
                                                                                                                            },
                                                                                                                            477: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            478: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            479: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            480: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            481: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            482: {
                                                                                                                                "text-color": "#B07CEE",
                                                                                                                                "line-color": "#ff6a13"
                                                                                                                            },
                                                                                                                            483: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            484: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            485: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            486: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            487: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            488: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            },
                                                                                                                            489: {
                                                                                                                                "text-color": "#FFFFFF",
                                                                                                                                "line-color": "#FFFFFF"
                                                                                                                            }
                                                                                                                        }, i = {
                                                                                                                            657: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#239FBD",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            658: {
                                                                                                                                "line-color": "#D8772C",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#D8772C",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            3652: {
                                                                                                                                "line-color": "#7B2E25",
                                                                                                                                "line-width": 4
                                                                                                                            },
                                                                                                                            3672: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#7B2E25",
                                                                                                                                "fill-opacity": .4
                                                                                                                            },
                                                                                                                            3689: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#7B2E25",
                                                                                                                                "fill-opacity": .4
                                                                                                                            },
                                                                                                                            4864: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#239FBD",
                                                                                                                                "fill-opacity": .5
                                                                                                                            },
                                                                                                                            5750: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 1,
                                                                                                                                "fill-color": "#FF9600",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            5751: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 1,
                                                                                                                                "fill-color": "#B5E51A",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            5752: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 1,
                                                                                                                                "fill-color": "#5ED1F4",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            6047: {
                                                                                                                                "line-color": "#CCC846",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#CCC846",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            6048: {
                                                                                                                                "line-color": "#CCC846",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#CCC846",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            6052: {
                                                                                                                                "line-color": "#CCC846",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#CCC846",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            6055: {
                                                                                                                                "line-color": "#CCC846",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#CCC846",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            6057: {
                                                                                                                                "line-color": "#CCC846",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#CCC846",
                                                                                                                                "fill-opacity": .35
                                                                                                                            },
                                                                                                                            8565: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#7B2E25",
                                                                                                                                "fill-opacity": .4
                                                                                                                            }
                                                                                                                        }, a = {
                                                                                                                            9: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#257B6E",
                                                                                                                                "fill-opacity": .4
                                                                                                                            },
                                                                                                                            10: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#7B6725",
                                                                                                                                "fill-opacity": .4
                                                                                                                            },
                                                                                                                            11: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#7B2E25",
                                                                                                                                "fill-opacity": .4
                                                                                                                            },
                                                                                                                            12: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#517B25",
                                                                                                                                "fill-opacity": .4
                                                                                                                            },
                                                                                                                            13: {
                                                                                                                                "line-color": "#FFFFFF",
                                                                                                                                "line-width": 4,
                                                                                                                                "fill-color": "#50458C",
                                                                                                                                "fill-opacity": .4
                                                                                                                            }
                                                                                                                        }, s = {
                                                                                                                            4864: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 12,
                                                                                                                                "line-opacity": .7
                                                                                                                            },
                                                                                                                            6859: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 4,
                                                                                                                                "line-opacity": .7
                                                                                                                            },
                                                                                                                            8098: {
                                                                                                                                "line-color": "#9ADB63",
                                                                                                                                "line-width": 4,
                                                                                                                                "line-opacity": .7
                                                                                                                            },
                                                                                                                            9031: {
                                                                                                                                "line-color": "#239FBD",
                                                                                                                                "line-width": 4,
                                                                                                                                "line-opacity": .7
                                                                                                                            }
                                                                                                                        }, l = {
                                                                                                                            3584: 264 === window.mapData.map.id ? {
                                                                                                                                "text-color": "#1E1819",
                                                                                                                                "text-halo-width": 0,
                                                                                                                                "text-halo-color": "#1E1819",
                                                                                                                                "text-letter-spacing": .1,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 16,
                                                                                                                                "text-size-16": 24
                                                                                                                            } : {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": 1,
                                                                                                                                "text-halo-color": "#56524D",
                                                                                                                                "text-letter-spacing": .1,
                                                                                                                                "text-size-10": 10,
                                                                                                                                "text-size-11": 18,
                                                                                                                                "text-size-16": 24
                                                                                                                            },
                                                                                                                            3672: {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-halo-color": "#0A0201",
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 9,
                                                                                                                                "text-size-16": 20
                                                                                                                            },
                                                                                                                            3689: {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-halo-color": "#0A0201",
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 9,
                                                                                                                                "text-size-16": 20
                                                                                                                            },
                                                                                                                            7840: {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-halo-color": "#0A0201",
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 20,
                                                                                                                                "text-size-11": 0,
                                                                                                                                "text-size-16": 0,
                                                                                                                                "text-font": "breath-of-zelda"
                                                                                                                            },
                                                                                                                            7839: {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-halo-color": "#0A0201",
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 16,
                                                                                                                                "text-size-16": 0,
                                                                                                                                "text-font": "breath-of-zelda"
                                                                                                                            },
                                                                                                                            6812: {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-halo-color": "#0A0201",
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 0,
                                                                                                                                "text-size-16": 24,
                                                                                                                                "text-font": "open-sans-semibold"
                                                                                                                            },
                                                                                                                            7847: {
                                                                                                                                "text-color": "#E4E0DD",
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-halo-color": "#0A0201",
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 0,
                                                                                                                                "text-size-16": 26,
                                                                                                                                "text-font": "open-sans-semibold"
                                                                                                                            },
                                                                                                                            8977: {
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 0,
                                                                                                                                "text-size-16": 24,
                                                                                                                                "text-font": "open-sans-semibold"
                                                                                                                            },
                                                                                                                            8988: {
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 0,
                                                                                                                                "text-size-11": 0,
                                                                                                                                "text-size-16": 26,
                                                                                                                                "text-font": "open-sans-semibold"
                                                                                                                            },
                                                                                                                            8989: {
                                                                                                                                "text-halo-width": .5,
                                                                                                                                "text-letter-spacing": 0,
                                                                                                                                "text-size-10": 14,
                                                                                                                                "text-size-11": 0,
                                                                                                                                "text-size-16": 0,
                                                                                                                                "text-font": "open-sans-semibold"
                                                                                                                            }
                                                                                                                        }, c = {
                                                                                                                            3732: function(e) {
                                                                                                                                if (e.description) {
                                                                                                                                    var t = e.description.split("**Collector:** ");
                                                                                                                                    if (t.length > 1) {
                                                                                                                                        var n = t[1].split("\n")[0].trim(),
                                                                                                                                            o = e.description.split("**Collects:** ");
                                                                                                                                        if (o.length > 1) return n + " [Collector]
                                                                                                                                        "+o[1].split("\
                                                                                                                                        n ")[0].trim()+"
                                                                                                                                        "}}return null}},u={788:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},797:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},798:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},800:{width:44,height:44,tooltipOffset:[16,0],popupOffset:[0,-20],anchor:"
                                                                                                                                        center "},804:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},806:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},807:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1010:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1011:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1012:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1013:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1014:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1015:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1016:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1017:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1018:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1197:{width:25,height:25,tooltipOffset:[12,0],popupOffset:[0,-12],anchor:"
                                                                                                                                        center "},1198:{width:25,height:25,tooltipOffset:[12,0],popupOffset:[0,-12],anchor:"
                                                                                                                                        center "},1199:{width:25,height:25,tooltipOffset:[12,0],popupOffset:[0,-12],anchor:"
                                                                                                                                        center "},1420:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1421:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1422:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1423:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1424:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},1590:{width:44,height:44,tooltipOffset:[20,0],popupOffset:[0,-20],anchor:"
                                                                                                                                        center "}},d={9630:{width:33,height:33,tooltipOffset:[14,-10],popupOffset:[0,-24],anchor:"
                                                                                                                                        bottom "},9631:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "},9632:{width:33,height:33,tooltipOffset:[14,0],popupOffset:[0,-15],anchor:"
                                                                                                                                        center "}},p={1:[{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / l_14_cave.png "),coordinates:[[95.70865559787967,68.52729582060361],[98.76487630100473,68.52729582060361],[98.76487630100473,66.35986138358615],[95.70865559787967,66.35986138358615]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / ann_coal.png "),coordinates:[[113.88079441081891,70.63534686482888],[116.51144870769394,70.63534686482888],[116.51144870769394,70.25382884982702],[113.88079441081891,70.25382884982702]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / ann_mine_int_main.png "),coordinates:[[108.88104858398435,70.85101299571456],[111.851806640625,70.85101299571456],[111.851806640625,69.50412708247543],[108.88104858398435,69.50412708247543]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / bea_01_int.png "),coordinates:[[95.89109157041935,71.52956450932612],[99.12397242979432,71.52956450932612],[99.12397242979432,70.44056318275513],[95.89109157041935,70.44056318275513]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / bgv_devilcave_int.png "),coordinates:[[-50.53436279296875,62.96400889880602],[-48.3837890625,62.96400889880602],[-48.3837890625,61.973474876835574],[-50.53436279296875,61.973474876835574]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / bra_mansion_int.png "),coordinates:[[58.87415893205002,8.673155048486413],[59.84688842423759,8.673155048486413],[59.84688842423759,7.925434318171292],[58.87415893205002,7.925434318171292]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / dis_grz_statue_int.png "),coordinates:[[53.41983889342782,75.17305748053528],[54.4824365496778,75.17305748053528],[54.4824365496778,74.98884120739638],[53.41983889342782,74.98884120739638]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / dis_stonehenge_int.png "),coordinates:[[99.1248879391203,73.33451239617452],[100.17047875943285,73.33451239617452],[100.17047875943285,73.0789335726444],[99.1248879391203,73.0789335726444]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / Exterior_Blackwater_Regular.png "),coordinates:[[4.560787379423118,24.924291893835097],[5.664517848173091,24.924291893835097],[5.664517848173091,23.533480574509007],[4.560787379423118,23.533480574509007]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / Exterior_StDenisBoat.png "),coordinates:[[100.67919516227857,16.33984676085247],[112.45065024040355,16.33984676085247],[112.45065024040355,13.242995605104078],[100.67919516227857,13.242995605104078]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / Exterior_ThievesLandingBoat.png "),coordinates:[[-10.262591783380913,-6.506579617332966],[-9.782049791193458,-6.506579617332966],[-9.782049791193458,-7.560511302129272],[-10.262591783380913,-7.560511302129272]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / Exterior_VanHornBoat.png "),coordinates:[[117.18811701147649,60.04234086394987],[118.29037531225777,60.04234086394987],[118.29037531225777,59.263423724902204],[117.18811701147649,59.263423724902204]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / gap_mine_int.png "),coordinates:[[-146.61076140074823,-28.97061502848316],[-143.92328581481075,-28.97061502848316],[-143.92328581481075,-31.795190399757832],[-146.61076140074823,-31.795190399757832]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / j_14_cave01_int.png "),coordinates:[[100.0622603931763,73.95269560823652],[100.91317347911377,73.95269560823652],[100.91317347911377,73.57193518485067],[100.0622603931763,73.57193518485067]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / l_07_cave_int.png "),coordinates:[[-14.889401405634544,63.116219575630964],[-14.487466591181374,63.116219575630964],[-14.487466591181374,62.808786360070314],[-14.889401405634544,62.808786360070314]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / m05_bearcave_int.png "),coordinates:[[-33.52470584512082,53.73501784537381],[-31.047772251370816,53.73501784537381],[-31.047772251370816,51.95109492787571],[-33.52470584512082,51.95109492787571]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / m05_mine_int.png "),coordinates:[[-39.89224811271208,53.694699401266895],[-38.29785724357146,53.694699401266895],[-38.29785724357146,53.13781754138063],[-39.89224811271208,53.13781754138063]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / mil_mine.png "),coordinates:[[-12.684804324949823,68.7692196920883],[-10.606905155027903,68.7692196920883],[-10.606905155027903,68.07436107102669],[-12.684804324949823,68.07436107102669]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / new_pie_tunnel_int.png "),coordinates:[[97.2689071019613,16.50738708935378],[98.60934899649249,16.50738708935378],[98.60934899649249,15.537241361170896],[97.2689071019613,15.537241361170896]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / val_hotel_int_main.png "),coordinates:[[20.076234444188913,63.51656320932451],[20.570399483251435,63.51656320932451],[20.570399483251435,63.25552245058611],[20.076234444188913,63.25552245058611]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / rdr2 / overlays / val_saloon_int.png "),coordinates:[[20.47048022019044,64.06357580685624],[20.91542650925294,64.06357580685624],[20.91542650925294,63.76284672760172],[20.47048022019044,63.76284672760172]]}],3:[{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / skyrim / skyrim / overlays / dawnguard.png "),coordinates:[[-.8207759746054535,1.0036576476813068],[-.7790622600058441,1.0036576476813068],[-.7790622600058441,.9794673163315637],[-.8207759746054535,.9794673163315637]]},{url:"
                                                                                                                                        ".concat(window.cdnUrl," / images / maps / skyrim / skyrim / overlays / volkihar_castle.png "),coordinates:[[-1.3514370596088838,1.3660443013819419],[-1.312255350319333,1.3660443013819419],[-1.312255350319333,1.3237843333566026],[-1.3514370596088838,1.3237843333566026]]}]};window.IMAGE_OVERLAYS=p;var f,g={bounds:[-1.4,0,0,1.4],fontName:"
                                                                                                                                        Open Sans Regular ",glyphsUrl:"
                                                                                                                                        ".concat(window.cdnUrl," / fonts / ").concat(window.game.slug," / pbf / {
                                                                                                                                            fontstack
                                                                                                                                        }
                                                                                                                                        /{range}.pbf"),regionTextStops:[[8,8],[12,24]],regionTitleTextMaxWidth:10,regionTitleTextLetterSpacing:0,locationLabelsEnabled:!1,locationPolygonsEnabled:!1,locationLinesEnabled:!1,circleLocationsEnabled:!1,subregionsEnabled:!1,showRegionTitles:!1,uppercaseRegionTitles:!1,showRegionPolygons:!1,showRegionPolygonBorders:!1,showPersistentRegionHighlights:!1,showSubregionPolygonBorders:!1,showSubregionPolygons:!1,regionHoverEnabled:!1,subregionHoverEnabled:!1,showCompass:window.config.compassEnabled,regionBorderPaint:{},regionFillPaint:{},regionHighlightFillPaint:{},regionTitlesPaint:{"text-color":"#FFFFFF","text-halo-width":1,"text-halo-color":"#000000"},regionTitlesLayout:{},subregionTitlesLayout:{},subregionTitlesPaint:{},subregionBorderPaint:{},subregionFillPaint:{},locationTitlesLayout:{"text-size":12},locationTitlesPaint:{"text-color":"#FFFFFF"},locationLinesConfig:{},locationLinesPaint:{"line-dasharray":[2]},accentColor:"#FFFFFF",geometryTolerance:.375,markerAnchor:"bottom",popupOffset:[0,-44],tooltipOffset:[14,-28],noteMarkersConfig:{imagePath:"images/games / rdr2 / pins ",pixelRatio:2,width:33,height:44},circleLocationsPaint:{"
                                                                                                                                        circle - radius ":6}},h=(window.game.id,(f=function(e){switch(window.game.id){case 1:case 2:return{bounds:[-180,-85,180,85]};case 3:return{bounds:[-1.4,.9,-.75,1.4]};case 4:return{bounds:[-180,-85,180,85]};case 5:return{bounds:5===window.mapData.map.id?[-77.07896026793986,38.857446513517246,-76.99300057089823,38.924731641504394]:[-74.17898484710355,40.514789964144164,-73.82937180347932,40.84593895423355],fontName:"
                                                                                                                                        borda - bold ",showRegionTitles:!0,showRegionPolygons:!0,showRegionPolygonBorders:!0,regionHoverEnabled:!0,regionBorderPaint:{"
                                                                                                                                        line - color ":{type:"
                                                                                                                                        identity ",property:"
                                                                                                                                        line - color "},"
                                                                                                                                        line - width ":2},regionTitlesPaint:{"
                                                                                                                                        text - color ":{type:"
                                                                                                                                        identity ",property:"
                                                                                                                                        text - color "},"
                                                                                                                                        text - halo - width ":0,"
                                                                                                                                        text - halo - color ":"
                                                                                                                                        #000000"},regionFillPaint:{"fill-color":{type:"identity",property:"line-color"},"fill-opacity":["case",["boolean",["feature-state","hover"],!1],.2,.1]},regionTextStops:[[13,12],[20,36]]};case 6:return{bounds:[-180,-90,180,90],fontName:"Open Sans Semibold",glyphsUrl:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",showRegionTitles:!0,showRegionPolygonBorders:!0,regionBorderPaint:{"line-color":"# FFF6DE ","
                                                                                                                                        line - width ":2},regionTitlesPaint:{"
                                                                                                                                        text - color ":"
                                                                                                                                        #FFF6DE ","
                                                                                                                                        text - halo - width ":1,"
                                                                                                                                        text - halo - color ":"
                                                                                                                                        #000000"},regionTextStops:[[1,14],[8,32]]};case 7:return{bounds:[-5,15,13,30],fontName:"Open Sans Semibold",glyphsUrl:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",showRegionTitles:!0,showRegionPolygons:!0,showRegionPolygonBorders:!0,regionHoverEnabled:!0,regionBorderPaint:{"line-color":"# 58 bca1 ","
                                                                                                                                        line - width ":2},regionFillPaint:{"
                                                                                                                                        fill - color ":"
                                                                                                                                        #58bca1","fill-opacity":["case",["boolean",["feature-state","hover"],!1],.1,0]},regionTitlesPaint:{"text-color":"# dad636 ","
                                                                                                                                        text - halo - width ":1.5,"
                                                                                                                                        text - halo - color ":"
                                                                                                                                        #000000"},regionTextStops:[[4,14],[11,24]]};case 8:return{bounds:357= == window.mapData.map.id ? [-1.4, 0, 0, 1.4] : [-90, 55.8, -67.5, 66.5]
                                                                                                                                    };
                                                                                                                                    case 9: return {
                                                                                                                                        bounds: window.mapData.map.id <= 17 ? [-88, 57, -69, 65] : [-168.75, 83.83, -167.35, 83.98]
                                                                                                                                    };
                                                                                                                                    case 10: return {
                                                                                                                                        bounds: [-175, 55, -80, 85],
                                                                                                                                        popupOffset: [0, -37],
                                                                                                                                        tooltipOffset: [14, -22]
                                                                                                                                    };
                                                                                                                                    case 11: return {
                                                                                                                                        bounds: 61 === window.mapData.map.id || 78 === window.mapData.map.id || 79 === window.mapData.map.id || 80 === window.mapData.map.id || 81 === window.mapData.map.id ? [-1.4, 0, 0, 1.4] : [-168.75, 83.83, -167.5, 83.98]
                                                                                                                                    };
                                                                                                                                    case 12: return {
                                                                                                                                        bounds: 118 === window.mapData.map.id ? [-1.4, 0, 0, 1.4] : [-168.75, 83.83, -167.5, 83.98]
                                                                                                                                    };
                                                                                                                                    case 13: return {
                                                                                                                                        bounds: [-168.75, 83.83, -167.5, 83.98]
                                                                                                                                    };
                                                                                                                                    case 14: return {
                                                                                                                                        bounds: [-168.75, 83.83, -167.5, 83.98],
                                                                                                                                        locationPolygonsEnabled: !0
                                                                                                                                    };
                                                                                                                                    case 15: return {
                                                                                                                                        bounds: [-168.75, 83.83, -167.5, 83.98]
                                                                                                                                    };
                                                                                                                                    case 20: return {
                                                                                                                                        fontName: "bender-bold",
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": ["interpolate", ["linear"],
                                                                                                                                                ["zoom"], 10, ["get", "text-size-10"], 11, ["get", "text-size-11"], 16, ["get", "text-size-16"]
                                                                                                                                            ],
                                                                                                                                            "text-max-width": 500,
                                                                                                                                            "text-anchor": "top"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "text-color"
                                                                                                                                            },
                                                                                                                                            "text-halo-width": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "text-halo-width"
                                                                                                                                            },
                                                                                                                                            "text-halo-color": "#000000",
                                                                                                                                            "text-halo-blur": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "text-halo-blur"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        circleLocationsPaint: {
                                                                                                                                            "circle-radius": 5
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 21: return {
                                                                                                                                        fontName: "roboto-medium",
                                                                                                                                        glyphsUrl: "https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": 139 === window.mapData.map.id ? 12 : 14,
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-anchor": "top"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1.5,
                                                                                                                                            "text-halo-color": "rgba(22,22,22,0.8)",
                                                                                                                                            "text-halo-blur": 0
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 22: return {
                                                                                                                                        fontName: "itc-serif-gothic-lt-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": 13,
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-max-width": 200
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 0
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 28: return {
                                                                                                                                        bounds: [-2.8, 0, 0, 2.8]
                                                                                                                                    };
                                                                                                                                    case 29: return {
                                                                                                                                        bounds: [-2.8, 0, 0, 2.8],
                                                                                                                                        fontName: "lintel-book",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 14],
                                                                                                                                            [12, 24]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "line-color"
                                                                                                                                            },
                                                                                                                                            "line-width": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "line-width"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "fill-color"
                                                                                                                                            },
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .2, .1]
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "text-color"
                                                                                                                                            },
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": {
                                                                                                                                                type: "identity",
                                                                                                                                                property: "text-halo-color"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 30: case 31: return {
                                                                                                                                        bounds: [-2.8, 0, 0, 2.8]
                                                                                                                                    };
                                                                                                                                    case 34: return {
                                                                                                                                        fontName: "century-gothic-regular",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 12],
                                                                                                                                                    [14, 16]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 40: return {
                                                                                                                                        fontName: "blender-pro-bold",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/cyberpunk-2077/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [10, 12],
                                                                                                                                            [12, 24]
                                                                                                                                        ],
                                                                                                                                        subregionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [10, 14],
                                                                                                                                            [16, 32]
                                                                                                                                        ],
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        uppercaseRegionTitles: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !1,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        showSubregionPolygonBorders: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#fcee0a",
                                                                                                                                            "line-width": 3
                                                                                                                                        },
                                                                                                                                        subregionBorderPaint: {
                                                                                                                                            "line-color": "#fcee0a",
                                                                                                                                            "line-width": 1
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {},
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#fcee0a",
                                                                                                                                            "text-halo-width": 2,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 0],
                                                                                                                                                    [10, 10],
                                                                                                                                                    [12, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 50: return {
                                                                                                                                        fontName: "amyris-extra-bold",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 14],
                                                                                                                                            [12, 22]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#E9DB7D",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 41: return {
                                                                                                                                        fontName: "aaux-pro-medium",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/assassins-creed-syndicate/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [12, 20]
                                                                                                                                        ],
                                                                                                                                        uppercaseRegionTitles: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 43: return {
                                                                                                                                        fontName: "cronos-pro",
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 6],
                                                                                                                                                    [10, 8],
                                                                                                                                                    [12, 15]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 44: return {
                                                                                                                                        fontName: "crimson-pro-regular",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "icon-image": "map-banner",
                                                                                                                                            "icon-offset": [0, 0],
                                                                                                                                            "icon-text-fit": "both",
                                                                                                                                            "icon-allow-overlap": !0,
                                                                                                                                            "icon-text-fit-padding": [5, 35, 20, 35],
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.5, 0],
                                                                                                                                                    [11, 11],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "icon-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 0],
                                                                                                                                                    [11, 1]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-letter-spacing": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 45: return {
                                                                                                                                        fontName: "futura-pt-condensed-medium",
                                                                                                                                        glyphsUrl: "".concat(window.cdnUrl, "/fonts/forza-horizon-5/pbf/{fontstack}/{range}.pbf"),
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 10],
                                                                                                                                                    [14, 24]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#d5cebd",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#C2DB71",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 14],
                                                                                                                                                    [9, 18],
                                                                                                                                                    [9.9, 18]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-opacity": 0,
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 48: return {
                                                                                                                                        fontName: "orpheus",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 8],
                                                                                                                                            [12, 24]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#2e2a24",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#908679"
                                                                                                                                        },
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [6, 10],
                                                                                                                                                    [12, 18]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#111111",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#8c8c8c",
                                                                                                                                            "text-halo-blur": 1
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 49: return {
                                                                                                                                        fontName: "avalon-plain",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [11, 0],
                                                                                                                                                    [12, 11],
                                                                                                                                                    [14, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 0,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 52: return {
                                                                                                                                        fontName: "neu-haas-grotesk-regular",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 12],
                                                                                                                                                    [15, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 57: return {
                                                                                                                                        fontName: "tt-mussels-medium",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-max-width": 50,
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [13, 0],
                                                                                                                                                    [14, 12],
                                                                                                                                                    [15, 14]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 60: return {
                                                                                                                                        fontName: "palatino-linotype-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 10],
                                                                                                                                                    [14, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 61: return {
                                                                                                                                        fontName: "slider",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 0],
                                                                                                                                                    [10, 10],
                                                                                                                                                    [11, 12],
                                                                                                                                                    [15, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 64: return {
                                                                                                                                        fontName: "kingthings-petrock",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "icon-image": "city-banner",
                                                                                                                                            "icon-offset": [0, 4],
                                                                                                                                            "icon-text-fit": "both",
                                                                                                                                            "icon-text-fit-padding": [20, 70, 18, 70],
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 0],
                                                                                                                                                    [10, 12],
                                                                                                                                                    [16, 20]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "icon-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#0B0A09"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 65: return {
                                                                                                                                        fontName: "third-rail-regular",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 12],
                                                                                                                                            [9, 14],
                                                                                                                                            [12, 28]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !1,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#ffcc00",
                                                                                                                                            "line-width": 2
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {},
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#c7dcf9",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 66: return {
                                                                                                                                        fontName: "dejavu-sans-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-max-width": 100,
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 16],
                                                                                                                                                    [16, 24]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#DC6F21",
                                                                                                                                            "text-halo-width": 2,
                                                                                                                                            "text-halo-color": "rgba(0,0,0,1)"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 67: return {
                                                                                                                                        fontName: "arial-bold",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [10, 12],
                                                                                                                                            [12, 24]
                                                                                                                                        ],
                                                                                                                                        regionTitleTextMaxWidth: 5,
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#E0872D",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        markerAnchor: "center",
                                                                                                                                        popupOffset: [0, -9],
                                                                                                                                        tooltipOffset: [8, 0],
                                                                                                                                        noteMarkersConfig: {
                                                                                                                                            imagePath: "images/games/old-school-runescape/pins",
                                                                                                                                            pixelRatio: 1,
                                                                                                                                            width: 15,
                                                                                                                                            height: 15
                                                                                                                                        },
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-font": ["match", ["get", "category_id"], 2892, ["literal", ["arial-bold"]],
                                                                                                                                                ["literal", ["arial-regular"]]
                                                                                                                                            ],
                                                                                                                                            "text-max-width": 5,
                                                                                                                                            "text-size": ["step", ["zoom"], 0, 12, ["match", ["get", "category_id"], 2892, 16, 0], 13, ["match", ["get", "category_id"], 2892, 17, 12], 15, ["match", ["get", "category_id"], 2892, 20, 16]]
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "rgba(0,0,0,1)"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 68: return {
                                                                                                                                        fontName: "really-2-medium-italic",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 13],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#363634",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#E1DDD9"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 69: return {
                                                                                                                                        fontName: "days-one",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [9, 0],
                                                                                                                                            [10, 10],
                                                                                                                                            [15, 24]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#ffcc00",
                                                                                                                                            "line-width": 2
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#ffcc00",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                                        },
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#88E6FF",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#c7dcf9",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 70: return {
                                                                                                                                        fontName: "days-one",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/subnautica/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [9, 0],
                                                                                                                                            [10, 10],
                                                                                                                                            [15, 24]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#ffcc00",
                                                                                                                                            "line-width": 2
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#ffcc00",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                                        },
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#88E6FF",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#c7dcf9",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 75: return {
                                                                                                                                        circleLocationsEnabled: !0
                                                                                                                                    };
                                                                                                                                    case 80: return {
                                                                                                                                        fontName: "caslon-antique-regular",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationPolygonsEnabled: !0,
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !1,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        regionTitleTextLetterSpacing: .05,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 16],
                                                                                                                                            [16, 36]
                                                                                                                                        ],
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#d9cd7b",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#E4E0DD",
                                                                                                                                            "line-width": 2
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#E4E0DD",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#56524D"
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-max-width": 100,
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-font": ["im-fell-pica-regular"]
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: 264 === window.mapData.map.id ? {
                                                                                                                                            "text-color": "#1E1819"
                                                                                                                                        } : {
                                                                                                                                            "text-color": "#E4E0DD",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#56524D"
                                                                                                                                        },
                                                                                                                                        geometryTolerance: 1
                                                                                                                                    };
                                                                                                                                    case 81: return {
                                                                                                                                        fontName: "cronos-pro-regular",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        locationLinesEnabled: !0,
                                                                                                                                        locationLinesConfig: {
                                                                                                                                            "line-color": "#E81218",
                                                                                                                                            "line-width": 5
                                                                                                                                        },
                                                                                                                                        locationLinesPaint: {
                                                                                                                                            "line-dasharray": [0, 2]
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 13],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#eeddcc",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#0b0c0a",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 13],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#eeddcc",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#0b0c0a",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        },
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 12],
                                                                                                                                            [12, 24],
                                                                                                                                            [13, 0]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#E2D964",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#0b0c0a"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 82: return {
                                                                                                                                        fontName: "akzidenz-grotesk-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 13],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 83: return {
                                                                                                                                        fontName: "fff-majestica-regular",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9999, 0],
                                                                                                                                                    [10, 8],
                                                                                                                                                    [12, 9],
                                                                                                                                                    [15, 16]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-max-width": 200
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#E9D4B9",
                                                                                                                                            "text-halo-width": 0
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 84: return {
                                                                                                                                        fontName: "helvetica-neue-bold",
                                                                                                                                        glyphsUrl: "".concat(window.cdnUrl, "/fonts/grand-theft-auto-3/pbf/{fontstack}/{range}.pbf"),
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [7, 0],
                                                                                                                                                    [8, 12],
                                                                                                                                                    [14, 20]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 85: return {
                                                                                                                                        fontName: "helvetica-neue-roman",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        uppercaseRegionTitles: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 13],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 0,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 16],
                                                                                                                                            [16, 36]
                                                                                                                                        ]
                                                                                                                                    };
                                                                                                                                    case 86: return {
                                                                                                                                        fontName: "courier-prime-bold",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 0],
                                                                                                                                                    [9, 8],
                                                                                                                                                    [15, 20]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 16],
                                                                                                                                            [16, 36]
                                                                                                                                        ]
                                                                                                                                    };
                                                                                                                                    case 87: return {
                                                                                                                                        fontName: "Metropolis Medium",
                                                                                                                                        glyphsUrl: "https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 0],
                                                                                                                                            [9, 10],
                                                                                                                                            [16, 24]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#FFF9CC",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 88: return {
                                                                                                                                        fontName: "rockwell-wgl",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 0],
                                                                                                                                                    [10, 8],
                                                                                                                                                    [15, 22]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 0,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 89: return {
                                                                                                                                        fontName: "kena",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 0],
                                                                                                                                                    [9, 12],
                                                                                                                                                    [14, 30]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#0A2C30"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 90: return {
                                                                                                                                        fontName: "helvetica-neue-bold",
                                                                                                                                        glyphsUrl: "".concat(window.cdnUrl, "/fonts/grand-theft-auto-3/pbf/{fontstack}/{range}.pbf"),
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [7, 0],
                                                                                                                                                    [8, 12],
                                                                                                                                                    [14, 20]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 91: return {
                                                                                                                                        fontName: "tt-commons-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        subregionHoverEnabled: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygons: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 10],
                                                                                                                                                    [14, 24]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#d5cebd",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 10],
                                                                                                                                                    [9, 16],
                                                                                                                                                    [9.9, 16],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#e9e1ce",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#54625e",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 14],
                                                                                                                                                    [14, 28]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#1c1c1c",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#e9e1ce",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#e9e1ce",
                                                                                                                                            "line-width": 3
                                                                                                                                        },
                                                                                                                                        subregionBorderPaint: {
                                                                                                                                            "line-color": "#e9e1ce",
                                                                                                                                            "line-width": 2,
                                                                                                                                            "line-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .7, 0]
                                                                                                                                        },
                                                                                                                                        subregionFillPaint: {
                                                                                                                                            "fill-color": "#e9e1ce",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .05, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 92: return {
                                                                                                                                        fontName: "pricedown",
                                                                                                                                        showRegionTitles: !1,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#F381FB",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 14],
                                                                                                                                                    [9, 18],
                                                                                                                                                    [9.9, 18],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 4,
                                                                                                                                            "text-halo-color": "#000000",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 16],
                                                                                                                                                    [14, 36]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 93: return {
                                                                                                                                        fontName: "futura-pt-condensed-medium",
                                                                                                                                        glyphsUrl: "".concat(window.cdnUrl, "/fonts/forza-horizon-5/pbf/{fontstack}/{range}.pbf"),
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#C2DB71",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 14],
                                                                                                                                                    [9, 18],
                                                                                                                                                    [9.9, 18]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-opacity": 0,
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 95: return {
                                                                                                                                        fontName: "futura-pt-condensed-medium",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 0],
                                                                                                                                                    [11, 10],
                                                                                                                                                    [14, 24]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#d5cebd",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 10],
                                                                                                                                                    [9, 16],
                                                                                                                                                    [9.9, 16],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#e9e1ce",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#54625e",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 101: return {
                                                                                                                                        fontName: "industry-demi",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 8],
                                                                                                                                                    [10, 12],
                                                                                                                                                    [13, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#242C2F"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 102: return {
                                                                                                                                        fontName: "industry-demi",
                                                                                                                                        glyphsUrl: "".concat(window.cdnUrl, "/fonts/halo-infinite/pbf/{fontstack}/{range}.pbf")
                                                                                                                                    };
                                                                                                                                    case 104: return {
                                                                                                                                        fontName: "berserker-regular",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        uppercaseRegionTitles: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [9, 8],
                                                                                                                                            [14, 36]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#242C2F"
                                                                                                                                        },
                                                                                                                                        locationPolygonsEnabled: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationLinesEnabled: !0,
                                                                                                                                        locationLinesConfig: {
                                                                                                                                            "line-color": "#FCFCFC",
                                                                                                                                            "line-width": 3,
                                                                                                                                            "line-opacity": .9
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 8],
                                                                                                                                                    [14, 36]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#242C2F"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 106: return {
                                                                                                                                        fontName: "Open Sans Semibold",
                                                                                                                                        glyphsUrl: "https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.99, 0],
                                                                                                                                                    [9, 8],
                                                                                                                                                    [10, 11],
                                                                                                                                                    [13, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#EEEDDF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#281302",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 107: return {
                                                                                                                                        fontName: "Open Sans Semibold",
                                                                                                                                        glyphsUrl: "https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [12, 16]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        uppercaseRegionTitles: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#EFECE8",
                                                                                                                                            "line-width": 2
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#EFECE8",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#232423"
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#EFECE8",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .1, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 109: return {
                                                                                                                                        fontName: "trajan",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-font": ["noto-sans-regular"],
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.99, 0],
                                                                                                                                                    [9, 8],
                                                                                                                                                    [10, 11],
                                                                                                                                                    [13, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#f4e3ab",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#081f25",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        },
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [14, 24]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#DFEEFE"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 111: return {
                                                                                                                                        fontName: "garamond-regular",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 6],
                                                                                                                                            [15, 32]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#DFEEFE",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#444033",
                                                                                                                                            "text-halo-blur": 1.5
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 112: return {
                                                                                                                                        fontName: "planer-demibold",
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.99, 0],
                                                                                                                                                    [9, 10],
                                                                                                                                                    [10, 16],
                                                                                                                                                    [13, 16]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#171F27"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 113: return {
                                                                                                                                        fontName: "modesto-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.99, 0],
                                                                                                                                                    [10, 8],
                                                                                                                                                    [15, 24]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#060122"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 116: return {
                                                                                                                                        fontName: "nocturne-serif-semibold",
                                                                                                                                        locationPolygonsEnabled: !0,
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 12],
                                                                                                                                            [15, 32]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#DFEEFE",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#d9cd7b",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 117: return {
                                                                                                                                        fontName: "exocet-immortal-medium",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.99999, 0],
                                                                                                                                                    [9, 14],
                                                                                                                                                    [13, 30]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-max-width": 500,
                                                                                                                                            "text-transform": "uppercase"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FEFDFB",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#635649"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 119: case 151: return {
                                                                                                                                        fontName: "open-sans-semibold",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/zelda-breath-of-the-wild/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        locationLinesEnabled: !0,
                                                                                                                                        showRegionTitles: !1,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#d9cd7b",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .5, 0]
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": ["interpolate", ["linear"],
                                                                                                                                                ["zoom"], 10, ["get", "text-size-10"], 11, ["get", "text-size-11"], 16, ["get", "text-size-16"]
                                                                                                                                            ],
                                                                                                                                            "text-anchor": "top",
                                                                                                                                            "text-max-width": 500,
                                                                                                                                            "text-font": ["open-sans-semibold"]
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#A3954F",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#42371F",
                                                                                                                                            "text-halo-blur": .3
                                                                                                                                        },
                                                                                                                                        circleLocationsPaint: {
                                                                                                                                            "circle-radius": 4
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.9, 0],
                                                                                                                                                    [9, 8],
                                                                                                                                                    [15, 28]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#AD9E54",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-blur": 1,
                                                                                                                                            "text-halo-color": "#403514",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.9, 0],
                                                                                                                                                    [9, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 121: return {
                                                                                                                                        fontName: "itc-avant-garde-gothic-std-demi",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 14],
                                                                                                                                            [12, 24]
                                                                                                                                        ],
                                                                                                                                        subregionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [10, 14],
                                                                                                                                            [16, 32]
                                                                                                                                        ],
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        showSubregionPolygons: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        subregionHoverEnabled: !0,
                                                                                                                                        showSubregionPolygonBorders: !0,
                                                                                                                                        uppercaseRegionTitles: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#9935AC",
                                                                                                                                            "line-width": 3,
                                                                                                                                            "line-opacity": .3
                                                                                                                                        },
                                                                                                                                        subregionBorderPaint: {
                                                                                                                                            "line-color": "#9935AC",
                                                                                                                                            "line-width": 2,
                                                                                                                                            "line-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], 1, .2]
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#ffffff",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .05, 0]
                                                                                                                                        },
                                                                                                                                        subregionFillPaint: {
                                                                                                                                            "fill-color": "#ffffff",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .05, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 2,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 122: return {
                                                                                                                                        fontName: "itc-avant-garde-gothic-std-demi",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/saints-row-4/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 10],
                                                                                                                                            [12, 20]
                                                                                                                                        ],
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#7C399C",
                                                                                                                                            "line-width": 2
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#7C399C",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .25, 0]
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#DAE2E7",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 124: return {
                                                                                                                                        fontName: "josefin-sans-semi-bold",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        regionTextStops: [
                                                                                                                                            [8, 8],
                                                                                                                                            [14, 36]
                                                                                                                                        ],
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#E1D9FF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#23283a",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        },
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#FFE699",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .3, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 126: return {
                                                                                                                                        fontName: "itc-avant-garde-gothic-std-demi",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/saints-row-4/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#7D17AF",
                                                                                                                                            "line-width": 3,
                                                                                                                                            "line-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .7, .3]
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#7D17AF",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .3, 0]
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 10],
                                                                                                                                                    [14, 20]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff"
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 10],
                                                                                                                                                    [10.9, 10],
                                                                                                                                                    [11, 0]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 14],
                                                                                                                                                    [14, 28]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 133: return {
                                                                                                                                        fontName: "conduit-itc-regular",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 14],
                                                                                                                                                    [13, 24]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-blur": 1,
                                                                                                                                            "text-halo-color": "#333333"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 134: return {
                                                                                                                                        fontName: "Open Sans Semibold",
                                                                                                                                        glyphsUrl: "https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        subregionHoverEnabled: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygons: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 8],
                                                                                                                                                    [11, 26],
                                                                                                                                                    [12, 0]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase"
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#EEEDDF",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#281302",
                                                                                                                                            "text-halo-blur": .5,
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [11, 1],
                                                                                                                                                    [12, 0]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10.99, 0],
                                                                                                                                                    [11, 16],
                                                                                                                                                    [15, 32]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-letter-spacing": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000",
                                                                                                                                            "text-halo-blur": .5,
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [10.99, 0],
                                                                                                                                                    [11, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#A9C7C7",
                                                                                                                                            "line-width": 3
                                                                                                                                        },
                                                                                                                                        subregionBorderPaint: {
                                                                                                                                            "line-color": "#A9C7C7",
                                                                                                                                            "line-width": 1
                                                                                                                                        },
                                                                                                                                        subregionFillPaint: {
                                                                                                                                            "fill-color": "#A9C7C7",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .3, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 139: return {
                                                                                                                                        locationLinesEnabled: !0
                                                                                                                                    };
                                                                                                                                    case 140: return {
                                                                                                                                        fontName: "aaux-pro-medium",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/assassins-creed-syndicate/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        subregionHoverEnabled: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygons: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 10],
                                                                                                                                                    [9, 16],
                                                                                                                                                    [9.9, 16],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#e6e6e6",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#1A3046",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 1],
                                                                                                                                                    [10, 0]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 14],
                                                                                                                                                    [14, 28]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#1A3046",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#e6d6d6",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#e9e1ce",
                                                                                                                                            "line-width": 3
                                                                                                                                        },
                                                                                                                                        subregionBorderPaint: {
                                                                                                                                            "line-color": "#e9e1ce",
                                                                                                                                            "line-width": 2,
                                                                                                                                            "line-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .7, 0]
                                                                                                                                        },
                                                                                                                                        subregionFillPaint: {
                                                                                                                                            "fill-color": "#e9e1ce",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .05, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 142: return {
                                                                                                                                        fontName: "exocet-immortal-medium",
                                                                                                                                        glyphsUrl: "".concat(window.cdnUrl, "/fonts/diablo-immortal/pbf/{fontstack}/{range}.pbf"),
                                                                                                                                        circleLocationsEnabled: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.99999, 0],
                                                                                                                                                    [9, 12],
                                                                                                                                                    [13, 24]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-max-width": 500,
                                                                                                                                            "text-transform": "uppercase"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FEFDFB",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-blur": .5,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 143: return {
                                                                                                                                        fontName: "columna-com-solid",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 8],
                                                                                                                                                    [14, 24]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-max-width": 300
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#000000",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        },
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9999, 0],
                                                                                                                                                    [10, 10],
                                                                                                                                                    [15, 17]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#0d181b",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-blur": .5,
                                                                                                                                            "text-halo-color": "#ffffff"
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 146: return {
                                                                                                                                        fontName: "old-fenris-regular",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationPolygonsEnabled: !0,
                                                                                                                                        subregionsEnabled: !0,
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionHoverEnabled: !0,
                                                                                                                                        subregionHoverEnabled: !0,
                                                                                                                                        showRegionPolygons: !0,
                                                                                                                                        showRegionPolygonBorders: !0,
                                                                                                                                        showPersistentRegionHighlights: !0,
                                                                                                                                        showSubregionPolygonBorders: !0,
                                                                                                                                        showSubregionPolygons: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.9, 0],
                                                                                                                                                    [9, 8],
                                                                                                                                                    [14, 26]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-max-width": 300
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#1C1712",
                                                                                                                                            "text-halo-width": .4,
                                                                                                                                            "text-halo-color": "#CCB996",
                                                                                                                                            "text-halo-blur": .4,
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.9, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 8],
                                                                                                                                                    [14, 22]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-max-width": 300
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#1C1712",
                                                                                                                                            "text-halo-width": .5,
                                                                                                                                            "text-halo-color": "#CCB996",
                                                                                                                                            "text-halo-blur": .5
                                                                                                                                        },
                                                                                                                                        subregionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 12],
                                                                                                                                                    [14, 20]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-letter-spacing": 0,
                                                                                                                                            "text-max-width": 250
                                                                                                                                        },
                                                                                                                                        subregionTitlesPaint: {
                                                                                                                                            "text-color": "#e9e1ce",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#1c1c1c",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.9, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        regionBorderPaint: {
                                                                                                                                            "line-color": "#988F7B",
                                                                                                                                            "line-width": 3
                                                                                                                                        },
                                                                                                                                        subregionBorderPaint: {
                                                                                                                                            "line-color": "#988F7B",
                                                                                                                                            "line-width": 2,
                                                                                                                                            "line-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], 1, .1]
                                                                                                                                        },
                                                                                                                                        subregionFillPaint: {
                                                                                                                                            "fill-color": "#988F7B",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "hover"], !1], .1, 0]
                                                                                                                                        },
                                                                                                                                        regionFillPaint: {
                                                                                                                                            "fill-color": "#000000",
                                                                                                                                            "fill-opacity": 0
                                                                                                                                        },
                                                                                                                                        regionHighlightFillPaint: {
                                                                                                                                            "fill-color": "#988F7B",
                                                                                                                                            "fill-opacity": ["case", ["boolean", ["feature-state", "highlight"], !1], .25, 0]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 150: return {
                                                                                                                                        fontName: "itc-serif-gothic-lt-bold",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/star-wars-jedi-fallen-order/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": 13,
                                                                                                                                            "text-transform": "uppercase",
                                                                                                                                            "text-max-width": 200
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 0
                                                                                                                                        },
                                                                                                                                        locationLinesEnabled: !0,
                                                                                                                                        locationLinesConfig: {
                                                                                                                                            "line-color": "#5ABECB",
                                                                                                                                            "line-width": 5,
                                                                                                                                            "line-opacity": .7
                                                                                                                                        },
                                                                                                                                        locationLinesPaint: {
                                                                                                                                            "line-dasharray": [0, 2.6]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 154: return {
                                                                                                                                        fontName: "jenson-pro-italic",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 6],
                                                                                                                                                    [11, 6],
                                                                                                                                                    [16, 22]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 300
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": .4,
                                                                                                                                            "text-halo-color": "#CCB996",
                                                                                                                                            "text-halo-blur": 0,
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [11, 0],
                                                                                                                                                    [12, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 157: return {
                                                                                                                                        fontName: "quicksand-bold",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [9, 8],
                                                                                                                                                    [14, 22]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-max-width": .1
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#FFFFFF",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#574F43",
                                                                                                                                            "text-halo-blur": 1,
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.9, 0],
                                                                                                                                                    [9, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 158: return {
                                                                                                                                        fontName: "courier-prime-regular",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/phasmophobia/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        showRegionTitles: !0,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 8],
                                                                                                                                                    [15, 40]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-max-width": 300
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#141414",
                                                                                                                                            "text-halo-width": 0,
                                                                                                                                            "text-halo-color": "#000000"
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 8],
                                                                                                                                                    [14, 22]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-anchor": "top"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#141414",
                                                                                                                                            "text-halo-width": .25,
                                                                                                                                            "text-halo-color": "#D8CEAD",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.99, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 159: return {
                                                                                                                                        fontName: "nb-architekt-regular",
                                                                                                                                        showRegionTitles: 551 !== window.mapData.map.id,
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        regionTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 8],
                                                                                                                                                    [14, 28]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-letter-spacing": .1,
                                                                                                                                            "text-max-width": 300
                                                                                                                                        },
                                                                                                                                        regionTitlesPaint: {
                                                                                                                                            "text-color": "#FEFEFE",
                                                                                                                                            "text-halo-width": 1,
                                                                                                                                            "text-halo-color": "#0A172B"
                                                                                                                                        },
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [8, 8],
                                                                                                                                                    [14, 22]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-anchor": "top",
                                                                                                                                            "text-transform": "uppercase"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#ffffff",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [8.99, 0],
                                                                                                                                                    [9, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 160: return {
                                                                                                                                        fontName: "courier-prime-regular",
                                                                                                                                        glyphsUrl: window.cdnUrl + "/fonts/phasmophobia/pbf/{fontstack}/{range}.pbf",
                                                                                                                                        locationLabelsEnabled: !0,
                                                                                                                                        locationTitlesLayout: {
                                                                                                                                            "text-size": {
                                                                                                                                                stops: [
                                                                                                                                                    [10, 10],
                                                                                                                                                    [14, 25]
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "text-anchor": "top"
                                                                                                                                        },
                                                                                                                                        locationTitlesPaint: {
                                                                                                                                            "text-color": "#181614",
                                                                                                                                            "text-opacity": {
                                                                                                                                                stops: [
                                                                                                                                                    [9.99, 0],
                                                                                                                                                    [10, 1]
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    case 162: return {
                                                                                                                                        locationLinesEnabled: !0,
                                                                                                                                        locationLinesConfig: {
                                                                                                                                            "line-color": "#00C7D0",
                                                                                                                                            "line-width": 4,
                                                                                                                                            "line-opacity": .7
                                                                                                                                        },
                                                                                                                                        locationLinesPaint: {
                                                                                                                                            "line-dasharray": [1]
                                                                                                                                        }
                                                                                                                                    };
                                                                                                                                    default: return window.config.mapStyle
                                                                                                                                }
                                                                                                                            }()) ? Object.assign(g, f) : g)
                                                                                                                }, 78299: (e, t, n) => {
                                                                                                                    "use strict";
                                                                                                                    n.r(t), n.d(t, {
                                                                                                                        CIRCLE_LAYER_AS_LOCATIONS: () => Ie,
                                                                                                                        SMALL_ICON_SIZE: () => Be,
                                                                                                                        DEFAULT_ICON_SIZE: () => ze,
                                                                                                                        default: () => Ze
                                                                                                                    });
                                                                                                                    var o = n(67294),
                                                                                                                        r = n(73935),
                                                                                                                        i = n(41825),
                                                                                                                        a = n(86763),
                                                                                                                        s = n(95575),
                                                                                                                        l = n(30148),
                                                                                                                        c = n(38650),
                                                                                                                        u = n(97118),
                                                                                                                        d = n(94879),
                                                                                                                        p = n(818),
                                                                                                                        f = n(5457),
                                                                                                                        g = n(1720),
                                                                                                                        h = n(71541),
                                                                                                                        m = n(19486),
                                                                                                                        y = n(71652),
                                                                                                                        v = n(50111),
                                                                                                                        w = n(67883),
                                                                                                                        b = n(52886),
                                                                                                                        E = n(60156),
                                                                                                                        k = n(23056),
                                                                                                                        x = n(6871),
                                                                                                                        C = n(8806),
                                                                                                                        S = n(30294),
                                                                                                                        _ = n(10916),
                                                                                                                        O = n(10953),
                                                                                                                        P = n(23035),
                                                                                                                        L = n(5673),
                                                                                                                        T = n(73904),
                                                                                                                        M = n(70854),
                                                                                                                        I = n(42604),
                                                                                                                        N = n(96590),
                                                                                                                        R = n(67723),
                                                                                                                        F = n(63049);

                                                                                                                    function D(e) {
                                                                                                                        return (D = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                                                                                                            return typeof e
                                                                                                                        } : function(e) {
                                                                                                                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                                                                                                        })(e)
                                                                                                                    }

                                                                                                                    function A(e, t, n) {
                                                                                                                        return (A = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e, t, n) {
                                                                                                                            var o = function(e, t) {
                                                                                                                                for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = Z(e)););
                                                                                                                                return e
                                                                                                                            }(e, t);
                                                                                                                            if (o) {
                                                                                                                                var r = Object.getOwnPropertyDescriptor(o, t);
                                                                                                                                return r.get ? r.get.call(n) : r.value
                                                                                                                            }
                                                                                                                        })(e, t, n || e)
                                                                                                                    }

                                                                                                                    function j(e, t) {
                                                                                                                        return (j = Object.setPrototypeOf || function(e, t) {
                                                                                                                            return e.__proto__ = t, e
                                                                                                                        })(e, t)
                                                                                                                    }

                                                                                                                    function B(e) {
                                                                                                                        var t = function() {
                                                                                                                            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                                                                                                                            if (Reflect.construct.sham) return !1;
                                                                                                                            if ("function" == typeof Proxy) return !0;
                                                                                                                            try {
                                                                                                                                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                                                                                                                            } catch (e) {
                                                                                                                                return !1
                                                                                                                            }
                                                                                                                        }();
                                                                                                                        return function() {
                                                                                                                            var n, o = Z(e);
                                                                                                                            if (t) {
                                                                                                                                var r = Z(this).constructor;
                                                                                                                                n = Reflect.construct(o, arguments, r)
                                                                                                                            } else n = o.apply(this, arguments);
                                                                                                                            return z(this, n)
                                                                                                                        }
                                                                                                                    }

                                                                                                                    function z(e, t) {
                                                                                                                        return !t || "object" !== D(t) && "function" != typeof t ? function(e) {
                                                                                                                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                                                                                                            return e
                                                                                                                        }(e) : t
                                                                                                                    }

                                                                                                                    function Z(e) {
                                                                                                                        return (Z = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                                                                                                                            return e.__proto__ || Object.getPrototypeOf(e)
                                                                                                                        })(e)
                                                                                                                    }

                                                                                                                    function U(e, t) {
                                                                                                                        return function(e) {
                                                                                                                            if (Array.isArray(e)) return e
                                                                                                                        }(e) || function(e, t) {
                                                                                                                            var n = e && ("undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"]);
                                                                                                                            if (null == n) return;
                                                                                                                            var o, r, i = [],
                                                                                                                                a = !0,
                                                                                                                                s = !1;
                                                                                                                            try {
                                                                                                                                for (n = n.call(e); !(a = (o = n.next()).done) && (i.push(o.value), !t || i.length !== t); a = !0);
                                                                                                                            } catch (e) {
                                                                                                                                s = !0, r = e
                                                                                                                            } finally {
                                                                                                                                try {
                                                                                                                                    a || null == n.return || n.return()
                                                                                                                                } finally {
                                                                                                                                    if (s) throw r
                                                                                                                                }
                                                                                                                            }
                                                                                                                            return i
                                                                                                                        }(e, t) || V(e, t) || function() {
                                                                                                                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                                                                                                        }()
                                                                                                                    }

                                                                                                                    function W(e, t) {
                                                                                                                        var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                                                                                                        if (!n) {
                                                                                                                            if (Array.isArray(e) || (n = V(e)) || t && e && "number" == typeof e.length) {
                                                                                                                                n && (e = n);
                                                                                                                                var o = 0,
                                                                                                                                    r = function() {};
                                                                                                                                return {
                                                                                                                                    s: r,
                                                                                                                                    n: function() {
                                                                                                                                        return o >= e.length ? {
                                                                                                                                            done: !0
                                                                                                                                        } : {
                                                                                                                                            done: !1,
                                                                                                                                            value: e[o++]
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    e: function(e) {
                                                                                                                                        throw e
                                                                                                                                    },
                                                                                                                                    f: r
                                                                                                                                }
                                                                                                                            }
                                                                                                                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                                                                                                        }
                                                                                                                        var i, a = !0,
                                                                                                                            s = !1;
                                                                                                                        return {
                                                                                                                            s: function() {
                                                                                                                                n = n.call(e)
                                                                                                                            },
                                                                                                                            n: function() {
                                                                                                                                var e = n.next();
                                                                                                                                return a = e.done, e
                                                                                                                            },
                                                                                                                            e: function(e) {
                                                                                                                                s = !0, i = e
                                                                                                                            },
                                                                                                                            f: function() {
                                                                                                                                try {
                                                                                                                                    a || null == n.return || n.return()
                                                                                                                                } finally {
                                                                                                                                    if (s) throw i
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }

                                                                                                                    function H(e) {
                                                                                                                        return function(e) {
                                                                                                                            if (Array.isArray(e)) return q(e)
                                                                                                                        }(e) || function(e) {
                                                                                                                            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                                                                                                                        }(e) || V(e) || function() {
                                                                                                                            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                                                                                                        }()
                                                                                                                    }

                                                                                                                    function V(e, t) {
                                                                                                                        if (e) {
                                                                                                                            if ("string" == typeof e) return q(e, t);
                                                                                                                            var n = Object.prototype.toString.call(e).slice(8, -1);
                                                                                                                            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? q(e, t) : void 0
                                                                                                                        }
                                                                                                                    }

                                                                                                                    function q(e, t) {
                                                                                                                        (null == t || t > e.length) && (t = e.length);
                                                                                                                        for (var n = 0, o = new Array(t); n = 768, Ae = ["668f56", "205098", "dc7146", "ffcd00", "8bb9bf", "b66f8d"], je = window.devicePixelRatio > 1 ? 2 : 1, Be = .6, ze = 1;
                                                                                                                            const Ze = function(e) {
                                                                                                                                ! function(e, t) {
                                                                                                                                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                                                                                                                                    e.prototype = Object.create(t && t.prototype, {
                                                                                                                                        constructor: {
                                                                                                                                            value: e,
                                                                                                                                            writable: !0,
                                                                                                                                            configurable: !0
                                                                                                                                        }
                                                                                                                                    }), t && j(e, t)
                                                                                                                                }(n, e);
                                                                                                                                var t = B(n);

                                                                                                                                function n(e, o) {
                                                                                                                                    var r;
                                                                                                                                    return G(this, n), (r = t.call(this, e)).suggestions = o, r.suggestionsById = {}, r
                                                                                                                                }
                                                                                                                                return Y(n, [{
                                                                                                                                        key: "initMap",
                                                                                                                                        value: function(e) {
                                                                                                                                            var t = this;
                                                                                                                                            A(Z(n.prototype), "initMap", this).call(this, e), this.map.on("load", (function() {
                                                                                                                                                t.map.addSource("suggestions-data", {
                                                                                                                                                    type: "geojson",
                                                                                                                                                    data: {
                                                                                                                                                        type: "FeatureCollection",
                                                                                                                                                        features: t.suggestions.map((function(e) {
                                                                                                                                                            return t.suggestionsById[e.id] = e, {
                                                                                                                                                                type: "Feature",
                                                                                                                                                                properties: {
                                                                                                                                                                    id: e.id,
                                                                                                                                                                    category_id: e.category_id,
                                                                                                                                                                    title: e.title,
                                                                                                                                                                    icon: e.category.icon
                                                                                                                                                                },
                                                                                                                                                                geometry: {
                                                                                                                                                                    type: "Point",
                                                                                                                                                                    coordinates: [e.longitude, e.latitude]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }))
                                                                                                                                                    }
                                                                                                                                                }), t.map.addLayer({
                                                                                                                                                    id: ie,
                                                                                                                                                    type: "symbol",
                                                                                                                                                    source: "suggestions-data",
                                                                                                                                                    layout: {
                                                                                                                                                        "icon-allow-overlap": !0,
                                                                                                                                                        "icon-image": "{icon}",
                                                                                                                                                        "icon-size": t.iconSize,
                                                                                                                                                        "icon-anchor": "bottom",
                                                                                                                                                        visibility: "visible"
                                                                                                                                                    },
                                                                                                                                                    filter: !1
                                                                                                                                                }), t.map.on("click", ie, (function(e) {
                                                                                                                                                    var n = e.features[0].properties.id,
                                                                                                                                                        o = t.suggestionsById[n];
                                                                                                                                                    t.openInfoWindowForSuggestion(o)
                                                                                                                                                }))
                                                                                                                                            }))
                                                                                                                                        }
                                                                                                                                    }, {
                                                                                                                                        key: "addSuggestionMarker",
                                                                                                                                        value: function(e) {
                                                                                                                                            this.suggestionsById[e.id] = e;
                                                                                                                                            var t = this.map.getSource("suggestions-data")._data;
                                                                                                                                            if (t.features.push({
                                                                                                                                                    type: "Feature",
                                                                                                                                                    properties: {
                                                                                                                                                        id: e.id,
                                                                                                                                                        category_id: e.category_id,
                                                                                                                                                        title: e.title,
                                                                                                                                                        icon: e.category.icon
                                                                                                                                                    },
                                                                                                                                                    geometry: {
                                                                                                                                                        type: "Point",
                                                                                                                                                        coordinates: [e.longitude, e.latitude]
                                                                                                                                                    }
                                                                                                                                                }), this.map.getSource("suggestions-data").setData(t), document.getElementById("settings-wrapper").getElementsByClassName("button-toggle")[0].classList.contains("disabled")) {
                                                                                                                                                var n = this.map.getFilter(ie);
                                                                                                                                                n ? this.map.setFilter(ie, ["any", n, ["in", ["get", "id"], e.id + ""]], {
                                                                                                                                                    validate: !1
                                                                                                                                                }) : this.map.setFilter(ie, ["in", ["get", "id"], e.id + ""], {
                                                                                                                                                    validate: !1
                                                                                                                                                })
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }, {
                                                                                                                                        key: "removeSuggestionMarker",
                                                                                                                                        value: function(e) {
                                                                                                                                            delete this.suggestions[e];
                                                                                                                                            for (var t = this.map.getSource("suggestions-data")._data, n = t.features, o = 0; o0 && void 0 !== arguments[0] ? arguments[0] : null; n.addedNoteMarker && (n.addedNoteMarker.remove(), n.addedNoteMarker = null), n.addedNoteMarker = new mapboxgl.Marker({
                                                                                                                                                    draggable: !0
                                                                                                                                                }).setLngLat(e || n.map.getCenter()).addTo(n.map), n.addedNoteMarker.getElement().classList.add("animate-in"), n.addedNoteMarker.getElement().addEventListener("click", (function(e) {
                                                                                                                                                    e.preventDefault(), e.stopPropagation();
                                                                                                                                                    var t = n.addedNoteMarker.getLngLat();
                                                                                                                                                    store.dispatch(c.cq.selectNote({
                                                                                                                                                        lat: t.lat,
                                                                                                                                                        lng: t.lng
                                                                                                                                                    })), store.dispatch(c.cq.showEditNoteDialog(!0))
                                                                                                                                                }))
                                                                                                                                            }, this.addPointMarker = function() {
                                                                                                                                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                                                                                                                                                new mapboxgl.Marker({}).setLngLat(e || n.map.getCenter()).addTo(n.map)
                                                                                                                                            }, this.markLocationAsFound = function(e, t) {
                                                                                                                                                var o = window.user,
                                                                                                                                                    r = store.getState(),
                                                                                                                                                    i = r.map.locationsById[e];
                                                                                                                                                if (o && i) {
                                                                                                                                                    var a = void 0 === t ? c.wl.isLocationFound(r, i.id) : !t;
                                                                                                                                                    c.wl.canMarkLocation(r, i.id) ? n.foundLocationService.markLocationFound(i, !a) : confirm("Free users can mark up to ".concat(window.mapData.maxMarkedLocations, " locations. Upgrade to pro for unlimited tracking!")) && window.open(window.baseUrl + "/upgrade", "_blank")
                                                                                                                                                }
                                                                                                                                            }, this.panToLocations = function(e) {
                                                                                                                                                window.isMobile && $(".navbar-collapse.show").collapse("toggle"), n.alsoSetMarkersVisibleById(e, !0);
                                                                                                                                                var t = store.getState().map.locationsById,
                                                                                                                                                    o = new mapboxgl.LngLatBounds;
                                                                                                                                                e.forEach((function(e) {
                                                                                                                                                    var n = t[e];
                                                                                                                                                    n && o.extend([n.longitude, n.latitude])
                                                                                                                                                })), n.map.fitBounds(o, {
                                                                                                                                                    padding: 10
                                                                                                                                                })
                                                                                                                                            }, this.panToLocation = function(e) {
                                                                                                                                                window.isMobile && $(".navbar-collapse.show").collapse("toggle");
                                                                                                                                                var t = store.getState().map.locationsById[e];
                                                                                                                                                t && (n.map.getFilter(X) && n.alsoSetMarkersVisibleById([e], !0), n.map.panTo([t.longitude, t.latitude]))
                                                                                                                                            }, this.panToNote = function(e) {
                                                                                                                                                window.isMobile && $(".navbar-collapse.show").collapse("toggle");
                                                                                                                                                var t = n.notesById[e];
                                                                                                                                                t && n.map.panTo([t.longitude, t.latitude])
                                                                                                                                            }, this.addNewSuggestion = function(e) {
                                                                                                                                                n.deleteSuggestionMarker(), n.newSuggestionMarker = new mapboxgl.Marker({
                                                                                                                                                    draggable: !0
                                                                                                                                                }).setLngLat(e).addTo(n.map), n.newSuggestionMarker.getElement().classList.add("animate-in"), n.newSuggestionMarker.getElement().addEventListener("click", (function() {
                                                                                                                                                    var e = n.newSuggestionMarker.getLngLat();
                                                                                                                                                    store.dispatch(c.cq.showEditSuggestionDialog({
                                                                                                                                                        lat: e.lat,
                                                                                                                                                        lng: e.lng
                                                                                                                                                    }))
                                                                                                                                                }))
                                                                                                                                            }, this.autoPanPopup = function() {
                                                                                                                                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                                                                                                                                                n.map.isMoving() ? n.map.once("moveend", n.autoPanPopup.bind(0)) : setTimeout((function() {
                                                                                                                                                        if (n.popup) {
                                                                                                                                                            var e = n.map.project(n.popup._lngLat),
                                                                                                                                                                t = n.popup._container.clientHeight + 75,
                                                                                                                                                                o = n.popup._container.clientWidth + 50,
                                                                                                                                                                r = 0,
                                                                                                                                                                i = 0,
                                                                                                                                                                a = o / 2,
                                                                                                                                                                s = e.y - t,
                                                                                                                                                                l = e.x - a;
                                                                                                                                                            s < 0 ? (i = s, window.isMobile && (i -= 50)) : document.body.clientHeight - e.y < 50 && (i = e.y - document.body.clientHeight + 50);
                                                                                                                                                            var c = n.map.getCanvas().width / window.devicePixelRatio;
                                                                                                                                                            l < 0 ? r = l : c - e.x0 && Z.features && setTimeout((function() {
                                                                                                                                                                return window.mapManager.panToShape(Z.features[0].geometry, window.isMobile ? 50 : {
                                                                                                                                                                    left: 300,
                                                                                                                                                                    right: -100,
                                                                                                                                                                    top: -100,
                                                                                                                                                                    bottom: -100
                                                                                                                                                                })
                                                                                                                                                            }), 0)
                                                                                                                                                        } else if (D) {
                                                                                                                                                            j = new mapboxgl.LngLatBounds;
                                                                                                                                                            for (var U = D.length - 1; U >= 0; U--) {
                                                                                                                                                                var V = this.store.getState().map.locationsById[D[U]];
                                                                                                                                                                V && (j.extend([V.longitude, V.latitude]), B = 1 === D.length)
                                                                                                                                                            }
                                                                                                                                                        } else m.Z.highlightInitialPoint && (j = new mapboxgl.LngLatBounds).extend([window.preferredX || 0, window.preferredY || 0]);
                                                                                                                                                        var q = this.store.getState().routes.routes.map((function(e) {
                                                                                                                                                            return {
                                                                                                                                                                id: e.id,
                                                                                                                                                                type: "Feature",
                                                                                                                                                                geometry: {
                                                                                                                                                                    type: "LineString",
                                                                                                                                                                    coordinates: e.waypoints.map((function(e) {
                                                                                                                                                                        return [e.x, e.y]
                                                                                                                                                                    }))
                                                                                                                                                                },
                                                                                                                                                                properties: {
                                                                                                                                                                    id: e.id,
                                                                                                                                                                    "line-color": e.color,
                                                                                                                                                                    "line-width": 4
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }));
                                                                                                                                                        if (m.Z.routeWaypoints) {
                                                                                                                                                            var G = this.getSharedRouteData(m.Z.routeWaypoints),
                                                                                                                                                                K = G.bounds,
                                                                                                                                                                Y = G.route,
                                                                                                                                                                ie = G.routesData;
                                                                                                                                                            j = K, q.splice(0, 0, ie[0]), r["routes-data"] = {
                                                                                                                                                                type: "geojson",
                                                                                                                                                                data: {
                                                                                                                                                                    type: "FeatureCollection",
                                                                                                                                                                    features: q
                                                                                                                                                                },
                                                                                                                                                                tolerance: b.th.geometryTolerance
                                                                                                                                                            }, store.getState().routes.routesById["shared-route"] = Y, store.getState().routes.sharedRoute = Y, m.Z.showRoutePopup && (C.Z.update(Y), store.getState().routes.selectedRoute = Y)
                                                                                                                                                        } else r["routes-data"] = {
                                                                                                                                                            type: "geojson",
                                                                                                                                                            data: {
                                                                                                                                                                type: "FeatureCollection",
                                                                                                                                                                features: q
                                                                                                                                                            },
                                                                                                                                                            tolerance: b.th.geometryTolerance
                                                                                                                                                        };
                                                                                                                                                        var me = window.mapData.sharedNotes,
                                                                                                                                                            we = Object.keys(me),
                                                                                                                                                            be = we && we.length > 0 ? we : null,
                                                                                                                                                            _e = be && 1 === be.length ? be[0] : null,
                                                                                                                                                            Be = !!_e;
                                                                                                                                                        if (_e) {
                                                                                                                                                            j || (j = new mapboxgl.LngLatBounds);
                                                                                                                                                            var ze = this.notesById[_e];
                                                                                                                                                            j.extend([ze.longitude, ze.latitude])
                                                                                                                                                        }
                                                                                                                                                        var Ze = n.tile_sets.map((function(e, t) {
                                                                                                                                                            return {
                                                                                                                                                                id: e.name,
                                                                                                                                                                type: "raster",
                                                                                                                                                                source: e.name,
                                                                                                                                                                minzoom: e.min_zoom - (n.overzoom ? .3 : 1),
                                                                                                                                                                maxzoom: e.max_zoom,
                                                                                                                                                                layout: {
                                                                                                                                                                    visibility: 0 === t ? "visible" : "none"
                                                                                                                                                                },
                                                                                                                                                                paint: {}
                                                                                                                                                            }
                                                                                                                                                        }));
                                                                                                                                                        if (n.overlay) {
                                                                                                                                                            var Ue = n.overlay;
                                                                                                                                                            r[Ue.name] = {
                                                                                                                                                                type: "raster",
                                                                                                                                                                name: Ue.name,
                                                                                                                                                                tiles: [window.tilesCdnUrl + Ue.path + "/{z}/{x}/{y}." + Ue.extension],
                                                                                                                                                                tileSize: Ue.tile_size || 256,
                                                                                                                                                                bounds: b.th.bounds || [-.83, .57, -.57, .83],
                                                                                                                                                                minzoom: Ue.min_zoom - (n.overzoom ? .3 : 1),
                                                                                                                                                                maxzoom: Ue.max_zoom
                                                                                                                                                            }, Ze.push({
                                                                                                                                                                id: Ue.name,
                                                                                                                                                                type: "raster",
                                                                                                                                                                source: Ue.name,
                                                                                                                                                                minzoom: Ue.min_zoom - (n.overzoom ? .3 : 1),
                                                                                                                                                                maxzoom: Ue.max_zoom,
                                                                                                                                                                layout: {
                                                                                                                                                                    visibility: "visible"
                                                                                                                                                                },
                                                                                                                                                                paint: {}
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                        var We = [].concat(H(Ze), [{
                                                                                                                                                            id: se,
                                                                                                                                                            type: "line",
                                                                                                                                                            source: "regions-data",
                                                                                                                                                            layout: {
                                                                                                                                                                visibility: b.th.showRegionPolygonBorders ? "visible" : "none"
                                                                                                                                                            },
                                                                                                                                                            paint: b.th.regionBorderPaint,
                                                                                                                                                            filter: ["==", "$type", "Polygon"]
                                                                                                                                                        }, {
                                                                                                                                                            id: ae,
                                                                                                                                                            type: "fill",
                                                                                                                                                            source: "regions-data",
                                                                                                                                                            layout: {
                                                                                                                                                                visibility: b.th.showRegionPolygons ? "visible" : "none"
                                                                                                                                                            },
                                                                                                                                                            paint: b.th.regionFillPaint,
                                                                                                                                                            filter: ["==", "$type", "Polygon"]
                                                                                                                                                        }, {
                                                                                                                                                            id: ce,
                                                                                                                                                            type: "fill",
                                                                                                                                                            source: "subregions-data",
                                                                                                                                                            layout: {
                                                                                                                                                                visibility: b.th.showSubregionPolygons ? "visible" : "none"
                                                                                                                                                            },
                                                                                                                                                            paint: b.th.subregionFillPaint,
                                                                                                                                                            filter: ["==", "$type", "Polygon"]
                                                                                                                                                        }, {
                                                                                                                                                            id: "region-fills",
                                                                                                                                                            type: "fill",
                                                                                                                                                            source: "regions-data",
                                                                                                                                                            layout: {
                                                                                                                                                                visibility: b.th.showPersistentRegionHighlights ? "visible" : "none"
                                                                                                                                                            },
                                                                                                                                                            paint: b.th.regionHighlightFillPaint,
                                                                                                                                                            filter: ["==", "$type", "Polygon"]
                                                                                                                                                        }, {
                                                                                                                                                            id: "subregion-fills",
                                                                                                                                                            type: "fill",
                                                                                                                                                            source: "subregions-data",
                                                                                                                                                            layout: {
                                                                                                                                                                visibility: b.th.showPersistentRegionHighlights ? "visible" : "none"
                                                                                                                                                            },
                                                                                                                                                            paint: b.th.regionHighlightFillPaint,
                                                                                                                                                            filter: ["==", "$type", "Polygon"]
                                                                                                                                                        }, {
                                                                                                                                                            id: le,
                                                                                                                                                            type: "symbol",
                                                                                                                                                            source: "regions-data",
                                                                                                                                                            layout: Object.assign({
                                                                                                                                                                visibility: b.th.showRegionTitles ? "visible" : "none",
                                                                                                                                                                "text-field": "{title}",
                                                                                                                                                                "text-font": [b.th.fontName],
                                                                                                                                                                "text-ignore-placement": !0,
                                                                                                                                                                "text-allow-overlap": !0,
                                                                                                                                                                "text-max-width": b.th.regionTitleTextMaxWidth,
                                                                                                                                                                "text-letter-spacing": b.th.regionTitleTextLetterSpacing,
                                                                                                                                                                "text-size": {
                                                                                                                                                                    stops: b.th.regionTextStops
                                                                                                                                                                }
                                                                                                                                                            }, b.th.regionTitlesLayout),
                                                                                                                                                            paint: b.th.regionTitlesPaint,
                                                                                                                                                            filter: ["==", "$type", "Point"]
                                                                                                                                                        }, {
                                                                                                                                                            id: pe,
                                                                                                                                                            type: "circle",
                                                                                                                                                            source: "highlighter-data",
                                                                                                                                                            layout: {
                                                                                                                                                                visibility: "none"
                                                                                                                                                            },
                                                                                                                                                            paint: {
                                                                                                                                                                "circle-radius": 24,
                                                                                                                                                                "circle-opacity": 1,
                                                                                                                                                                "circle-blur": .75,
                                                                                                                                                                "circle-radius-transition": {
                                                                                                                                                                    duration: 1e3
                                                                                                                                                                },
                                                                                                                                                                "circle-opacity-transition": {
                                                                                                                                                                    duration: 1e3
                                                                                                                                                                },
                                                                                                                                                                "circle-translate": [0, -27],
                                                                                                                                                                "circle-color": b.th.accentColor
                                                                                                                                                            }
                                                                                                                                                        }, {
                                                                                                                                                            id: X,
                                                                                                                                                            type: "symbol",
                                                                                                                                                            source: "locations-data",
                                                                                                                                                            layout: {
                                                                                                                                                                "icon-allow-overlap": !0,
                                                                                                                                                                "icon-ignore-placement": !0,
                                                                                                                                                                "icon-image": "{icon}",
                                                                                                                                                                "icon-size": this.iconSize,
                                                                                                                                                                "icon-anchor": Te ? {
                                                                                                                                                                    type: "identity",
                                                                                                                                                                    property: "anchor"
                                                                                                                                                                } : b.th.markerAnchor,
                                                                                                                                                                visibility: "visible"
                                                                                                                                                            },
                                                                                                                                                            paint: {
                                                                                                                                                                "icon-opacity": ["case", ["boolean", ["feature-state", "found"], !1], .4, 1]
                                                                                                                                                            },
                                                                                                                                                            filter: A
                                                                                                                                                        }, {
                                                                                                                                                            id: oe,
                                                                                                                                                            type: "symbol",
                                                                                                                                                            source: "notes-data",
                                                                                                                                                            layout: {
                                                                                                                                                                "icon-allow-overlap": !0,
                                                                                                                                                                "icon-ignore-placement": !0,
                                                                                                                                                                "icon-image": "{color}",
                                                                                                                                                                "icon-size": this.iconSize,
                                                                                                                                                                "icon-anchor": b.th.markerAnchor,
                                                                                                                                                                visibility: "visible"
                                                                                                                                                            },
                                                                                                                                                            filter: !!be && ["match", ["get", "id"], be, !0, !1]
                                                                                                                                                        }]);
                                                                                                                                                        if (Oe && We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: re,
                                                                                                                                                                type: "symbol",
                                                                                                                                                                source: "text-notes-data",
                                                                                                                                                                layout: Object.assign({
                                                                                                                                                                    visibility: "visible",
                                                                                                                                                                    "text-field": "{title}",
                                                                                                                                                                    "text-font": [b.th.fontName],
                                                                                                                                                                    "text-ignore-placement": !0,
                                                                                                                                                                    "text-allow-overlap": !0
                                                                                                                                                                }, b.th.locationTitlesLayout),
                                                                                                                                                                paint: b.th.locationTitlesPaint,
                                                                                                                                                                filter: !!be && ["match", ["get", "id"], be, !0, !1]
                                                                                                                                                            }), Ee && (80 === window.game.id ? We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: Q,
                                                                                                                                                                type: "symbol",
                                                                                                                                                                source: "text-locations-data",
                                                                                                                                                                layout: Object.assign(Object.assign({
                                                                                                                                                                    visibility: "visible",
                                                                                                                                                                    "text-field": "{title}",
                                                                                                                                                                    "text-font": [b.th.fontName],
                                                                                                                                                                    "text-ignore-placement": !0,
                                                                                                                                                                    "text-allow-overlap": !0
                                                                                                                                                                }, b.th.locationTitlesLayout), {
                                                                                                                                                                    "text-size": ["interpolate", ["linear"],
                                                                                                                                                                        ["zoom"], 10, ["get", "text-size-10"], 11, ["get", "text-size-11"], 16, ["get", "text-size-16"]
                                                                                                                                                                    ],
                                                                                                                                                                    "text-letter-spacing": ["get", "text-letter-spacing"]
                                                                                                                                                                }),
                                                                                                                                                                paint: {
                                                                                                                                                                    "text-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "text-color"
                                                                                                                                                                    },
                                                                                                                                                                    "text-halo-width": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "text-halo-width"
                                                                                                                                                                    },
                                                                                                                                                                    "text-halo-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "text-halo-color"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                minzoom: 264 === window.mapData.map.id ? 11 : 0,
                                                                                                                                                                maxzoom: 24,
                                                                                                                                                                filter: A
                                                                                                                                                            }) : We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: Q,
                                                                                                                                                                type: "symbol",
                                                                                                                                                                source: "text-locations-data",
                                                                                                                                                                layout: Object.assign({
                                                                                                                                                                    visibility: "visible",
                                                                                                                                                                    "text-field": "{title}",
                                                                                                                                                                    "text-font": [b.th.fontName],
                                                                                                                                                                    "text-ignore-placement": !0,
                                                                                                                                                                    "text-allow-overlap": !0
                                                                                                                                                                }, b.th.locationTitlesLayout),
                                                                                                                                                                paint: b.th.locationTitlesPaint,
                                                                                                                                                                filter: A
                                                                                                                                                            })), ke && (Ie ? We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: J,
                                                                                                                                                                type: "circle",
                                                                                                                                                                source: "circle-locations-data",
                                                                                                                                                                layout: {
                                                                                                                                                                    visibility: "visible"
                                                                                                                                                                },
                                                                                                                                                                paint: Object.assign({
                                                                                                                                                                    "circle-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "circle-color"
                                                                                                                                                                    },
                                                                                                                                                                    "circle-opacity": ["case", ["boolean", ["feature-state", "found"], !1], .4, 1],
                                                                                                                                                                    "circle-stroke-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "circle-stroke-color"
                                                                                                                                                                    },
                                                                                                                                                                    "circle-stroke-width": 1,
                                                                                                                                                                    "circle-stroke-opacity": ["case", ["boolean", ["feature-state", "found"], !1], .4, 1],
                                                                                                                                                                    "circle-radius": 6
                                                                                                                                                                }, b.th.circleLocationsPaint),
                                                                                                                                                                filter: A
                                                                                                                                                            }) : We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: J,
                                                                                                                                                                type: "circle",
                                                                                                                                                                source: "circle-locations-data",
                                                                                                                                                                layout: {
                                                                                                                                                                    visibility: "visible"
                                                                                                                                                                },
                                                                                                                                                                paint: {
                                                                                                                                                                    "circle-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "circle-color"
                                                                                                                                                                    },
                                                                                                                                                                    "circle-opacity": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "circle-opacity"
                                                                                                                                                                    },
                                                                                                                                                                    "circle-stroke-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "circle-stroke-color"
                                                                                                                                                                    },
                                                                                                                                                                    "circle-stroke-width": 1,
                                                                                                                                                                    "circle-stroke-opacity": .9,
                                                                                                                                                                    "circle-radius": {
                                                                                                                                                                        stops: [
                                                                                                                                                                            [0, 0],
                                                                                                                                                                            [20, 139 === window.mapData.map.id ? 22e3 : 9500]
                                                                                                                                                                        ],
                                                                                                                                                                        base: 2
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                filter: A
                                                                                                                                                            })), xe && We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: ee,
                                                                                                                                                                type: "fill",
                                                                                                                                                                source: "polygon-locations-data",
                                                                                                                                                                paint: {
                                                                                                                                                                    "fill-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "fill-color"
                                                                                                                                                                    },
                                                                                                                                                                    "fill-opacity": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "fill-opacity"
                                                                                                                                                                    },
                                                                                                                                                                    "fill-outline-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "line-color"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                filter: A,
                                                                                                                                                                minzoom: 80 === window.game.id ? 11 : 0,
                                                                                                                                                                maxzoom: 24
                                                                                                                                                            }), Ce && We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: te,
                                                                                                                                                                type: "line",
                                                                                                                                                                source: "line-locations-data",
                                                                                                                                                                layout: {
                                                                                                                                                                    "line-cap": "round"
                                                                                                                                                                },
                                                                                                                                                                paint: {
                                                                                                                                                                    "line-color": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "line-color"
                                                                                                                                                                    },
                                                                                                                                                                    "line-width": {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "line-width"
                                                                                                                                                                    },
                                                                                                                                                                    "line-opacity": 81 === window.game.id ? {
                                                                                                                                                                        stops: [
                                                                                                                                                                            [12, 0],
                                                                                                                                                                            [12.1, 1]
                                                                                                                                                                        ]
                                                                                                                                                                    } : {
                                                                                                                                                                        type: "identity",
                                                                                                                                                                        property: "line-opacity"
                                                                                                                                                                    },
                                                                                                                                                                    "line-dasharray": b.th.locationLinesPaint["line-dasharray"]
                                                                                                                                                                },
                                                                                                                                                                filter: A
                                                                                                                                                            }), Se && We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: ge,
                                                                                                                                                                type: "line",
                                                                                                                                                                source: "link-lines-data",
                                                                                                                                                                layout: {
                                                                                                                                                                    "line-cap": "round",
                                                                                                                                                                    visibility: "none"
                                                                                                                                                                },
                                                                                                                                                                paint: {
                                                                                                                                                                    "line-color": "#ffffff",
                                                                                                                                                                    "line-width": 2,
                                                                                                                                                                    "line-opacity": .7
                                                                                                                                                                }
                                                                                                                                                            }), Le) {
                                                                                                                                                            var He = this.createRouteLayers(),
                                                                                                                                                                Ve = He.routeArrowsLayer,
                                                                                                                                                                $e = He.routeLinesLayer;
                                                                                                                                                            We.splice(n.tile_sets.length, 0, $e), We.splice(n.tile_sets.length, 0, Ve)
                                                                                                                                                        }
                                                                                                                                                        if (Pe) {
                                                                                                                                                            var qe = [];
                                                                                                                                                            Object.values(window.mapData.heatmapCategories).forEach((function(e) {
                                                                                                                                                                var t, n = W(e.points);
                                                                                                                                                                try {
                                                                                                                                                                    for (n.s(); !(t = n.n()).done;) {
                                                                                                                                                                        var o = t.value;
                                                                                                                                                                        qe.push({
                                                                                                                                                                            type: "Feature",
                                                                                                                                                                            properties: {
                                                                                                                                                                                category_id: e.id,
                                                                                                                                                                                title: e.title
                                                                                                                                                                            },
                                                                                                                                                                            geometry: {
                                                                                                                                                                                type: "Point",
                                                                                                                                                                                coordinates: [o.longitude, o.latitude]
                                                                                                                                                                            }
                                                                                                                                                                        })
                                                                                                                                                                    }
                                                                                                                                                                } catch (e) {
                                                                                                                                                                    n.e(e)
                                                                                                                                                                } finally {
                                                                                                                                                                    n.f()
                                                                                                                                                                }
                                                                                                                                                            })), r["heatmaps-data"] = {
                                                                                                                                                                type: "geojson",
                                                                                                                                                                data: {
                                                                                                                                                                    type: "FeatureCollection",
                                                                                                                                                                    features: qe
                                                                                                                                                                }
                                                                                                                                                            }, We.splice(n.tile_sets.length, 0, {
                                                                                                                                                                id: ne,
                                                                                                                                                                type: "heatmap",
                                                                                                                                                                source: "heatmaps-data",
                                                                                                                                                                filter: !1,
                                                                                                                                                                paint: {
                                                                                                                                                                    "heatmap-color": ["interpolate", ["linear"],
                                                                                                                                                                        ["heatmap-density"], 0, "rgba(0, 255, 255, 0)", .2, "rgba(63, 0, 91, 0.25)", .4, "rgba(127, 0, 63, 0.5)", .6, "rgba(191, 0, 31, 0.5)", .8, "rgba(255, 0, 0, 0.5)"
                                                                                                                                                                    ],
                                                                                                                                                                    "heatmap-radius": {
                                                                                                                                                                        base: 2,
                                                                                                                                                                        stops: [
                                                                                                                                                                            [1, 16],
                                                                                                                                                                            [7, 512]
                                                                                                                                                                        ]
                                                                                                                                                                    },
                                                                                                                                                                    "heatmap-weight": {
                                                                                                                                                                        base: 2,
                                                                                                                                                                        stops: [
                                                                                                                                                                            [1, 2],
                                                                                                                                                                            [7, 64]
                                                                                                                                                                        ]
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                        if (this.imageOverlays)
                                                                                                                                                            for (var Ge = 0; Ge1) {
                                                                                                                                                                var Xe = n.tile_sets[0];
                                                                                                                                                                this.mapTypeControl = new g.Z(n.tile_sets, (function(e) {
                                                                                                                                                                    t.map.setLayoutProperty(e.name, "visibility", "visible"), setTimeout((function() {
                                                                                                                                                                        if (t.map.setLayoutProperty(Xe.name, "visibility", "none"), Xe = e, t.map.setMinZoom(e.min_zoom - (n.overzoom ? .3 : 1)), t.map.setMaxZoom(e.max_zoom - (n.overzoom ? .3 : 1)), 118 === window.game.id) {
                                                                                                                                                                            window.store.getState().map.categoryIds;
                                                                                                                                                                            "Caves" === e.name ? (window.store.dispatch(u.cq.setRegionFilter(1378, !0)), window.clearRegionFilter()) : (window.store.dispatch(u.cq.setRegionFilter(1377)), window.clearRegionFilter())
                                                                                                                                                                        }
                                                                                                                                                                    }), 100), document.body.classList.remove(Xe.name.replace(" ", "-")), document.body.classList.add(e.name.replace(" ", "-"))
                                                                                                                                                                })), Ye.addControl(this.mapTypeControl, "bottom-right")
                                                                                                                                                            }
                                                                                                                                                        var Qe = !window.isMobile && b.th.showCompass;
                                                                                                                                                        if (Ye.addControl(new mapboxgl.NavigationControl({
                                                                                                                                                                showCompass: Qe
                                                                                                                                                            }), "bottom-right"), Qe) {
                                                                                                                                                            var Je = document.getElementsByClassName("mapboxgl-ctrl-compass")[0];
                                                                                                                                                            Je.parentElement.prepend(Je)
                                                                                                                                                        }
                                                                                                                                                        if (window.isMobile || window.isEmbedded || Ye.addControl(new mapboxgl.FullscreenControl, "top-right"), window.config["3dEnabled"]) {
                                                                                                                                                            var et = new F.Z((function(e) {
                                                                                                                                                                e ? (159 === window.game.id && store.dispatch(u.cq.setCategoriesVisibility({
                                                                                                                                                                    9630: !1
                                                                                                                                                                })), t.enable3DMode()) : (159 === window.game.id && store.dispatch(u.cq.setCategoriesVisibility({
                                                                                                                                                                    9630: !0
                                                                                                                                                                })), t.disable3DMode())
                                                                                                                                                            }));
                                                                                                                                                            Ye.addControl(et, "bottom-right")
                                                                                                                                                        }
                                                                                                                                                        if (Ye.addControl(new f.Z((function() {
                                                                                                                                                                t.addNewNote()
                                                                                                                                                            })), "bottom-right"), 146 === window.game.id) {
                                                                                                                                                            var tt = new I.Z;
                                                                                                                                                            Ye.addControl(tt, "bottom-right"), window.toggleTimerControl = function() {
                                                                                                                                                                tt.toggleControl()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (window.isMobile || Ye.addControl(new v.Z(this.addNewNote, this.addNewSuggestion)), window.mapData.distanceToolConfig && !window.isMobile && (Ye.addControl(new k.Z(window.mapData.distanceToolConfig), "bottom-right"), 20 === window.game.id && Ye.addControl(new L.Z(window.mapData.distanceToolConfig), "bottom-right")), !window.config.routesEnabled || window.isMobile || window.isEmbedded || window.isMini || (this.routeToolControl = new x.Z((function(e) {
                                                                                                                                                                return t.isToolInterceptingClicks = e
                                                                                                                                                            })), window.enableRouteTool = function() {
                                                                                                                                                                t.routeToolControl.isAdded() || t.map.addControl(t.routeToolControl, "bottom-right")
                                                                                                                                                            }, (m.Z.routeWaypoints || 20 === window.game.id && window.isEditor) && window.enableRouteTool()), 80 !== window.game.id || window.isMobile || window.isEmbedded || window.isMini || (window.isEditor && 334 !== window.mapData.map.id && 304 !== window.mapData.map.id && (this.liveLocationControl = new O.Z((function() {})), this.map.addControl(this.liveLocationControl, "bottom-right")), P.Z.setup((function(e) {}))), window.isMobile && this.map.on("click", (function(e) {
                                                                                                                                                                null != t.popup && t.popup.isOpen() && t.map.touchZoomRotate._tapDragZoom.reset()
                                                                                                                                                            })), Ye.on("click", X, (function(e) {
                                                                                                                                                                if (!t.isToolInterceptingClicks) {
                                                                                                                                                                    e.originalEvent.preventDefault();
                                                                                                                                                                    var n = store.getState().map.locationsById[e.features[0].properties.locationId];
                                                                                                                                                                    store.dispatch(u.cq.showLocationInfo(n, !0))
                                                                                                                                                                }
                                                                                                                                                            })), Ie && Ye.on("click", J, (function(e) {
                                                                                                                                                                if (!t.isToolInterceptingClicks) {
                                                                                                                                                                    e.originalEvent.preventDefault();
                                                                                                                                                                    var n = store.getState().map.locationsById[e.features[0].properties.locationId];
                                                                                                                                                                    store.dispatch(u.cq.showLocationInfo(n, !0))
                                                                                                                                                                }
                                                                                                                                                            })), Le && (Ye.on("click", he, (function(e) {
                                                                                                                                                                if (console.log("Click", t.isToolInterceptingClicks), !t.isToolInterceptingClicks) {
                                                                                                                                                                    e.originalEvent.preventDefault();
                                                                                                                                                                    var n = store.getState().routes.routesById[e.features[0].properties.id];
                                                                                                                                                                    C.Z.update(n), window.store.dispatch(p.cq.selectRoute(n)), t.openInfoWindowForRoute(n, e.lngLat)
                                                                                                                                                                }
                                                                                                                                                            })), Ye.on("mouseenter", he, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = "pointer"
                                                                                                                                                            })), Ye.on("mouseleave", he, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = ""
                                                                                                                                                            }))), Ye.on("click", oe, (function(e) {
                                                                                                                                                                if (!t.isToolInterceptingClicks) {
                                                                                                                                                                    e.originalEvent.preventDefault();
                                                                                                                                                                    var n = e.features[0].properties.id,
                                                                                                                                                                        o = t.notesById[n];
                                                                                                                                                                    store.dispatch(c.cq.selectNote(o))
                                                                                                                                                                }
                                                                                                                                                            })), Ye.on("mouseenter", oe, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = "pointer"
                                                                                                                                                            })), Ye.on("mouseleave", oe, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = ""
                                                                                                                                                            })), Oe && (Ye.on("click", re, (function(e) {
                                                                                                                                                                if (!t.isToolInterceptingClicks) {
                                                                                                                                                                    e.originalEvent.preventDefault();
                                                                                                                                                                    var n = e.features[0].properties.id,
                                                                                                                                                                        o = t.notesById[n];
                                                                                                                                                                    store.dispatch(c.cq.selectNote(o))
                                                                                                                                                                }
                                                                                                                                                            })), Ye.on("mouseenter", re, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = "pointer"
                                                                                                                                                            })), Ye.on("mouseleave", re, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = ""
                                                                                                                                                            }))), Ye.on("contextmenu", X, (function(e) {
                                                                                                                                                                t.isToolInterceptingClicks || t.markLocationAsFound(e.features[0].properties.locationId)
                                                                                                                                                            })), Ie && Ye.on("contextmenu", J, (function(e) {
                                                                                                                                                                t.isToolInterceptingClicks || t.markLocationAsFound(e.features[0].properties.locationId)
                                                                                                                                                            })), Ye.on("mouseenter", X, (function(e) {
                                                                                                                                                                Ye.getCanvas().style.cursor = "pointer"
                                                                                                                                                            })), Ne) {
                                                                                                                                                            var nt = null;
                                                                                                                                                            Ye.on("mousemove", Re, (function(e) {
                                                                                                                                                                if (e.features.length > 0) {
                                                                                                                                                                    var t = e.features[0].id;
                                                                                                                                                                    if (t === nt) return;
                                                                                                                                                                    null !== nt && Ye.setFeatureState({
                                                                                                                                                                        source: Fe,
                                                                                                                                                                        id: nt
                                                                                                                                                                    }, {
                                                                                                                                                                        hover: !1
                                                                                                                                                                    }), nt = t, Ye.setFeatureState({
                                                                                                                                                                        source: Fe,
                                                                                                                                                                        id: nt
                                                                                                                                                                    }, {
                                                                                                                                                                        hover: !0
                                                                                                                                                                    })
                                                                                                                                                                }
                                                                                                                                                            })), Ye.on("mouseleave", Re, (function() {
                                                                                                                                                                null !== nt && Ye.setFeatureState({
                                                                                                                                                                    source: Fe,
                                                                                                                                                                    id: nt
                                                                                                                                                                }, {
                                                                                                                                                                    hover: !1
                                                                                                                                                                }), nt = null
                                                                                                                                                            }))
                                                                                                                                                        }
                                                                                                                                                        if (De) {
                                                                                                                                                            var ot = new mapboxgl.Popup({
                                                                                                                                                                    closeButton: !1,
                                                                                                                                                                    closeOnClick: !1,
                                                                                                                                                                    anchor: "left",
                                                                                                                                                                    offset: b.th.tooltipOffset,
                                                                                                                                                                    className: "mb-marker-tooltip d-none"
                                                                                                                                                                }).addTo(Ye),
                                                                                                                                                                rt = null,
                                                                                                                                                                it = store.getState().map,
                                                                                                                                                                at = function(e) {
                                                                                                                                                                    return function(n) {
                                                                                                                                                                        var o = n.features[0].properties.locationId;
                                                                                                                                                                        if (rt !== o) {
                                                                                                                                                                            rt = o;
                                                                                                                                                                            var r = it.locationsById[o],
                                                                                                                                                                                i = n.features[0].geometry.coordinates,
                                                                                                                                                                                a = b.aF[r.category_id] || b.xq[r.category.group_id];
                                                                                                                                                                            e.options.offset = "circle" === r.category.display_type ? [3, -3] : a ? a.tooltipOffset : b.th.tooltipOffset, e.options.offset = t.getScaledPopupOffset(e.options.offset);
                                                                                                                                                                            var s = r.title;
                                                                                                                                                                            190 === r.category.group_id && r.description && -1 !== r.title.indexOf("-") || 1171 === r.category.group_id && (s += " [".concat(r.category.title, "]")), e.setLngLat(i).setText("".concat(s)).removeClassName("d-none")
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                };
                                                                                                                                                            Ye.on("mousemove", X, at(ot));
                                                                                                                                                            var st = function(e) {
                                                                                                                                                                return function(t) {
                                                                                                                                                                    Ye.getCanvas().style.cursor = "", e.addClassName("d-none"), rt = null
                                                                                                                                                                }
                                                                                                                                                            };
                                                                                                                                                            Ye.on("mouseleave", X, st(ot)), Ie && (Ye.on("mousemove", J, at(ot)), Ye.on("mouseleave", J, st(ot)))
                                                                                                                                                        } else Ye.on("mouseleave", X, (function(e) {
                                                                                                                                                            Ye.getCanvas().style.cursor = ""
                                                                                                                                                        }));
                                                                                                                                                        window.config["3dEnabled"] && this.setup3DLayer(), Ye.on("load", (function() {
                                                                                                                                                            m.Z.hidePopup || (Be ? t.openInfoWindowForNote(t.notesById[_e]) : B && t.openInfoWindow(store.getState().map.locationsById[D[0]])), m.Z.highlightInitialPoint && t.addPointMarker([window.preferredX || 0, window.preferredY || 0]), m.Z.initialRegionIds && m.Z.highlightRegions && window.mapData.regions.forEach((function(e) {
                                                                                                                                                                return t.setRegionPersistentlyHighlighted(e.id, m.Z.initialRegionIds.includes(e.id))
                                                                                                                                                            })), Le && t.setupRouteResources(), window.user && Object.keys(window.user.locations).forEach((function(e) {
                                                                                                                                                                t.setLocationFound(e, !0)
                                                                                                                                                            })), Me && (t.map.addSource("grid-data", {
                                                                                                                                                                type: "geojson",
                                                                                                                                                                data: "".concat(window.location.origin, "/games/").concat(window.game.slug, "/grid-").concat(window.mapData.map.id, ".geojson")
                                                                                                                                                            }), t.map.addLayer({
                                                                                                                                                                id: ye,
                                                                                                                                                                type: "line",
                                                                                                                                                                source: "grid-data",
                                                                                                                                                                layout: {
                                                                                                                                                                    visibility: "visible"
                                                                                                                                                                },
                                                                                                                                                                paint: {
                                                                                                                                                                    "line-color": "#ffffff",
                                                                                                                                                                    "line-width": 2,
                                                                                                                                                                    "line-opacity": .7
                                                                                                                                                                },
                                                                                                                                                                filter: ["==", "$type", "Polygon"]
                                                                                                                                                            }, se), t.map.addLayer({
                                                                                                                                                                id: ve,
                                                                                                                                                                type: "symbol",
                                                                                                                                                                source: "grid-data",
                                                                                                                                                                layout: {
                                                                                                                                                                    visibility: "visible",
                                                                                                                                                                    "text-anchor": "top-left",
                                                                                                                                                                    "text-field": "{title}",
                                                                                                                                                                    "text-font": [b.th.fontName],
                                                                                                                                                                    "text-ignore-placement": !0,
                                                                                                                                                                    "text-allow-overlap": !0,
                                                                                                                                                                    "text-max-width": 200,
                                                                                                                                                                    "text-letter-spacing": .1,
                                                                                                                                                                    "text-size": {
                                                                                                                                                                        stops: [
                                                                                                                                                                            [8, 6],
                                                                                                                                                                            [9, 8],
                                                                                                                                                                            [14, 16]
                                                                                                                                                                        ]
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                paint: {
                                                                                                                                                                    "text-color": "#ffffff",
                                                                                                                                                                    "text-halo-width": .5,
                                                                                                                                                                    "text-halo-color": "#000000",
                                                                                                                                                                    "text-translate": ["interpolate", ["exponential", 1],
                                                                                                                                                                        ["zoom"], 9, ["literal", [0, 0]], 14, ["literal", [20, 20]]
                                                                                                                                                                    ],
                                                                                                                                                                    "text-translate-anchor": "map"
                                                                                                                                                                },
                                                                                                                                                                filter: ["==", "$type", "Point"]
                                                                                                                                                            }, "region-borders"), document.getElementById("toggle-grid").addEventListener("click", (function(e) {
                                                                                                                                                                var n = e.target.classList.toggle("disabled");
                                                                                                                                                                t.map.setLayoutProperty(ye, "visibility", n ? "none" : "visible"), t.map.setLayoutProperty(ve, "visibility", n ? "none" : "visible")
                                                                                                                                                            }))), window !== window.parent && window.parent.postMessage({
                                                                                                                                                                type: "mapready",
                                                                                                                                                                data: null
                                                                                                                                                            }, "*")
                                                                                                                                                        }));
                                                                                                                                                        var lt = this;
                                                                                                                                                        if ($("#toggle-zones").click((function() {
                                                                                                                                                                var e = $(this);
                                                                                                                                                                e.toggleClass("disabled");
                                                                                                                                                                var t = !e.hasClass("disabled");
                                                                                                                                                                lt.setRegionsVisible(t)
                                                                                                                                                            })), n.overlay) {
                                                                                                                                                            var ct = n.overlay.name;
                                                                                                                                                            document.getElementById("toggle-overlay").addEventListener("click", (function(e) {
                                                                                                                                                                var n = e.target;
                                                                                                                                                                n.classList.toggle("disabled");
                                                                                                                                                                var o = !n.classList.contains("disabled");
                                                                                                                                                                t.map.setLayoutProperty(ct, "visibility", o ? "visible" : "none")
                                                                                                                                                            }))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "setup3DLayer",
                                                                                                                                                    value: function() {
                                                                                                                                                        var e = this;
                                                                                                                                                        this.map.on("style.load", (function() {
                                                                                                                                                            e.map.addLayer({
                                                                                                                                                                id: "stars",
                                                                                                                                                                type: "custom",
                                                                                                                                                                renderingMode: "3d",
                                                                                                                                                                onAdd: function(e, t) {
                                                                                                                                                                    var n = new Threebox(e, t, {
                                                                                                                                                                        defaultLights: !0,
                                                                                                                                                                        enableSelectingObjects: !0,
                                                                                                                                                                        enableTooltips: !0
                                                                                                                                                                    });
                                                                                                                                                                    window.tb = n
                                                                                                                                                                },
                                                                                                                                                                render: function(e, t) {
                                                                                                                                                                    window.tb.update()
                                                                                                                                                                }
                                                                                                                                                            })
                                                                                                                                                        }))
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "getInitialLocationsFilter",
                                                                                                                                                    value: function(e) {
                                                                                                                                                        return e && e.length ? window.visibleCategories ? ["any", ["in", ["get", "category_id"],
                                                                                                                                                                ["literal", this.getVisibleCategoriesFilter()]
                                                                                                                                                            ],
                                                                                                                                                            ["match", ["get", "locationId"], e, !0, !1]
                                                                                                                                                        ] : ["match", ["get", "locationId"], e, !0, !1] : (window.visibleCategories, this.getLocationsFilter())
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "addNewLocationsData",
                                                                                                                                                    value: function(e) {
                                                                                                                                                        for (var t = performance.now(), n = [], o = [], r = [], i = [], a = [], s = e.length, l = 0; l0) {
                                                                                                                                                            var s = this.map.getSource("text-locations-data")._data;
                                                                                                                                                            n.forEach((function(e) {
                                                                                                                                                                s.features.push(e)
                                                                                                                                                            })), this.map.getSource("text-locations-data").setData(s)
                                                                                                                                                        }
                                                                                                                                                        if (o.length > 0) {
                                                                                                                                                            var l = this.map.getSource("locations-data")._data;
                                                                                                                                                            o.forEach((function(e) {
                                                                                                                                                                l.features.push(e)
                                                                                                                                                            })), this.map.getSource("locations-data").setData(l)
                                                                                                                                                        }
                                                                                                                                                        if (r.length > 0) {
                                                                                                                                                            var c = this.map.getSource("circle-locations-data")._data;
                                                                                                                                                            r.forEach((function(e) {
                                                                                                                                                                c.features.push(e)
                                                                                                                                                            })), this.map.getSource("circle-locations-data").setData(c)
                                                                                                                                                        }
                                                                                                                                                        if (a.length > 0) {
                                                                                                                                                            var u = this.map.getSource("line-locations-data")._data;
                                                                                                                                                            a.forEach((function(e) {
                                                                                                                                                                u.features.push(e)
                                                                                                                                                            })), this.map.getSource("line-locations-data").setData(u)
                                                                                                                                                        }
                                                                                                                                                        if (i.length > 0) {
                                                                                                                                                            var d = this.map.getSource("polygon-locations-data")._data;
                                                                                                                                                            i.forEach((function(e) {
                                                                                                                                                                d.features.push(e)
                                                                                                                                                            })), this.map.getSource("polygon-locations-data").setData(d)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "showInfoWindow",
                                                                                                                                                    value: function(e) {
                                                                                                                                                        this.openInfoWindow(e)
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "showInfoWindowForNote",
                                                                                                                                                    value: function(e) {
                                                                                                                                                        this.openInfoWindowForNote(e, {})
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "triggerMarkerClick",
                                                                                                                                                    value: function(e, t) {
                                                                                                                                                        var n = u.wl.getLocation(store.getState(), e);
                                                                                                                                                        n ? (this.alsoSetMarkersVisibleById([e], !0), this.map.panTo([n.longitude, n.latitude], t), store.dispatch(u.cq.showLocationInfo(n, !0))) : window.toastr.error("Location with ID: " + e + " could not be found. It may have been deleted :/", "Can't show location")
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "openInfoWindow",
                                                                                                                                                    value: function(e) {
                                                                                                                                                        var t = this,
                                                                                                                                                            n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                                                                                                                                            s = e.category;
                                                                                                                                                        this.hideInfoWindow();
                                                                                                                                                        var l = o.createRef(),
                                                                                                                                                            c = document.createElement("div");
                                                                                                                                                        c.className = "location-popup-content-wrapper";
                                                                                                                                                        var u = b.aF[s.id] || b.xq[s.group_id],
                                                                                                                                                            d = "circle" === e.category.display_type ? [0, -3] : u ? u.popupOffset : b.th.popupOffset;
                                                                                                                                                        if (d = this.getScaledPopupOffset(d), this.popup = new mapboxgl.Popup({
                                                                                                                                                                anchor: "bottom",
                                                                                                                                                                offset: d
                                                                                                                                                            }).setLngLat([e.longitude, e.latitude]).setDOMContent(c).on("open", (function(u) {
                                                                                                                                                                r.render(o.createElement(i.zt, {
                                                                                                                                                                    store: t.store
                                                                                                                                                                }, o.createElement(a.Z, {
                                                                                                                                                                    ref: l,
                                                                                                                                                                    location: e,
                                                                                                                                                                    category: s,
                                                                                                                                                                    renderToolbar: be ? function(e, t, n) {
                                                                                                                                                                        var r = window.user;
                                                                                                                                                                        return r ? r.hasPro ? o.createElement("div", {
                                                                                                                                                                            className: "marker-buttons"
                                                                                                                                                                        }, o.createElement("div", {
                                                                                                                                                                            className: "custom-control custom-checkbox marker-button-fancy",
                                                                                                                                                                            onClick: t
                                                                                                                                                                        }, o.createElement("input", {
                                                                                                                                                                            type: "checkbox",
                                                                                                                                                                            className: "custom-control-input",
                                                                                                                                                                            id: "found-checkbox",
                                                                                                                                                                            checked: e
                                                                                                                                                                        }), o.createElement("label", {
                                                                                                                                                                            className: "custom-control-label",
                                                                                                                                                                            htmlFor: "found-checkbox"
                                                                                                                                                                        }, __("Found")))) : o.createElement("div", {
                                                                                                                                                                            className: "marker-buttons"
                                                                                                                                                                        }, o.createElement("div", {
                                                                                                                                                                            className: "custom-control custom-checkbox marker-button-fancy" + (n ? "" : " disabled"),
                                                                                                                                                                            onClick: n ? t : void 0
                                                                                                                                                                        }, o.createElement("input", {
                                                                                                                                                                            type: "checkbox",
                                                                                                                                                                            className: "custom-control-input",
                                                                                                                                                                            id: "found-checkbox",
                                                                                                                                                                            checked: e
                                                                                                                                                                        }), o.createElement("label", {
                                                                                                                                                                            className: "custom-control-label",
                                                                                                                                                                            htmlFor: "found-checkbox"
                                                                                                                                                                        }, __("Found")))) : o.createElement("div", {
                                                                                                                                                                            className: "marker-buttons"
                                                                                                                                                                        }, o.createElement("a", {
                                                                                                                                                                            className: "custom-control marker-button-fancy marker-button-upgrade",
                                                                                                                                                                            href: window.baseUrl + "/login",
                                                                                                                                                                            target: "_blank"
                                                                                                                                                                        }, __("Login to track found locations")))
                                                                                                                                                                    } : void 0
                                                                                                                                                                })), c, n ? t.autoPanPopup : void 0)
                                                                                                                                                            })).once("close", (function() {
                                                                                                                                                                r.unmountComponentAtNode(c), l.current && (l.current.componentWillUnmount(), l = o.createRef())
                                                                                                                                                            })), this.popup.addTo(this.map), this.popup.locationId = e.id, window.Analytics.trackEngagement("location popup opened", {}, {
                                                                                                                                                                location: e,
                                                                                                                                                                category: s
                                                                                                                                                            }), Se) {
                                                                                                                                                            var p = [],
                                                                                                                                                                f = !0;
                                                                                                                                                            if (9061 === s.id || 8991 === s.id || 9076 === s.id) {
                                                                                                                                                                var g, h = (0, N.hW)(e.description);
                                                                                                                                                                if (9061 === s.id ? g = "Cave Entrances" : 8991 === s.id ? g = "Associated Cave" : (g = "Puzzle", f = !1), h && h[g]) {
                                                                                                                                                                    var m, y = h[g].matchAll(/locationIds=([0-9]+)/gm),
                                                                                                                                                                        v = W(y);
                                                                                                                                                                    try {
                                                                                                                                                                        for (v.s(); !(m = v.n()).done;) {
                                                                                                                                                                            var w = m.value;
                                                                                                                                                                            p.push([e.id, parseInt(w[1])])
                                                                                                                                                                        }
                                                                                                                                                                    } catch (e) {
                                                                                                                                                                        v.e(e)
                                                                                                                                                                    } finally {
                                                                                                                                                                        v.f()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            } else if (8107 === s.id) {
                                                                                                                                                                var E, k = e.description.matchAll(/locationIds=([0-9]+)/gm),
                                                                                                                                                                    x = W(k);
                                                                                                                                                                try {
                                                                                                                                                                    for (x.s(); !(E = x.n()).done;) {
                                                                                                                                                                        var C = E.value;
                                                                                                                                                                        p.push([e.id, parseInt(C[1])])
                                                                                                                                                                    }
                                                                                                                                                                } catch (e) {
                                                                                                                                                                    x.e(e)
                                                                                                                                                                } finally {
                                                                                                                                                                    x.f()
                                                                                                                                                                }
                                                                                                                                                            } else if (1974 === s.id) {
                                                                                                                                                                var S, _ = e.description.matchAll(/locationIds=([0-9]+)/gm),
                                                                                                                                                                    O = W(_);
                                                                                                                                                                try {
                                                                                                                                                                    for (O.s(); !(S = O.n()).done;) {
                                                                                                                                                                        var P = S.value;
                                                                                                                                                                        p.push([e.id, parseInt(P[1])])
                                                                                                                                                                    }
                                                                                                                                                                } catch (e) {
                                                                                                                                                                    O.e(e)
                                                                                                                                                                } finally {
                                                                                                                                                                    O.f()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                            p.length && this.showLinkLines(p, f)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "openInfoWindowForNote",
                                                                                                                                                    value: function(e, t) {
                                                                                                                                                        var n = this;
                                                                                                                                                        this.hideInfoWindow();
                                                                                                                                                        var a = document.createElement("div"),
                                                                                                                                                            l = b.th.popupOffset;
                                                                                                                                                        l = this.getScaledPopupOffset(l), this.popup = new mapboxgl.Popup({
                                                                                                                                                            anchor: "bottom",
                                                                                                                                                            offset: l
                                                                                                                                                        }).setLngLat([e.longitude, e.latitude]).setDOMContent(a).on("open", (function(t) {
                                                                                                                                                            r.render(o.createElement(i.zt, {
                                                                                                                                                                store: n.store
                                                                                                                                                            }, o.createElement(s.Z, {
                                                                                                                                                                note: e
                                                                                                                                                            })), a, n.autoPanPopup)
                                                                                                                                                        })), this.popup.addTo(this.map), this.popup.noteId = e.id
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "openInfoWindowForRoute",
                                                                                                                                                    value: function(e, t) {
                                                                                                                                                        var n = this;
                                                                                                                                                        this.hideInfoWindow();
                                                                                                                                                        var a = document.createElement("div");
                                                                                                                                                        this.popup = new mapboxgl.Popup({
                                                                                                                                                            anchor: "bottom",
                                                                                                                                                            offset: [0, -2]
                                                                                                                                                        }).setLngLat(t).setDOMContent(a).on("open", (function(t) {
                                                                                                                                                            r.render(o.createElement(i.zt, {
                                                                                                                                                                store: n.store
                                                                                                                                                            }, o.createElement(T.Z, {
                                                                                                                                                                route: e,
                                                                                                                                                                isAddMode: !1,
                                                                                                                                                                isEditMode: !1,
                                                                                                                                                                locationsById: store.getState().map.locationsById
                                                                                                                                                            })), a, n.autoPanPopup)
                                                                                                                                                        })), this.popup.addTo(this.map), this.popup.routeId = e.id
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "hideInfoWindow",
                                                                                                                                                    value: function() {
                                                                                                                                                        this.popup && (this.popup.remove(), this.popup = null, Se && this.hideLinkLines())
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "getScaledPopupOffset",
                                                                                                                                                    value: function(e) {
                                                                                                                                                        if (this.iconSize !== ze)
                                                                                                                                                            if ("number" == typeof this.iconSize) e = [e[0] * this.iconSize, e[1] * this.iconSize];
                                                                                                                                                            else {
                                                                                                                                                                var t = (0, y.w6)(this.iconSize.stops[0][0], this.iconSize.stops[1][0], this.iconSize.stops[0][1], this.iconSize.stops[1][1], this.map.getZoom());
                                                                                                                                                                e = [e[0] * t, e[1] * t]
                                                                                                                                                            } return e
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "setLocationsFilter",
                                                                                                                                                    value: function() {
                                                                                                                                                        var e = this.getLocationsFilter();
                                                                                                                                                        if (this.map.setFilter(X, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), Ee && this.map.setFilter(Q, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), ke && this.map.setFilter(J, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), xe && this.map.setFilter(ee, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), Ce && !_e && this.map.setFilter(te, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), this.popup && this.popup.locationId) {
                                                                                                                                                            var t = store.getState().map.locationsById[this.popup.locationId];
                                                                                                                                                            if (t) store.getState().map.categories[t.category_id].visible || this.hideInfoWindow();
                                                                                                                                                            else console.warn("Hiding info window but no location setLocationFound? " + this.popup.locationId)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "getLocationsFilter",
                                                                                                                                                    value: function() {
                                                                                                                                                        var e = this.getVisibleCategoriesFilter(),
                                                                                                                                                            t = window.store.getState().map,
                                                                                                                                                            n = t.regionFilter,
                                                                                                                                                            o = n ? t.regions.filter((function(e) {
                                                                                                                                                                return e.parent_region_id === n
                                                                                                                                                            })).map((function(e) {
                                                                                                                                                                return e.id
                                                                                                                                                            })) : null,
                                                                                                                                                            r = null;
                                                                                                                                                        return Object.entries(t.multiTagFilters).length > 0 && (r = ["!", ["in", ["get", "locationId"],
                                                                                                                                                            ["literal", this.getExcludedLocationsFilter()]
                                                                                                                                                        ]]), n && r ? ["all", ["in", ["get", "region_id"], o ? ["literal", [].concat(H(o), [n])] : n + ""],
                                                                                                                                                            ["in", ["get", "category_id"],
                                                                                                                                                                ["literal", e]
                                                                                                                                                            ], r
                                                                                                                                                        ] : n ? ["all", ["in", ["get", "region_id"], o ? ["literal", [].concat(H(o), [n])] : n + ""],
                                                                                                                                                            ["in", ["get", "category_id"],
                                                                                                                                                                ["literal", e]
                                                                                                                                                            ]
                                                                                                                                                        ] : r ? ["all", ["in", ["get", "category_id"],
                                                                                                                                                            ["literal", e]
                                                                                                                                                        ], r] : ["in", ["get", "category_id"],
                                                                                                                                                            ["literal", e]
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }, {
                                                                                                                                                    key: "getVisibleCategoriesFilter",
                                                                                                                                                    value: function() {
                                                                                                                                                        for (var e = u.wl.getCategories(window.store.getState()), t = [], n = 0; n1 && void 0 !== arguments[1] && arguments[1], n = store.getState().map.locationsById, o = this.map.getSource("link-lines-data")._data; o.coordinates = e.map((function(e) {
                                                                                                                                                                var t = U(e, 2),
                                                                                                                                                                    o = t[0],
                                                                                                                                                                    r = t[1],
                                                                                                                                                                    i = n[o],
                                                                                                                                                                    a = n[r];
                                                                                                                                                                return i && a ? [
                                                                                                                                                                    [i.longitude, i.latitude],
                                                                                                                                                                    [a.longitude, a.latitude]
                                                                                                                                                                ] : (console.warn("Link to invalid Location ID: " + o + " -> " + r), null)
                                                                                                                                                            })).filter((function(e) {
                                                                                                                                                                return null != e
                                                                                                                                                            })), t && (o.coordinates = o.coordinates.map((function(e) {
                                                                                                                                                                return (0, R.P)(e[0], e[1])
                                                                                                                                                            }))), this.map.getSource("link-lines-data").setData(o), this.map.setLayoutProperty(ge, "visibility", "visible")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "hideLinkLines",
                                                                                                                                                        value: function() {
                                                                                                                                                            var e = this.map.getSource("link-lines-data")._data;
                                                                                                                                                            e.coordinates = [], this.map.getSource("link-lines-data").setData(e), this.map.setLayoutProperty(ge, "visibility", "none")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "showProgressCategory",
                                                                                                                                                        value: function(e, t) {
                                                                                                                                                            window.isMobile && $(".navbar-collapse.show").collapse("toggle"), this.hideAllLocationMarkers(), this.setMarkersVisible(t, !0), this.setBoundsFromLocations(t)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setBoundsFromLocations",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 ? arguments[2] : void 0, o = new mapboxgl.LngLatBounds, r = e.length - 1; r >= 0; r--) {
                                                                                                                                                                var i = e[r];
                                                                                                                                                                o.extend([i.longitude, i.latitude])
                                                                                                                                                            }
                                                                                                                                                            var a = n ? {
                                                                                                                                                                padding: t,
                                                                                                                                                                maxZoom: n
                                                                                                                                                            } : {
                                                                                                                                                                padding: t
                                                                                                                                                            };
                                                                                                                                                            this.map.fitBounds(o, a)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setBoundsFromLocationIds",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 ? arguments[2] : void 0, o = new mapboxgl.LngLatBounds, r = e.length - 1; r >= 0; r--) {
                                                                                                                                                                var i = store.getState().map.locationsById[e[r]];
                                                                                                                                                                i && o.extend([i.longitude, i.latitude])
                                                                                                                                                            }
                                                                                                                                                            var a = n ? {
                                                                                                                                                                padding: t,
                                                                                                                                                                maxZoom: n
                                                                                                                                                            } : {
                                                                                                                                                                padding: t
                                                                                                                                                            };
                                                                                                                                                            this.map.fitBounds(o, a)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setLocationFound",
                                                                                                                                                        value: function(e, t) {
                                                                                                                                                            this.map.setFeatureState({
                                                                                                                                                                source: "locations-data",
                                                                                                                                                                id: e
                                                                                                                                                            }, {
                                                                                                                                                                found: t
                                                                                                                                                            }), Ie && this.map.setFeatureState({
                                                                                                                                                                source: "circle-locations-data",
                                                                                                                                                                id: e
                                                                                                                                                            }, {
                                                                                                                                                                found: t
                                                                                                                                                            }), this.showFoundLocations || this.updateFoundLocationsStyle()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setLocationsFound",
                                                                                                                                                        value: function(e, t) {}
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setFoundLocationsShown",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            this.showFoundLocations = e, this.updateFoundLocationsStyle()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "startMovingNote",
                                                                                                                                                        value: function(e, t) {
                                                                                                                                                            var n = this,
                                                                                                                                                                o = this.notesById[e];
                                                                                                                                                            this.draggableNoteMarker && (this.draggableNoteMarker.remove(), this.draggableNoteMarker = null);
                                                                                                                                                            var r = document.createElement("div");
                                                                                                                                                            r.className = "marker", r.style.backgroundImage = 'url("'.concat(window.cdnUrl, "/").concat(b.th.noteMarkersConfig.imagePath, "/pin-").concat(o.color || "668f56", '.png")'), r.style.backgroundSize = "100%", r.style.width = b.th.noteMarkersConfig.width + "px", r.style.height = b.th.noteMarkersConfig.height + "px", this.draggableNoteMarker = new mapboxgl.Marker({
                                                                                                                                                                draggable: !0,
                                                                                                                                                                element: r,
                                                                                                                                                                anchor: b.th.markerAnchor
                                                                                                                                                            }).setLngLat([o.longitude, o.latitude]).on("dragend", (function(e) {
                                                                                                                                                                var o = n.draggableNoteMarker.getLngLat();
                                                                                                                                                                t(o.lat, o.lng)
                                                                                                                                                            })).on("drag", (function(t) {
                                                                                                                                                                if (n.popup && n.popup.noteId === e) {
                                                                                                                                                                    var o = n.draggableNoteMarker.getLngLat();
                                                                                                                                                                    n.popup.setLngLat(o)
                                                                                                                                                                }
                                                                                                                                                            })).addTo(this.map), this.draggableNoteMarker.noteId = e, this.draggableNoteMarker.getElement().addEventListener("click", (function(t) {
                                                                                                                                                                t.stopPropagation();
                                                                                                                                                                var o = n.notesById[e];
                                                                                                                                                                store.dispatch(c.cq.selectNote(o))
                                                                                                                                                            })), this.map.setLayoutProperty(oe, "icon-size", ["match", ["get", "id"], o.id, 0, ze])
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "deleteNewLocationMarker",
                                                                                                                                                        value: function() {
                                                                                                                                                            null != this.newLocationMarker && (this.newLocationMarker.remove(), this.newLocationMarker = null)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "deleteNewNoteMarker",
                                                                                                                                                        value: function() {
                                                                                                                                                            this.addedNoteMarker && (this.addedNoteMarker.remove(), this.addedNoteMarker = null)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "createNote",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            this.notesById[e.id] = e;
                                                                                                                                                            var t = "ffffff" === e.color ? "text-notes-data" : "notes-data",
                                                                                                                                                                n = this.map.getSource(t)._data;
                                                                                                                                                            if (n.features.push({
                                                                                                                                                                    type: "Feature",
                                                                                                                                                                    properties: {
                                                                                                                                                                        id: e.id,
                                                                                                                                                                        color: e.color || "668f56",
                                                                                                                                                                        title: e.title
                                                                                                                                                                    },
                                                                                                                                                                    geometry: {
                                                                                                                                                                        type: "Point",
                                                                                                                                                                        coordinates: [e.longitude, e.latitude]
                                                                                                                                                                    }
                                                                                                                                                                }), this.map.getSource(t).setData(n), !store.getState().user.notesShown) {
                                                                                                                                                                var o = this.map.getFilter(oe);
                                                                                                                                                                if (null != o && o.length && 3 === o.length) {
                                                                                                                                                                    var r = o[2][1].split(",");
                                                                                                                                                                    r.push(e.id), this.setNotesVisibleById(r, !0)
                                                                                                                                                                } else this.setNotesVisibleById([e.id], !0)
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "deleteNoteMarker",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            delete this.notesById[e.id];
                                                                                                                                                            for (var t = "ffffff" === e.color ? "text-notes-data" : "notes-data", n = this.map.getSource(t)._data, o = n.features, r = 0; r0) {
                                                                                                                                                                var t = window.isMobile ? 50 : {
                                                                                                                                                                    left: 400,
                                                                                                                                                                    right: 50,
                                                                                                                                                                    top: 50,
                                                                                                                                                                    bottom: 50
                                                                                                                                                                };
                                                                                                                                                                this.panToShape(e.features[0].geometry, t)
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "panToRegions",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = window.isMobile ? 50 : {
                                                                                                                                                                    left: 400,
                                                                                                                                                                    right: 50,
                                                                                                                                                                    top: 50,
                                                                                                                                                                    bottom: 50
                                                                                                                                                                },
                                                                                                                                                                n = e.flatMap((function(e) {
                                                                                                                                                                    return e.features
                                                                                                                                                                })).map((function(e) {
                                                                                                                                                                    return e.geometry
                                                                                                                                                                }));
                                                                                                                                                            this.panToShapes(n, t)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "panToLatLng",
                                                                                                                                                        value: function(e, t) {
                                                                                                                                                            this.map.panTo([t, e])
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "panToLatLngZoom",
                                                                                                                                                        value: function(e, t) {
                                                                                                                                                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                                                                                                                                            this.map.flyTo({
                                                                                                                                                                center: [t, e],
                                                                                                                                                                zoom: n
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "panToPolygon",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                                                                                                                                                n = new mapboxgl.LngLatBounds;
                                                                                                                                                            e.forEach((function(e) {
                                                                                                                                                                return n.extend([e.lng, e.lat])
                                                                                                                                                            })), this.map.fitBounds(n, {
                                                                                                                                                                padding: t
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "panToShape",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                                                                                                                                                n = new mapboxgl.LngLatBounds;
                                                                                                                                                            "Polygon" === e.type ? e.coordinates[0].forEach((function(e) {
                                                                                                                                                                return n.extend(e)
                                                                                                                                                            })) : "MultiPolygon" === e.type ? e.coordinates.forEach((function(e) {
                                                                                                                                                                return e[0].forEach((function(e) {
                                                                                                                                                                    return n.extend(e)
                                                                                                                                                                }))
                                                                                                                                                            })) : console.error("Cannot pan to shape: " + e.type), this.map.fitBounds(n, {
                                                                                                                                                                padding: t
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "panToShapes",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                                                                                                                                                n = new mapboxgl.LngLatBounds;
                                                                                                                                                            e.forEach((function(e) {
                                                                                                                                                                "Polygon" === e.type ? e.coordinates[0].forEach((function(e) {
                                                                                                                                                                    return n.extend(e)
                                                                                                                                                                })) : "MultiPolygon" === e.type ? e.coordinates.forEach((function(e) {
                                                                                                                                                                    return e[0].forEach((function(e) {
                                                                                                                                                                        return n.extend(e)
                                                                                                                                                                    }))
                                                                                                                                                                })) : console.error("Cannot pan to shape: " + e.type)
                                                                                                                                                            })), this.map.fitBounds(n, {
                                                                                                                                                                padding: t
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setRegionsVisible",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = e ? "visible" : "none";
                                                                                                                                                            b.th.showRegionPolygons && this.map.setLayoutProperty(ae, "visibility", t), b.th.showSubregionPolygons && this.map.setLayoutProperty(ce, "visibility", t), this.map.setLayoutProperty(se, "visibility", t), this.map.setLayoutProperty(le, "visibility", t), b.th.subregionsEnabled && (this.map.setLayoutProperty(ue, "visibility", t), this.map.setLayoutProperty(de, "visibility", t))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "enableRouteEditor",
                                                                                                                                                        value: function() {
                                                                                                                                                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                                                                                                                                                            this.routeToolControl.enableRouteTool(e), e && this.routeToolControl.editExistingRoute(e)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "disableRouteEditor",
                                                                                                                                                        value: function() {
                                                                                                                                                            this.routeToolControl.disableRouteTool()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setRoutesVisible",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            this.map.setFilter(he, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), this.map.setFilter(me, e, {
                                                                                                                                                                validate: !1
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setSharedRouteVisible",
                                                                                                                                                        value: function() {
                                                                                                                                                            this.map.setFilter(he, ["==", ["get", "id"], "shared-route"], {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), this.map.setFilter(me, ["==", ["get", "id"], "shared-route"], {
                                                                                                                                                                validate: !1
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "setNewRouteVisible",
                                                                                                                                                        value: function() {
                                                                                                                                                            this.map.setFilter(he, ["==", ["get", "id"], "_TEMP"], {
                                                                                                                                                                validate: !1
                                                                                                                                                            }, {
                                                                                                                                                                validate: !1
                                                                                                                                                            }), this.map.setFilter(me, ["==", ["get", "id"], "_TEMP"], {
                                                                                                                                                                validate: !1
                                                                                                                                                            })
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "createRoute",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = this.map.getSource("routes-data")._data,
                                                                                                                                                                n = {
                                                                                                                                                                    id: e.id,
                                                                                                                                                                    type: "Feature",
                                                                                                                                                                    geometry: {
                                                                                                                                                                        type: "LineString",
                                                                                                                                                                        coordinates: e.waypoints.map((function(e) {
                                                                                                                                                                            return [e.x, e.y]
                                                                                                                                                                        }))
                                                                                                                                                                    },
                                                                                                                                                                    properties: {
                                                                                                                                                                        id: e.id,
                                                                                                                                                                        "line-color": e.color,
                                                                                                                                                                        "line-width": 4
                                                                                                                                                                    }
                                                                                                                                                                };
                                                                                                                                                            t.features.push(n), this.map.getSource("routes-data").setData(t)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "updateRoute",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            var t = this.map.getSource("routes-data")._data;
                                                                                                                                                            t.features.forEach((function(n, o) {
                                                                                                                                                                n.properties.id === e.id && (t.features[o] = {
                                                                                                                                                                    type: "Feature",
                                                                                                                                                                    properties: {
                                                                                                                                                                        id: e.id,
                                                                                                                                                                        "line-color": e.color,
                                                                                                                                                                        "line-width": 4
                                                                                                                                                                    },
                                                                                                                                                                    geometry: {
                                                                                                                                                                        type: "LineString",
                                                                                                                                                                        coordinates: e.waypoints.map((function(e) {
                                                                                                                                                                            return [e.x, e.y]
                                                                                                                                                                        }))
                                                                                                                                                                    }
                                                                                                                                                                })
                                                                                                                                                            })), this.map.getSource("routes-data").setData(t)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        key: "deleteRoute",
                                                                                                                                                        value: function(e) {
                                                                                                                                                            for (var t = this.map.getSource("routes-data")._data, n = t.features, o = 0; o0) {
                                                                                                                                                                var n = e.locationIds,
                                                                                                                                                                    o = Number.parseInt(n[0]);
                                                                                                                                                                store.dispatch(u.cq.hideAllCategories()), store.dispatch(d.cq.setSearchResults({
                                                                                                                                                                    locations: n,
                                                                                                                                                                    notes: []
                                                                                                                                                                })), window.mapManager.triggerMarkerClick(o, {
                                                                                                                                                                    offset: [0, 150]
                                                                                                                                                                })
                                                                                                                                                            } else if (e.categoryIds && e.regionIds) {
                                                                                                                                                                for (var r = e.categoryIds.reduce((function(e, t) {
                                                                                                                                                                        return e[t] = !0, e
                                                                                                                                                                    }), {}), i = e.regionIds.reduce((function(e, t) {
                                                                                                                                                                        return e[t] = !0, e
                                                                                                                                                                    }), {}), a = e.tagIds && e.tagIds.length ? e.tagIds[0] : null, s = store.getState().map.locations, l = [], c = s.length, p = 0; p1 && void 0 !== arguments[1] ? arguments[1] : null, n = document.createElement("div"); n.className = "marker player-location-marker";
                                                                                                                                                                    var o = document.createElement("div"); o.className = "player-location-marker-icon", o.style.transform = "rotate(".concat(t, "deg)"), n.appendChild(o), this.playerMarker = new mapboxgl.Marker({
                                                                                                                                                                        element: n,
                                                                                                                                                                        anchor: "center"
                                                                                                                                                                    }).setLngLat(e).addTo(this.map)
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setPlayerMarkerPosition",
                                                                                                                                                                value: function(e, t) {
                                                                                                                                                                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                                                                                                                                                        o = arguments.length > 3 ? arguments[3] : void 0,
                                                                                                                                                                        r = (0, S.CC)(e, t, _.LB[window.mapData.map.id]);
                                                                                                                                                                    if (this.playerMarker ? (this.playerMarker.setLngLat(r), null !== n && (this.playerMarker.getElement().children[0].style.transform = "rotate(".concat(n, "deg)"))) : this.addPlayerMarker(r, n), o && this.focusOnPlayerMarker(), this.playerTrailEnabled && this.addPlayerTrailMarker(r), this.playerFollowingEnabled) {
                                                                                                                                                                        var i = this.map.project(r),
                                                                                                                                                                            a = this.map._containerDimensions(),
                                                                                                                                                                            s = a[0],
                                                                                                                                                                            l = a[1],
                                                                                                                                                                            c = s / 2 - .1 * s,
                                                                                                                                                                            u = s / 2 + .1 * s,
                                                                                                                                                                            d = l / 2 - .1 * l,
                                                                                                                                                                            p = l / 2 + .1 * l;
                                                                                                                                                                        (i.xu || i.yp) && this.focusOnPlayerMarker()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setPlayerTrailEnabled",
                                                                                                                                                                value: function(e) {
                                                                                                                                                                    this.playerTrailEnabled = e, this.playerTrailMarkers.forEach((function(e) {
                                                                                                                                                                        return e.remove()
                                                                                                                                                                    })), this.playerTrailMarkers = []
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setPlayerFollowingEnabled",
                                                                                                                                                                value: function(e) {
                                                                                                                                                                    this.playerFollowingEnabled = e, this.playerMarker && this.focusOnPlayerMarker()
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "addPlayerTrailMarker",
                                                                                                                                                                value: function(e) {
                                                                                                                                                                    var t = document.createElement("div");
                                                                                                                                                                    if (t.className = "marker player-trail-marker", this.playerTrailMarkers.length > 100) {
                                                                                                                                                                        var n = this.playerTrailMarkers.splice(0, 1)[0];
                                                                                                                                                                        n.setLngLat(e), this.playerTrailMarkers.push(n)
                                                                                                                                                                    } else {
                                                                                                                                                                        var o = new mapboxgl.Marker({
                                                                                                                                                                            clickable: !1,
                                                                                                                                                                            element: t,
                                                                                                                                                                            anchor: "center"
                                                                                                                                                                        }).setLngLat(e).addTo(this.map);
                                                                                                                                                                        this.playerTrailMarkers.push(o)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setPlayerMarkerInactive",
                                                                                                                                                                value: function() {
                                                                                                                                                                    this.playerMarker && this.playerMarker.getElement().classList.add("inactive")
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setPlayerMarkerActive",
                                                                                                                                                                value: function() {
                                                                                                                                                                    this.playerMarker && this.playerMarker.getElement().classList.remove("inactive")
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "focusOnPlayerMarker",
                                                                                                                                                                value: function() {
                                                                                                                                                                    this.map.panTo(this.playerMarker.getLngLat())
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setExternalDataSimple",
                                                                                                                                                                value: function(e, t) {
                                                                                                                                                                    this.setExternalData({
                                                                                                                                                                        type: "FeatureCollection",
                                                                                                                                                                        features: e.map((function(e) {
                                                                                                                                                                            return {
                                                                                                                                                                                type: "Feature",
                                                                                                                                                                                properties: {},
                                                                                                                                                                                geometry: {
                                                                                                                                                                                    type: "Point",
                                                                                                                                                                                    coordinates: e
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }))
                                                                                                                                                                    }, t)
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "setExternalData",
                                                                                                                                                                value: function(e, t) {
                                                                                                                                                                    var n = this;
                                                                                                                                                                    if (t) {
                                                                                                                                                                        var o = _.LB[window.mapData.map.id];
                                                                                                                                                                        if (!o) throw new Error("No projection available for " + window.mapData.map.title);
                                                                                                                                                                        e.features.forEach((function(e, t) {
                                                                                                                                                                            if ("Point" === e.geometry.type) {
                                                                                                                                                                                var n = e.geometry.coordinates,
                                                                                                                                                                                    r = (0, S.CC)(n[0], n[1], o);
                                                                                                                                                                                e.geometry.coordinates[0] = r.lng, e.geometry.coordinates[1] = r.lat
                                                                                                                                                                            } else if ("Polygon" === e.geometry.type) {
                                                                                                                                                                                var i = e.geometry.coordinates;
                                                                                                                                                                                e.geometry.coordinates = i.map((function(e) {
                                                                                                                                                                                    return e.map((function(e) {
                                                                                                                                                                                        var t = (0, S.CC)(e[0], e[1], o);
                                                                                                                                                                                        return [t.lng, t.lat]
                                                                                                                                                                                    }))
                                                                                                                                                                                }))
                                                                                                                                                                            }
                                                                                                                                                                            e.properties || (e.properties = {}), e.properties.id = t
                                                                                                                                                                        }))
                                                                                                                                                                    }
                                                                                                                                                                    if (this.map.getSource("external-data") ? this.map.getSource("external-data").setData(e) : this.map.addSource("external-data", {
                                                                                                                                                                            type: "geojson",
                                                                                                                                                                            data: e
                                                                                                                                                                        }), !this.map.getLayer(we) && (this.map.addLayer({
                                                                                                                                                                            id: we,
                                                                                                                                                                            type: "circle",
                                                                                                                                                                            source: "external-data",
                                                                                                                                                                            filter: ["==", "$type", "Point"],
                                                                                                                                                                            paint: {
                                                                                                                                                                                "circle-color": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "circle-color",
                                                                                                                                                                                    default: "#46B2CD"
                                                                                                                                                                                },
                                                                                                                                                                                "circle-opacity": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "circle-opacity",
                                                                                                                                                                                    default: 1
                                                                                                                                                                                },
                                                                                                                                                                                "circle-stroke-color": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "circle-stroke-color",
                                                                                                                                                                                    default: "#FFFFFF"
                                                                                                                                                                                },
                                                                                                                                                                                "circle-stroke-width": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "circle-stroke-width",
                                                                                                                                                                                    default: 1
                                                                                                                                                                                },
                                                                                                                                                                                "circle-stroke-opacity": 1,
                                                                                                                                                                                "circle-radius": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "circle-radius",
                                                                                                                                                                                    default: 4
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }), this.map.addLayer({
                                                                                                                                                                            id: "external-polygons",
                                                                                                                                                                            type: "fill",
                                                                                                                                                                            source: "external-data",
                                                                                                                                                                            filter: ["==", "$type", "Polygon"],
                                                                                                                                                                            paint: {
                                                                                                                                                                                "fill-color": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "fill-color",
                                                                                                                                                                                    default: "#46B2CD"
                                                                                                                                                                                },
                                                                                                                                                                                "fill-opacity": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "fill-opacity",
                                                                                                                                                                                    default: .5
                                                                                                                                                                                },
                                                                                                                                                                                "fill-outline-color": {
                                                                                                                                                                                    type: "identity",
                                                                                                                                                                                    property: "fill-outline-color",
                                                                                                                                                                                    default: "#46B2CD"
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }), De)) {
                                                                                                                                                                        var r = new mapboxgl.Popup({
                                                                                                                                                                                closeButton: !1,
                                                                                                                                                                                closeOnClick: !1,
                                                                                                                                                                                anchor: "left",
                                                                                                                                                                                offset: b.th.tooltipOffset,
                                                                                                                                                                                className: "mb-marker-tooltip d-none"
                                                                                                                                                                            }).addTo(this.map),
                                                                                                                                                                            i = null;
                                                                                                                                                                        this.map.on("mousemove", we, function(e) {
                                                                                                                                                                            return function(t) {
                                                                                                                                                                                var n = t.features[0].properties.id;
                                                                                                                                                                                if (i !== n) {
                                                                                                                                                                                    i = n;
                                                                                                                                                                                    var o = t.features[0].properties.title;
                                                                                                                                                                                    if (o) {
                                                                                                                                                                                        var r = t.features[0].geometry.coordinates;
                                                                                                                                                                                        e.options.offset = [3, -3], e.setLngLat(r).setHTML(o).removeClassName("d-none")
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }(r));
                                                                                                                                                                        this.map.on("mouseleave", we, function(e) {
                                                                                                                                                                            return function(t) {
                                                                                                                                                                                n.map.getCanvas().style.cursor = "", e.addClassName("d-none"), i = null
                                                                                                                                                                            }
                                                                                                                                                                        }(r))
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }, {
                                                                                                                                                                key: "enable3DMode",
                                                                                                                                                                value: function() {
                                                                                                                                                                    var e = window.tb,
                                                                                                                                                                        t = store.getState().map.locationsByCategory[9630],
                                                                                                                                                                        n = null,
                                                                                                                                                                        o = function(e) {
                                                                                                                                                                            var t, o, r = e.detail,
                                                                                                                                                                                i = r.selected;
                                                                                                                                                                            if (n = i ? r : null, console.log("onSelectionChanged: " + i, r), n) {
                                                                                                                                                                                var a = store.getState().map.locationsById[n.locationId],
                                                                                                                                                                                    s = document.createElement("div");
                                                                                                                                                                                s.id = "modal-info-panel";
                                                                                                                                                                                var l = '\n\
                                                                                                                                                                                n\ n\ n
                                                                                                                                                                                    '.concat(a.title,'\
                                                                                                                                                                                n\ n ').concat(window.md&&window.md.render(a.description),'\
                                                                                                                                                                                n\ n\ n Ã—\ n\ n\ n ');s.innerHTML=l,document.getElementById("app").appendChild(s),window.hideModalInfoPanel=function(){var e,t;n=null;var o=document.getElementById("modal-info-panel");null===(t=null===(e=o)||void 0===e?void 0:e.parentNode)||void 0===t||t.removeChild(o)}}else{var c=document.getElementById("modal-info-panel");null===(o=null===(t=c)||void 0===t?void 0:t.parentNode)||void 0===o||o.removeChild(c)}};t.forEach((function(t){var n=t.z||0,r=e.sphere({opacity:.7,color:15724527,material:"MeshToonMaterial",radius:5,anchor:"center",tooltip:!0}).setCoords([t.longitude,t.latitude,6e3+2*n]);r.locationId=t.id,r.addTooltip(t.title,!0),r.addEventListener("SelectedChange",o,!1);var i=document.createElement("div");i.className="star-label",i.textContent=t.title,r.addLabel(i,!0,r.anchor,0),e.add(r)})),this.map.easeTo({pitch:45,zoom:this.map.getZoom()})}},{key:"disable3DMode",value:function(){var e=this;window.tb.clear(null,!0).then((function(){window.tb.update(),e.map.easeTo({pitch:0,zoom:e.map.getZoom()})}))}},{key:"add3DTooltip",value:function(){}}]),e}());window.document.addEventListener("showLocationIds",(function(e){var t=e.detail.locationIds;if(t.length>0){var n=Number.parseInt(t[0]);store.dispatch(u.cq.hideAllCategories()),store.dispatch(d.cq.setSearchResults({locations:t,notes:[]})),window.mapManager.triggerMarkerClick(n,{offset:[0,150]})}}),!1),window.document.addEventListener("setFilter",(function(e){var t=e.detail;window.mapManager.applyFilter(t)}),!1),window.document.addEventListener("setLocationFound",(function(e){var t=e.detail.locationId,n=e.detail.found;t&&window.mapManager.markLocationAsFound(t,n)}),!1),window.document.addEventListener("setExternalData",(function(e){var t=e.detail;console.log("Loading external data: ",t),window.mapManager.setExternalData({type:"FeatureCollection",features:t.data},t.reproject)}),!1),window.addEventListener("message",(function(e){var t=e.data;switch(t.type){case"SET_EXTERNAL_DATA":console.log("Loading external data: ",t),window.mapManager.setExternalData({type:"FeatureCollection",features:t.data},t.reproject);break;default:console.warn("Unknown message type:",t)}}))},5457:(e,t,n)=>{"use strict";function o(e,t){for(var n=0;nr});const r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.onClick=t}var t,n,r;return t=e,(n=[{key:"onAdd",value:function(e){var t=this;this.map=e,this.container=document.createElement("div"),this.container.className="mapboxgl-ctrl mg-map-control";var n=document.createElement("i");return n.className="icon ion-md-create mg-control-image-create",this.container.appendChild(n),this.container.setAttribute("id","add-note-control"),this.container.setAttribute("data-placement","left"),window.user?(window.user.hasPro||this.container.setAttribute("title","Upgrade to PRO to add more notes"),this.container.addEventListener("click",(function(){window.user.hasPro||window.store.getState().user.notes.length<5?t.onClick():$(t.container).tooltip("show")}))):(this.container.setAttribute("title","Login to add notes to the map"),this.container.addEventListener("click",(function(){$(t.container).tooltip("show")}))),this.container}},{key:"onRemove",value:function(){this.container.parentNode.removeChild(this.container),this.map=void 0}}])&&o(t.prototype,n),r&&o(t,r),e}()},50111:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var o=n(67294),r=n(73935),i=n(5794),a=n(78299),s=n(30294),l=n(10916),c=n(20252),u=n(18446);function d(e,t){for(var n=0;n0)){t.currentPosition=o.lngLat,n.setLngLat(o.lngLat).addTo(e);var r=document.getElementById("context-menu-add-note");if(window.user?window.user.hasPro||window.store.getState().user.notes.length<5?(r.removeAttribute("title"),r.setAttribute("disabled","false"),r.classList.remove("disabled")):(r.setAttribute("title","Upgrade to PRO to add more notes"),r.setAttribute("disabled","true"),r.classList.add("disabled"),$(r).tooltip()):(r.setAttribute("disabled","true"),r.classList.add("disabled"),$(r).tooltip()),80===window.game.id&&l.LB[window.mapData.map.id]){var i=document.getElementById("context-menu-coordinate-display"),a=(0,s.gA)(t.currentPosition.lat,t.currentPosition.lng,l.LB[window.mapData.map.id]),c=Math.round(a.x),u=Math.round(a.y);i.textContent="Game Coords: [".concat(c,", ").concat(u,"]")}if(window.isEditor&&151===window.game.id){var d=(0,l.D1)(window.mapData.map.id,t.currentPosition.lng,t.currentPosition.lat),p=document.getElementById("context-menu-coordinate-display");if(d){var f=(0,s.gA)(t.currentPosition.lat,t.currentPosition.lng,d),g=Math.round(f.x),h=Math.round(f.y);p.textContent="Game Coords: [".concat(g,", ").concat(h,"]")}else p.textContent="Game Coords: [N/A]"}}})),document.createElement("div")}},{key:"onRemove",value:function(){this.map.off("contextmenu"),this.map=null,this._container=null,this.currentPosition=null}},{key:"createOptionsHtml",value:function(e){var t=this,n=[[{id:"context-menu-add-note",title:"Add Note",tooltip:window.user?void 0:"Login to add notes to the map",onClick:function(n){window.user&&window.user.hasPro||window.user&&window.store.getState().user.notes.length<5?(t.addNote(t.currentPosition),e.remove()):$(n.target).tooltip("show")}}]];window.config.newSuggestionsEnabled&&n[0].push({id:"context-menu-add-suggestion",title:"Suggest Location",tooltip:window.user?void 0:"Login to submit suggestions",onClick:function(){e.remove(),t.addSuggestion(t.currentPosition)}}),n.push([{id:"",title:"Copy Map View Url",tooltip:void 0,onClick:function(){e.remove();var n=t.map.getZoom(),o=t.currentPosition.lat,r=t.currentPosition.lng,a="".concat(window.mapUrl,"?x=").concat(r,"&y=").concat(o,"&zoom=").concat(n);(0,i.i)(a),c.Z.show("Direct map url copied!",a)}}]),75===window.game.id?n.push([{id:"",title:"Copy Teleport Coordinates",tooltip:void 0,onClick:function(){e.remove();var n=(0,s.gA)(t.currentPosition.lat,t.currentPosition.lng,l.LB[window.mapData.map.id]),o=Math.round(n.x),r=Math.round(n.y);(0,i.i)("TeleportPlayer ".concat(o," ").concat(r)),c.Z.show("Coordinates Copied!","TeleportPlayer ".concat(o," ").concat(r))}}]):80===window.game.id&&l.LB[window.mapData.map.id]?n.push([{id:"context-menu-coordinate-display",title:"",tooltip:void 0,onClick:function(){e.remove();var n=(0,s.gA)(t.currentPosition.lat,t.currentPosition.lng,l.LB[window.mapData.map.id]),o=Math.round(n.x),r=Math.round(n.y);(0,i.i)("".concat(o," ").concat(r)),c.Z.show("Coordinates Copied!","".concat(o," ").concat(r))}}]):window.isEditor&&151===window.game.id?n.push([{id:"context-menu-coordinate-display",title:"",tooltip:void 0,onClick:function(){e.remove()}}]):window.isSupereditor&&n.push([{id:"",title:"Move Location Here",tooltip:void 0,onClick:function(){e.remove();var n=t.currentPosition.lat,i=t.currentPosition.lng,a=document.getElementById("select-location-modal");r.render(o.createElement(u.Z,{newPosition:{lat:n,lng:i},onSelectLocation:function(e){},close:function(){return r.unmountComponentAtNode(a)}}),a)}}]);var a=document.createElement("ul");a.className="map-context-menu";for(var d=0;d{"use strict";n.d(t,{Z:()=>s});var o=n(29456),r=n(79928),i=n(41136);function a(e,t){for(var n=0;n1){for(var t=this.calculateLineDistance(e),n=this.config.speeds,o="",r=0;rDistance: ".concat(t,"m\
                                                                                                                                                                                n Travel Time: ").concat(o||" [To Be Determined]
                                                                                                                                                                                ","\
                                                                                                                                                                                n ")}else this.distanceInfoEl.innerText="
                                                                                                                                                                                Click the map to add points and calculate your travel time "}},{key:"
                                                                                                                                                                                calculateLineDistance ",value:function(e){if(this.config.useHaversine){for(var t=0,n=0;n0&&(e%=60*t),e<10?t+": 0 "+e:t+": "+e}}])&&a(t.prototype,n),s&&a(t,s),e}()},10953:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>i});var o=n(23035);function r(e,t){for(var n=0;n
                                                                                                                                                                                Install and enable NWMM Location Streaming to live track your in -game position.
                                                                                                                                                                                ").tooltip("
                                                                                                                                                                                show "),o.Z.setFollowingEnabled(!1),o.Z.disable();break;case"
                                                                                                                                                                                ON ":this.$container.classList.remove("
                                                                                                                                                                                disabled "),this.$image.src='data:image/svg+xml;utf8,%3Csvg xmlns="
                                                                                                                                                                                http: //www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 512 512"%3E%3Cpath d="M448 64L64 240.14h200a8 8 0 0 1 8 8V448z" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32"/%3E%3C/svg%3E%0A',$(this.$container).attr("data-original-title","Location tracking enabled
                                                                                                                                                                                    Not following player

                                                                                                                                                                                Click again to follow player position on the map automatically ").tooltip("
                                                                                                                                                                                show "),o.Z.enable(),o.Z.setFollowingEnabled(!1);break;case"
                                                                                                                                                                                ON_FOLLOWING ":this.$image.src='data:image/svg+xml;utf8,%3Csvg xmlns="
                                                                                                                                                                                http: //www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 512 512"%3E%3Cpath d="M480 32L32 240h240v240L480 32z" fill="currentColor"/%3E%3C/svg%3E%0A',$(this.$container).attr("data-original-title","Location tracking enabled
                                                                                                                                                                                    Following player

                                                                                                                                                                                Click to disable location tracking ").tooltip("
                                                                                                                                                                                show "),o.Z.setFollowingEnabled(!0)}}}])&&r(t.prototype,n),i&&r(t,i),e}()},1720:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;nr});const r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e),this.mapTypes=t,this.onMapTypeSelected=n}var t,n,r;return t=e,(n=[{key:"
                                                                                                                                                                                onAdd ",value:function(e){this.map=e,this.container=document.createElement("
                                                                                                                                                                                div "),this.container.id="
                                                                                                                                                                                map - type - control ",this.container.className="
                                                                                                                                                                                mapboxgl - ctrl mapboxgl - ctrl - group mapbox - ctrl - right - bottom mapboxgl - ctrl - group - horizontal ";for(var t=0;t{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;nr});const r=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e),this.clearRadiusOverlay=function(){n.radiusToolMarker.remove(),n.radiusToolMarker=null,n.container.classList.add("
                                                                                                                                                                                disabled "),n.map.off("
                                                                                                                                                                                zoom ",n.onMapZoom),n.disableRadiusTool()},this.onMapZoom=function(){var e=500/(35200/n.config.scale),t=Math.pow(2,n.map.getZoom())*e,o=n.radiusToolMarker.getElement();o.style.width="
                                                                                                                                                                                ".concat(t,"
                                                                                                                                                                                px "),o.style.height="
                                                                                                                                                                                ".concat(t,"
                                                                                                                                                                                px ")},this.config=t}var t,n,r;return t=e,(n=[{key:"
                                                                                                                                                                                onAdd ",value:function(e){var t=this;this.map=e,this.radiusPanelEl=document.getElementById("
                                                                                                                                                                                radius - info - panel "),this.container=document.createElement("
                                                                                                                                                                                div "),this.container.className="
                                                                                                                                                                                mapboxgl - ctrl mg - map - control disabled ";var n=document.createElement("
                                                                                                                                                                                img ");return n.src='data:image/svg+xml;utf8,  ',n.className="
                                                                                                                                                                                mg - control - radius - tool - icon ",this.container.appendChild(n),this.container.setAttribute("
                                                                                                                                                                                id ","
                                                                                                                                                                                radius - tool - control "),this.container.addEventListener("
                                                                                                                                                                                click ",(function(){t.container.classList.toggle("
                                                                                                                                                                                disabled ")?t.disableRadiusTool():t.enableRadiusTool()})),document.getElementById("
                                                                                                                                                                                radius - clear - button ").addEventListener("
                                                                                                                                                                                click ",this.clearRadiusOverlay),this.container}},{key:"
                                                                                                                                                                                onRemove ",value:function(){this.container.parentNode.removeChild(this.container),this.map=void 0,this.distancePanelEl=null,this.distanceInfoEl=null,this.radiusPanelEl=null}},{key:"
                                                                                                                                                                                enableRadiusTool ",value:function(){if(this.radiusPanelEl.classList.add("
                                                                                                                                                                                active "),this.radiusToolMarker)this.radiusToolMarker.setDraggable(!0);else{var e=500/(35200/this.config.scale),t=Math.pow(2,this.map.getZoom())*e,n=this.map.getCenter(),o=document.createElement("
                                                                                                                                                                                div ");o.className="
                                                                                                                                                                                radius - tool - marker ",o.style.width="
                                                                                                                                                                                ".concat(t,"
                                                                                                                                                                                px "),o.style.height="
                                                                                                                                                                                ".concat(t,"
                                                                                                                                                                                px ");var r=document.createElement("
                                                                                                                                                                                img ");r.className="
                                                                                                                                                                                radius - tool - image ",r.src=" / images / games / tarkov / radius.svg ",r.style.width="
                                                                                                                                                                                100 % ",r.style.height="
                                                                                                                                                                                100 % ",o.appendChild(r),this.radiusToolMarker=new mapboxgl.Marker({draggable:!0,element:o,anchor:"
                                                                                                                                                                                center "}).setLngLat(n).addTo(this.map)}this.map.on("
                                                                                                                                                                                zoom ",this.onMapZoom)}},{key:"
                                                                                                                                                                                disableRadiusTool ",value:function(){this.radiusToolMarker&&this.radiusToolMarker.setDraggable(!1),this.radiusPanelEl.classList.remove("
                                                                                                                                                                                active ")}}])&&o(t.prototype,n),r&&o(t,r),e}()},6871:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>l});var o=n(8806),r=n(41136),i=n(818);function a(e,t){for(var n=0;n0&&void 0!==arguments[0]?arguments[0]:null;this.isEnabled||(this.isEnabled=!0,this.previousWaypointCount=-1,this.map.on("
                                                                                                                                                                                draw.render ",this.onRender),this.map.on("
                                                                                                                                                                                draw.modechange ",this.onModeChanged)),r.Z.enableRoutesTool(this,this.drawRouteModeOptions),t?(e=t,o.Z.update(t)):(e={id:"
                                                                                                                                                                                _TEMP ",title:"
                                                                                                                                                                                ",description:null,waypoints:[],color:"
                                                                                                                                                                                #fbb03b "},o.Z.update(e)),this.container.classList.remove("
                                                                                                                                                                                disabled "),this.onEnabled(!0),store.dispatch(i.cq.enableRouteAddMode(!0)),store.dispatch(i.cq.selectRoute(e)),this.updateRouteInfo()}},{key:"
                                                                                                                                                                                disableRouteTool ",value:function(){this.map.setFilter("
                                                                                                                                                                                route - lines ",!0),this.map.setFilter("
                                                                                                                                                                                route - arrows ",!0),this.map.getContainer().classList.remove("
                                                                                                                                                                                mouse - add "),this.isEnabled=!1,this.container.classList.add("
                                                                                                                                                                                disabled "),this.onEnabled(!1),store.dispatch(i.cq.enableRouteAddMode(!1)),store.dispatch(i.cq.selectRoute(null)),r.Z.disableRoutesTool(),this.map.off("
                                                                                                                                                                                draw.render ",this.onRender),this.map.off("
                                                                                                                                                                                draw.modechange ",this.onModeChanged),o.Z.update({id:"
                                                                                                                                                                                _TEMP ",title:"
                                                                                                                                                                                ",description:null,waypoints:[],color:"
                                                                                                                                                                                #fbb03b "})}},{key:"
                                                                                                                                                                                editExistingRoute ",value:function(e){var t=this.map.getSource("
                                                                                                                                                                                routes - data ")._data;r.Z.setRoutesData(t),o.Z.update(e);var n=t.features[0];if(n.geometry.coordinates.length>0){var i=n.geometry.coordinates[n.geometry.coordinates.length-1];r.Z.editRoute({featureId:e.id,from:{type:"
                                                                                                                                                                                Point ",coordinates:i}})}else r.Z.startAddingRoute()}},{key:"
                                                                                                                                                                                updateRouteInfo ",value:function(){store.dispatch(i.cq.selectRoute(Object.assign({},o.Z.getCurrentRoute())))}},{key:"
                                                                                                                                                                                isAdded ",value:function(){return!!this.map}}])&&a(t.prototype,n),s&&a(t,s),e}();s.CATEGORY_ID_WAYPOINT=-1;const l=s},42604:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>i});var o=n(97118);function r(e,t){for(var n=0;n{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;nr});const r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e),this.onClick=t}var t,n,r;return t=e,(n=[{key:"
                                                                                                                                                                                onAdd ",value:function(e){var t=this;this.map=e,this.container=document.createElement("
                                                                                                                                                                                div "),this.container.className="
                                                                                                                                                                                mapboxgl - ctrl mg - map - control disabled ";var n=document.createElement("
                                                                                                                                                                                i ");return n.className="
                                                                                                                                                                                mg - control - 3 d ",this.container.appendChild(n),this.container.addEventListener("
                                                                                                                                                                                click ",(function(){var e=t.container.classList.toggle("
                                                                                                                                                                                disabled ");t.onClick(!e)})),this.container}},{key:"
                                                                                                                                                                                onRemove ",value:function(){this.container.parentNode.removeChild(this.container),this.map=void 0}}])&&o(t.prototype,n),r&&o(t,r),e}()},80508:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>i});var o=function(e){setTimeout((function(){e.map&&e.map.doubleClickZoom&&e._ctx&&e._ctx.store&&e._ctx.store.getInitialConfigValue&&e._ctx.store.getInitialConfigValue("
                                                                                                                                                                                doubleClickZoom ")&&e.map.doubleClickZoom.enable()}),0)},r=function(e){setTimeout((function(){e.map&&e.map.doubleClickZoom&&e.map.doubleClickZoom.disable()}),0)};const i={onSetup:function(e){var t=this.newFeature({type:"
                                                                                                                                                                                Feature ",properties:{},geometry:{type:"
                                                                                                                                                                                Polygon ",coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),r(this),this.updateUIClasses({mouse:"
                                                                                                                                                                                add "}),this.setActionableState({trash:!0}),{rectangle:t}},onTap:function(e,t){e.startPoint&&this.onMouseMove(e,t),this.onClick(e,t)},onClick:function(e,t){e.startPoint&&e.startPoint[0]!==t.lngLat.lng&&e.startPoint[1]!==t.lngLat.lat&&(this.updateUIClasses({mouse:"
                                                                                                                                                                                pointer "}),e.endPoint=[t.lngLat.lng,t.lngLat.lat],this.changeMode("
                                                                                                                                                                                simple_select ",{featuresId:e.rectangle.id}));var n=[t.lngLat.lng,t.lngLat.lat];e.startPoint=n},onMouseMove:function(e,t){e.startPoint&&(e.rectangle.updateCoordinate("
                                                                                                                                                                                0.0 ",e.startPoint[0],e.startPoint[1]),e.rectangle.updateCoordinate("
                                                                                                                                                                                0.1 ",t.lngLat.lng,e.startPoint[1]),e.rectangle.updateCoordinate("
                                                                                                                                                                                0.2 ",t.lngLat.lng,t.lngLat.lat),e.rectangle.updateCoordinate("
                                                                                                                                                                                0.3 ",e.startPoint[0],t.lngLat.lat),e.rectangle.updateCoordinate("
                                                                                                                                                                                0.4 ",e.startPoint[0],e.startPoint[1]))},onKeyUp:function(e,t){if(27===t.keyCode)return this.changeMode("
                                                                                                                                                                                simple_select ")},onStop:function(e){o(this),this.updateUIClasses({mouse:"
                                                                                                                                                                                none "}),this.activateUIButton(),void 0!==this.getFeature(e.rectangle.id)&&(e.rectangle.removeCoordinate("
                                                                                                                                                                                0.4 "),e.rectangle.isValid()?this.map.fire("
                                                                                                                                                                                draw.create ",{features:[e.rectangle.toGeoJSON()]}):(this.deleteFeature([e.rectangle.id],{silent:!0}),this.changeMode("
                                                                                                                                                                                simple_select ",{},{silent:!0})))},toDisplayFeatures:function(e,t,n){var o=t.properties.id===e.rectangle.id;return t.properties.active=o?"
                                                                                                                                                                                true ":"
                                                                                                                                                                                false ",o?e.startPoint?n(t):void 0:n(t)},onTrash:function(e){this.deleteFeature([e.rectangle.id],{silent:!0}),this.changeMode("
                                                                                                                                                                                simple_select ")}}},8396:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{ZP:()=>d});var o=n(41136),r=n(52886);function i(e,t){var n="
                                                                                                                                                                                undefined "!=typeof Symbol&&e[Symbol.iterator]||e["
                                                                                                                                                                                @ @iterator "];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("
                                                                                                                                                                                string "==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"
                                                                                                                                                                                Object "===n&&e.constructor&&(n=e.constructor.name);if("
                                                                                                                                                                                Map "===n||"
                                                                                                                                                                                Set "===n)return Array.from(e);if("
                                                                                                                                                                                Arguments "===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return a(e,t)}(e))||t&&e&&"
                                                                                                                                                                                number "==typeof e.length){n&&(e=n);var o=0,r=function(){};return{s:r,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:r}}throw new TypeError("
                                                                                                                                                                                Invalid attempt to iterate non - iterable instance.\nIn order to be iterable, non - array objects must have a[Symbol.iterator]() method.
                                                                                                                                                                                ")}var i,s=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){l=!0,i=e},f:function(){try{s||null==n.return||n.return()}finally{if(l)throw i}}}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n0&&u(t,e.line.coordinates[e.currentVertexPosition-1])||"
                                                                                                                                                                                backwards "===e.direction&&u(t,e.line.coordinates[e.currentVertexPosition+1]))return this.changeMode("
                                                                                                                                                                                simple_select ",{featureIds:[e.line.id]});this.updateUIClasses({mouse:"
                                                                                                                                                                                add "});var n=this.map.queryRenderedFeatures(t.point,{layers:l});if(n.length>0){var o,r=i(n);try{for(r.s();!(o=r.n()).done;){var a=o.value;if("
                                                                                                                                                                                locations - data "===a.source||"
                                                                                                                                                                                circle - locations - data "===a.source){if(this.options.onLocationSelected(a)){var s=a.geometry.coordinates[0],c=a.geometry.coordinates[1];e.line.updateCoordinate(e.currentVertexPosition,s,c),"
                                                                                                                                                                                forward "===e.direction&&(e.currentVertexPosition++,e.line.updateCoordinate(e.currentVertexPosition,s,c))}return}}}catch(e){r.e(e)}finally{r.f()}}else e.line.updateCoordinate(e.currentVertexPosition,t.lngLat.lng,t.lngLat.lat),"
                                                                                                                                                                                forward "===e.direction&&(e.currentVertexPosition++,e.line.updateCoordinate(e.currentVertexPosition,t.lngLat.lng,t.lngLat.lat),this.options.onArbitraryPointAdded(t.lngLat))}else e.line.coordinates.length>0&&(console.log("
                                                                                                                                                                                Removing coordinate @ "+e.currentVertexPosition,e),e.line.coordinates.length>e.currentVertexPosition&&e.currentVertexPosition--,e.line.removeCoordinate("
                                                                                                                                                                                ".concat(e.currentVertexPosition)),this.options.onLastPointDeleted())};const d=s},41136:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>u});var o=n(8396),r=n(80508);function i(e,t){for(var n=0;n{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>i});var o=n(96486);function r(e,t){for(var n=0;n{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;nr});var r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e)}var t,n,r;return t=e,r=[{key:"
                                                                                                                                                                                getWikiPage ",value:function(e,t){return this.getIgnAxios().request({url:"
                                                                                                                                                                                https: //mollusk.apis.ign.com/graphql?operationName=WikiPage",method:"GET",params:{variables:{slug:e,chapter:t},extensions:{persistedQuery:{version:1,sha256Hash:"b1bec3e39d370ca9b0b7d0075613efbef390d258944c9a04db27131548b2ef17"}}},headers:{"Content-Type":"application/json","apollographql-client-name":"kraken","x-apollo-operation-name":"WikiPage"}})}},{key:"searchForWikiPage",value:function(e,t){return this.getIgnAxios().request({url:"https://mollusk.apis.ign.com/graphql?operationName=WikiPageTitles",method:"GET",params:{variables:{slug:e,start:t},extensions:{persistedQuery:{version:1,sha256Hash:"898eb1953414810016147f893af5124ff1a02331d20100c9c36106493e70d6b4"}}},headers:{"Content-Type":"application/json","apollographql-client-name":"kraken","x-apollo-operation-name":"WikiPageTitles"}})}},{key:"getVideoPlayerProps",value:function(e){return this.getIgnAxios().request({url:"https://mollusk.apis.ign.com/graphql?operationName=VideoPlayerProps",method:"GET",params:{variables:{slug:e},extensions:{persistedQuery:{version:1,sha256Hash:"a9cea42762237b541faa9fa6c01e67de85b1eb7133ac33651e0772de7ad4d2c4"}}},headers:{"Content-Type":"application/json","apollographql-client-name":"kraken","x-apollo-operation-name":"VideoPlayerProps"}})}},{key:"getIgnAxios",value:function(){return e.ignAxios||(e.ignAxios=window.axios.create({transformRequest:function(e,t){delete t.common}})),e.ignAxios}}],(n=null)&&o(t.prototype,n),r&&o(t,r),e}()},23035:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=n(20252);function r(e,t){for(var n=0;n0&&void 0!==arguments[0])||arguments[0];this.$button.classList.remove("active"),this.teardownWebsocket(),this.isEnabled=!1,window.mapManager.setPlayerTrailEnabled(!1),o.Z.clearToastsImmediately(),e&&o.Z.show("Live location tracking disabled")}},{key:"setFollowingEnabled",value:function(e){window.mapManager.setPlayerFollowingEnabled(e)}},{key:"setupWebsocket",value:function(){return null!=this.socket&&this.socket.close(),this.hasReceivedFirstMessage=!1,this.socket=new WebSocket("wss://localhost.newworldminimap.com:42224/Location"),this.socket.onmessage=this.onMessageReceived,this.socket.onopen=this.onWebsocketOpened,this.socket.onclose=this.onWebsocketClosed,this.socket.onerror=this.onWebsocketError,!0}},{key:"teardownWebsocket",value:function(){var e;null===(e=this.socket)||void 0===e||e.close(),this.socket=null}},{key:"onMessageReceived",value:function(e){var t;try{t=JSON.parse(e.data)}catch(t){return void console.error("Location Tracking: Error - couldn't parse message: ".concat(e.data))}if("LOCAL_POSITION_UPDATE"===t.type){var n=t,o=(n.playerName,n.mapName,n.position);window.mapManager.setPlayerMarkerPosition(o[0],o[1],90-o[2],!this.hasReceivedFirstMessage),this.hasReceivedFirstMessage=!0}else if("PLAYER_DISCONNECT"===t.type){var r=t.playerId;console.log("Player disconnected: ".concat(r)),this.isConnected=!1}else console.warn("Unhanded Live Locations message: ".concat(e.data))}},{key:"onWebsocketOpened",value:function(e){this.isConnected=!0,window.mapManager.setPlayerMarkerActive(),o.Z.clearToasts()}},{key:"onWebsocketClosed",value:function(e){var t=this;this.isConnected=!1,window.mapManager.setPlayerMarkerInactive(),this.teardownWebsocket(),o.Z.showPersistent("Cannot connect to New World MiniMap. Is location streaming enabled?","Click here to retry connecting",(function(){o.Z.clearToastsImmediately(),setTimeout((function(){return t.setupWebsocket()}),100)})),console.warn("Websocket connection closed")}},{key:"onWebsocketError",value:function(e){console.error("ERROR: '".concat(e.message,"'"))}},{key:"test",value:function(){var e=Array(251).fill([]).map((function(e,t){return[6e3+2*t,5e3,30]}));e.push([6e3,4e3,30]),e.push([6050,3950,45]),e.push([6100,4100,46]),e.push([6200,4100,90]),e.push([6200,4100,90,!1]),e.push([6200,4100,90,!1]),e.push([6200,4100,90,!1]),e.push([6200,4100,90,!1]),e.push([6200,4100,90,!0]),e.push([6200,4200,180]),e.forEach((function(e,t){setTimeout((function(){window.mapManager.setPlayerMarkerPosition(e[0],e[1],e[2],0===t),!1===e[3]?window.mapManager.setPlayerMarkerInactive():!0===e[3]&&window.mapManager.setPlayerMarkerActive()}),500*t)}))}}],(n=null)&&r(t.prototype,n),i&&r(t,i),e}();i.isEnabled=!1,i.isConnected=!1,i.hasReceivedFirstMessage=!1,i.socket=null,i.state="OFF",window.LiveLocationService=i},15429:(e,t,n)=>{"use strict";n.d(t,{cq:()=>a,I6:()=>l});var o="HIVE:MAP:SET_ADD_MARKER_CONTROLS_VISIBLE",r="HIVE:MAP:SET_SELECTED_CATEGORY",i="HIVE:MAP:SET_SELECTED_GROUP",a={setAddMarkerControlsVisible:function(e){return{type:o,meta:{visible:e}}},setSelectedCategory:function(e){return{type:r,meta:{selectedCategory:e}}},setSelectedGroup:function(e){return{type:i,meta:{selectedGroup:e}}}},s={showAddMarkerControls:!1,selectedCategory:null,selectedGroup:null},l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case o:var n=t.meta.visible;return Object.assign(Object.assign({},e),{showAddMarkerControls:n});case r:return Object.assign(Object.assign({},e),{selectedCategory:t.meta.selectedCategory});case i:return Object.assign(Object.assign({},e),{selectedGroup:t.meta.selectedGroup});default:return e}}},97118:(e,t,n)=>{"use strict";n.d(t,{bB:()=>u,iw:()=>p,qg:()=>g,U7:()=>h,$U:()=>v,pp:()=>w,jG:()=>E,kj:()=>C,FS:()=>S,fC:()=>_,ds:()=>O,ko:()=>P,r8:()=>L,CR:()=>N,np:()=>R,ZA:()=>F,Gi:()=>D,cc:()=>A,Jo:()=>j,Tw:()=>B,cq:()=>H,I6:()=>re,wl:()=>ae});var o=n(96486),r=n(19486);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||l(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null==n)return;var o,r,i=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(o=n.next()).done)&&(i.push(o.value),!t||i.length!==t);a=!0);}catch(e){s=!0,r=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw r}}return i}(e,t)||l(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){if(e){if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n1&&void 0!==arguments[1]&&arguments[1];return{type:j,meta:{regionId:e,includeSubregions:t}}},setTagFilters:function(e,t){if(window.config.altMapSdk){var n={};return Object.entries(e).forEach((function(e){var t=s(e,2),o=t[0],r=t[1];n[o]=[r]})),{type:A,meta:{tagFilters:n,modifiedCategoryIds:t,legacyTagFilters:e}}}return{type:D,meta:{tagFilters:e,modifiedCategoryIds:t}}},setMultiTagFilters:function(e,t){return{type:A,meta:{tagFilters:e,modifiedCategoryIds:t}}},showSpecificLocations:function(e,t){return{type:B,meta:{locationIds:e,categoryIds:t}}},applyPreset:function(e,t){return{type:z,meta:{preset:e,additive:t}}},unapplyPreset:function(e){return{type:Z,meta:{preset:e}}},setActivePresets:function(e){return{type:U,meta:{activePresets:e}}},setTimersVisible:function(e){return{type:W,meta:{visible:e}}}},V=function(e){return e.latitude=parseFloat(e.latitude),e.longitude=parseFloat(e.longitude),e.media=e.media?e.media:[],e};r.Z.initializeMapState();var $=window.mapData,q={},G=$.locations.map((function(e){var t=V(e);return q[e.id]=t,t})),K=Object.keys($.categories).map((function(e){return parseInt(e,10)})),Y=K.reduce((function(e,t){return e[t]=[],e}),{}),X=function(e){return Object.assign(Object.assign({},Y),o.groupBy(e,(function(e){return e.category_id})))},Q={};80===window.game.id&&(Q={3605:[14,15,16,17],3606:[14,15,16,17],3607:[14,15,16,17],3653:[9,10,11,12,13],3654:[9,10,11,12,13],3672:[9,10,11,12,13],3686:[9,10,11,12,13],3689:[9,10,11,12,13]});var J={heatmapGroups:window.mapData.heatmapGroups,heatmapCategories:window.mapData.heatmapCategories,selectedHeatmap:null,isEditingHeatmap:!1,groups:window.mapData.groups,groupsById:window.mapData.groups.reduce((function(e,t){return e[t.id]=t,e}),{}),categories:$.categories,categoryIds:K,locations:G,locationsByCategory:X(G),locationsById:q,tags:window.mapData.tags,selectedLocation:r.Z.visibleLocationIds&&1===r.Z.visibleLocationIds.length?q[r.Z.visibleLocationIds[0]]:null,isEditingMarker:!1,newLocation:null,excludedLocations:[],specificallyIncludedLocations:[],includedTagId:null,tagFilters:{},multiTagFilters:Q,regionFilter:null,regions:window.mapData.regions,routesById:window.mapData.routes.reduce((function(e,t){return e[t.id]=t,e}),{}),routes:window.mapData.routes,selectedRoute:null,isEditingRoute:!1,isSavingRoute:!1,activePresets:{},timersVisible:146===window.game.id&&!window.isMobile&&!!window.user&&!window.studio};if(window.config.altMapSdk&&1===window.game.id&&window.config.initialTagFilters&&!(window.visibleCategories||window.visibleLocations||Object.keys(window.mapData.sharedNotes).length)){Object.entries(window.config.initialTagFilters).forEach((function(e){var t=s(e,2),n=t[0],o=t[1];Q[n]=[o]}));var ee=[],te=[],ne=J.categories,oe=J.locations.concat(J.excludedLocations).filter((function(e){var t=J.multiTagFilters[e.category_id];return 0===e.tags.length||!t||e.tags.some((function(e){return t.includes(e)}))?(ne[e.category_id].visible&&ee.push(e),!0):(te.push(e),!1)}));J.tagFilters=window.config.initialTagFilters,J.multiTagFilters=Q,J.specificallyIncludedLocations=ee,J.excludedLocations=te,J.locations=oe,J.locationsByCategory=X(oe)}var re=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:J,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case u:var n=t.meta.location,r=[].concat(a(e.locations),[n]),i=e.locationsById;return i[n.id]=n,Object.assign(Object.assign({},e),{locations:r,locationsByCategory:X(r),locationsById:i,newLocation:null,isEditingMarker:!1,selectedLocation:n});case d:var s={id:"_"+Date.now(),title:"",description:"",latitude:t.meta.lat,longitude:t.meta.lng,region_id:window.lastAddedRegionId||null,category_id:window.lastAddedCategoryId||K[0]};return Object.assign(Object.assign({},e),{newLocation:s});case p:return Object.assign(Object.assign({},e),{newLocation:null,isEditingMarker:!1});case f:return Object.assign(Object.assign({},e),{newLocation:Object.assign(Object.assign({},e.newLocation),{latitude:t.meta.lat,longitude:t.meta.lng})});case w:window.toastr.success("Location deleted");var l=t.meta.location,c=e.locations.filter((function(e){return e.id!==l.id}));return delete e.locationsById[l.id],Object.assign(Object.assign({},e),{selectedLocation:null,isEditingMarker:!1,locations:c,locationsByCategory:X(c)});case b:return window.toastr.error(t.payload.message,"Error deleting location"),e;case g:var H=t.meta.location,V=e.locations.map((function(e){return e.id===H.id?Object.assign(Object.assign({},e),H):e}));return e.locationsById[H.id]=H,Object.assign(Object.assign({},e),{isEditingMarker:!1,locations:V,locationsByCategory:X(V)});case h:var $=t.meta.locationsById,q=e.locations.map((function(t){if($[t.id]){var n=$[t.id];return e.locationsById[t.id]=n,Object.assign(Object.assign({},t),n)}return t}));return Object.assign(Object.assign({},e),{isEditingMarker:!1,locations:q,locationsByCategory:X(q)});case B:var G=t.meta.categoryIds;return o.forOwn(e.categories,(function(e){e.visible=G.includes(e.id)})),Object.assign(Object.assign({},e),{categories:Object.assign({},e.categories),activePresets:{}});case D:var Y=t.meta.tagFilters,Q=t.meta.modifiedCategoryIds,ee=[],te=[],ne=e.locations.concat(e.excludedLocations),oe=ne.filter((function(e){var t=Y[e.category_id];return!t||(e.tags.includes(t)?(te.push(e),!0):(ee.push(e),!1))}));return Q.forEach((function(t){e.categories[t]&&(e.categories[t].visible=!0)})),Object.assign(Object.assign({},e),{tagFilters:Y,specificallyIncludedLocations:te,excludedLocations:ee,locations:oe,locationsByCategory:X(oe),categories:e.categories});case A:var re=t.meta.tagFilters,ae=ie(e,e.regionFilter,re);return t.meta.legacyTagFilters&&(ae.tagFilters=t.meta.legacyTagFilters,t.meta.modifiedCategoryIds.forEach((function(t){e.categories[t]&&(e.categories[t].visible=!0)}))),ae;case j:var se=t.meta,le=se.regionId,ce=se.includeSubregions;return t.meta.previousRegionFilter=e.regionFilter,ie(e,le,e.multiTagFilters,ce);case m:var ue=Object.assign(Object.assign({},e.locationsById[t.meta.locationId]),{latitude:t.meta.lat,longitude:t.meta.lng});e.locationsById[t.meta.locationId]=ue;var de=e.selectedLocation&&e.selectedLocation.id===t.meta.locationId?ue:e.selectedLocation;return Object.assign(Object.assign({},e),{selectedLocation:de,locations:e.locations.map((function(e){return e.id===t.meta.locationId?ue:e}))});case y:return window.toastr.error(t.payload.message,"Error updating location position"),e;case v:var pe=t.meta.locationId,fe=e.selectedLocation&&e.selectedLocation.id===pe?Object.assign(Object.assign({},e.selectedLocation),{features:t.meta.features}):e.selectedLocation;return e.locationsById[pe]=Object.assign(Object.assign({},e.locationsById[pe]),{features:t.meta.features}),Object.assign(Object.assign({},e),{selectedLocation:fe,locations:e.locations.map((function(e){return e.id===pe?Object.assign(Object.assign({},e),{features:t.meta.features}):e})),locationsById:e.locationsById});case E:var ge=t.meta.visible?t.meta.location:null;return Object.assign(Object.assign({},e),{selectedLocation:ge});case k:var he=t.meta.locationId,me=he?e.locations.find((function(e){return e.id===he})):null;return Object.assign(Object.assign({},e),{selectedLocation:me});case x:return Object.assign(Object.assign({},e),{isEditingMarker:t.meta.isEditingMarker});case C:var ye=e.categories[t.meta.categoryId];return ye.visible=!ye.visible,Object.assign(Object.assign({},e),{categories:Object.assign({},e.categories),activePresets:{}});case S:for(var ve=t.meta.categoryIds,we=0;we3&&void 0!==arguments[3]&&arguments[3],r=t?i({},t,!0):null;t&&o&&e.regions.forEach((function(e){e.parent_region_id===t&&(r[e.id]=!0)}));var a=[],s=[],l=e.categories,c=e.locations.concat(e.excludedLocations),u=Object.keys(n).length>0;if(null!==r&&u){var d=c.filter((function(e){var t=n[e.category_id];return!0!==r[e.region_id]||0!==e.tags.length&&t&&!e.tags.some((function(e){return t.includes(e)}))?(s.push(e),!1):(l[e.category_id].visible&&a.push(e),!0)}));return Object.assign(Object.assign({},e),{regionFilter:t,multiTagFilters:n,specificallyIncludedLocations:a,excludedLocations:s,locations:d,locationsByCategory:X(d)})}if(null!==r){var p=c.filter((function(e){return!0===r[e.region_id]?(l[e.category_id].visible&&a.push(e),!0):(s.push(e),!1)}));return Object.assign(Object.assign({},e),{regionFilter:t,multiTagFilters:n,specificallyIncludedLocations:a,excludedLocations:s,locations:p,locationsByCategory:X(p)})}if(u){var f=c.filter((function(e){var t=n[e.category_id];return 0===e.tags.length||!t||e.tags.some((function(e){return t.includes(e)}))?(l[e.category_id].visible&&a.push(e),!0):(s.push(e),!1)}));return Object.assign(Object.assign({},e),{regionFilter:t,multiTagFilters:n,specificallyIncludedLocations:a,excludedLocations:s,locations:f,locationsByCategory:X(f)})}return c.forEach((function(e){l[e.category_id].visible&&a.push(e)})),Object.assign(Object.assign({},e),{regionFilter:null,multiTagFilters:{},specificallyIncludedLocations:a,excludedLocations:[],locations:c,locationsByCategory:X(c)})},ae={getCategories:function(e){return e.map.categoryIds.map((function(t){return e.map.categories[t]}))},getCategoriesOrdered:function(e){return e.map.categoryIds.map((function(t){return e.map.categories[t]})).sort((function(e,t){return e.title>t.title?1:t.title>e.title?-1:0}))},getGroupedCategories:function(e){return e.map.groups},getVisibleCategories:function(e){return e.map.categoryIds.map((function(t){return e.map.categories[t]})).filter((function(e){return e.visible}))},getCategoryVisibilityMap:function(e){return e.map.categoryIds.reduce((function(t,n){return t[n]=e.map.categories[n].visible,t}),{})},getAllLocations:function(e){return e.map.locations.concat(e.map.excludedLocations).map((function(t){return t.category=ae.getLocationCategory(e,t),t}))},getLocations:function(e){return e.map.locations.map((function(t){return t.category=ae.getLocationCategory(e,t),t}))},getLocation:function(e,t){var n=o.find(e.map.locations,(function(e){return e.id==t}));return n&&(n.category=ae.getLocationCategory(e,n)),n||(n=o.find(e.map.excludedLocations,(function(e){return e.id==t})))&&(n.category=ae.getLocationCategory(e,n)),n},getAllLocationsById:function(e){return Object.assign(o.keyBy(e.map.locations,(function(e){return e.id})),o.keyBy(e.map.excludedLocations,(function(e){return e.id})))},getSelectedLocation:function(e){var t=e.map.selectedLocation;return t&&(t.category=ae.getLocationCategory(e,t)),t},getLocationCategory:function(e,t){var n=e.map.categories[t.category_id];if(!n)throw Error("No category found for location: "+t.id+" - category: "+t.category_id);return n}}},818:(e,t,n)=>{"use strict";n.d(t,{XT:()=>u,hF:()=>d,pP:()=>p,sx:()=>f,cq:()=>g,I6:()=>m});var o,r,i=n(19486),a="HIVE:MAP:SET_SELECTED_ROUTE",s="HIVE:MAP:SET_IS_ADDING_ROUTE",l="HIVE:MAP:SET_IS_EDITING_ROUTE",c="HIVE:MAP:SET_IS_SAVING_ROUTE",u="HIVE:MAP:ADD_UNSAVED_ROUTE",d="HIVE:MAP:ADD_ROUTE",p="HIVE:MAP:UPDATE_ROUTE",f="HIVE:MAP:DELETE_ROUTE",g={selectRoute:function(e){return{type:a,meta:{route:e}}},enableRouteEditMode:function(e){return{type:l,meta:{enabled:e}}},enableRouteAddMode:function(e){return{type:s,meta:{enabled:e}}},showSaveRouteDialog:function(e){return{type:c,meta:{isSavingRoute:e}}},addUnsavedRoute:function(e){return{type:u,meta:{route:e}}},addNewRoute:function(e){return{type:d,meta:{route:e}}},updateRoute:function(e){return{type:p,meta:{route:e}}},deleteRoute:function(e){return{type:f,meta:{route:e}}}},h=(o=window.mapData.routes,r=o.reduce((function(e,t){return e[t.id]=t,e}),{}),i.Z.routeWaypoints,{routesById:r,routes:o,sharedRoute:null,selectedRoute:null,isAddingNewRoute:!1,isEditingRoute:!1,isSavingRoute:!1}),m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case a:return Object.assign(Object.assign({},e),{selectedRoute:t.meta.route});case l:return Object.assign(Object.assign({},e),{isAddingNewRoute:!1,isEditingRoute:t.meta.enabled});case s:return Object.assign(Object.assign({},e),{isEditingRoute:!1,isAddingNewRoute:t.meta.enabled});case c:return Object.assign(Object.assign({},e),{isSavingRoute:t.meta.isSavingRoute});case u:var n=t.meta.route,o=e.routes.filter((function(e){return e.id!==n.id}));return e.routes.push(n),e.routesById[n.id]=n,Object.assign(Object.assign({},e),{routes:o,routesById:e.routesById});case d:var r=t.meta.route;return e.routes.push(r),e.routesById[r.id]=r,Object.assign(Object.assign({},e),{routes:e.routes,routesById:e.routesById});case p:var i=t.meta.route,g=e.routes.map((function(e){return e.id===i.id?i:e}));return e.routesById[i.id]=i,Object.assign(Object.assign({},e),{routes:g,routesById:e.routesById});case f:var m=t.meta.route,y=e.routes.filter((function(e){return e.id!==m.id}));return delete e.routesById[m.id],Object.assign(Object.assign({},e),{routes:y,routesById:e.routesById});default:return e}}},94879:(e,t,n)=>{"use strict";n.d(t,{qZ:()=>a,pA:()=>s,cq:()=>l,I6:()=>u});var o="HIVE:SEARCH:SET_CURRENT_INPUT",r="HIVE:SEARCH:SET_QUERY",i="HIVE:SEARCH:SET_PREVIOUS_CATEGORIES",a="HIVE:SEARCH:SET_SEARCH_RESULTS",s="HIVE:SEARCH:SET_LOCATION_HIGHLIGHTED",l={setCurrentInput:function(e){return{type:o,meta:{query:e}}},setQuery:function(e){return{type:r,meta:{query:e}}},setPreviouslyVisibleCategories:function(e){return{type:i,meta:{categories:e}}},setSearchResults:function(e){return{type:a,meta:{searchResults:e}}},setLocationHighlighted:function(e,t){return{type:s,meta:{result:e,highlighted:t}}}},c={currentInput:null,query:null,previousCategories:null,highlightedResult:null,searchResults:null},u=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:c,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case o:return Object.assign(Object.assign({},e),{currentInput:t.meta.query});case r:return Object.assign(Object.assign({},e),{query:t.meta.query});case i:return Object.assign(Object.assign({},e),{previousCategories:t.meta.categories});case a:var n=t.meta.searchResults;return Object.assign(Object.assign({},e),{searchResults:n});case s:return Object.assign(Object.assign({},e),{highlightedResult:t.meta.highlighted?t.meta.result:null});default:return e}}},38650:(e,t,n)=>{"use strict";n.d(t,{qS:()=>c,o$:()=>u,lT:()=>p,rp:()=>g,iD:()=>m,Gl:()=>v,dv:()=>b,sf:()=>E,UU:()=>O,Qi:()=>P,z1:()=>L,w9:()=>T,EK:()=>M,Q5:()=>D,cq:()=>A,I6:()=>B,wl:()=>U});var o=n(97118),r=n(96486),i=n(74778);function a(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n0&&void 0!==arguments[0]?arguments[0]:j,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case l:return e.categoryProgress=Z(t.meta.appState.map,e.trackedCategories,e.foundLocations),e;case c:var n=t.meta,o=n.locationId,r=n.found,i=Object.assign({},e.foundLocations),s=e.foundLocationsCount,A=e.totalFoundLocationsCount;return r?(i[o]=!0,s++,A++):(delete i[o],s--,A--),Object.assign(Object.assign({},e),{foundLocations:i,foundLocationsCount:s,totalFoundLocationsCount:A,categoryProgress:Z(window.store.getState().map,e.trackedCategories,i)});case u:var B=t.meta,z=B.locationIds,U=B.found,W=Object.assign({},e.foundLocations),H=e.foundLocationsCount,V=e.totalFoundLocationsCount;if(U){for(var $=0;$=0;i--)r[t[i]]=0;var a=e.regionFilter,s=e.regionFilter?function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},e.regionFilter,!0):null;for(var l in s&&e.regions.forEach((function(e){e.parent_region_id===a&&(s[e.id]=!0)})),n){var c=o[l];!c||null==r[c.category_id]||s&&!s[c.region_id]||(r[c.category_id]=r[c.category_id]+1)}return r},U={isLocationFound:function(e,t){return!!e.user.foundLocations[t]},canMarkLocation:function(e,t){return window.user&&(window.user.hasPro||e.user.totalFoundLocationsCount{"use strict";function o(e){if("Polygon"===e.geometry.type){var t=e.geometry.coordinates;t.length>0&&t[0].length>0&&t[0].push(t[0][0])}else if("MultiPolygon"===e.geometry.type){e.geometry.coordinates.forEach((function(e){e[0].push(e[0][0])}))}return e}n.d(t,{I:()=>o})},60156:(e,t,n)=>{"use strict";n.d(t,{Nv:()=>o});function o(e){if("Polygon"===e.type){var t=new mapboxgl.LngLatBounds;return e.coordinates[0].forEach((function(e){t.extend(e)})),t.getCenter()}if("MultiPolygon"===e.type){var n=new mapboxgl.LngLatBounds;return e.coordinates[0][0].forEach((function(e){n.extend(e)})),n.getCenter()}throw new Error("Unsupported geometry type: "+e.type)}},71652:(e,t,n)=>{"use strict";n.d(t,{t7:()=>o,w6:()=>s,eE:()=>l,hl:()=>c});var o=function(e,t,n){return e*(1-n)+t*n},r=function(e,t,n){return a((n-e)/(t-e))},i=function(e,t,n){return(n-e)/(t-e)},a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Math.min(n,Math.max(t,e))},s=function(e,t,n,a,s){var l=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];return o(n,a,l?r(e,t,s):i(e,t,s))},l=function(e){return e*e},c=function(e){return 1-(1-e)*(1-e)}},10916:(e,t,n)=>{"use strict";n.d(t,{LB:()=>r,D1:()=>l});var o=n(47958),r={258:{inGameBounds:{top:-445e3,left:-342e3,bottom:37e4,right:475e3},mapBounds:{topLeft:{x:127.25598184510139,y:127.25598184510139},bottomRight:{x:127.74416281422285,y:127.74416281422285}}},259:{inGameBounds:{top:-143912,left:-372973,bottom:354421,right:285494},mapBounds:{topLeft:{x:127.32490532697622,y:127.39559150823425},bottomRight:{x:127.68251395679367,y:127.66590821409879}}},264:{inGameBounds:{top:7944,left:4812,bottom:4532,right:13952},mapBounds:{topLeft:{x:127.23117148476692,y:127.33160664985246},bottomRight:{x:127.7893259452204,y:127.53969981310864}}},301:{inGameBounds:{top:791,left:662,bottom:696,right:844},mapBounds:{topLeft:{x:127.37277304726692,y:127.51959493110245},bottomRight:{x:127.5498239920954,y:127.60610606310864}}},302:{inGameBounds:{top:1212,left:473,bottom:1192,right:669},mapBounds:{topLeft:{x:127.33273398476692,y:127.55035664985242},bottomRight:{x:127.5273630545954,y:127.56753184435857}}},303:{inGameBounds:{top:850,left:668,right:801,bottom:575},mapBounds:{topLeft:{x:127.4023630545954,y:127.41900899360243},bottomRight:{x:127.52999960976692,y:127.68520762560864}}},305:{inGameBounds:{top:943,left:945,bottom:856,right:1003},mapBounds:{topLeft:{x:127.5503122733454,y:127.57867696235243},bottomRight:{x:127.60934531289192,y:127.66616465685864}}},306:{inGameBounds:{top:571,left:774,bottom:512,right:943},mapBounds:{topLeft:{x:127.63571250039192,y:127.43976094672745},bottomRight:{x:127.8037302420954,y:127.49209239123364}}},414:{inGameBounds:{top:1813,left:1140,bottom:729,right:1866},mapBounds:{topLeft:{x:127.49417196530887,y:127.17614934650433},bottomRight:{x:127.84907131878302,y:127.70643154932941}}},447:{inGameBounds:{top:1195,left:304,bottom:804,right:520},mapBounds:{topLeft:{x:127.39855235632481,y:127.35440252112502},bottomRight:{x:127.50431083789243,y:127.54476126036705}}},458:{inGameBounds:{top:1391,left:742,bottom:848,right:1337},mapBounds:{topLeft:{x:127.36241325475638,y:127.32037488085697},bottomRight:{x:127.65282138124492,y:127.58617510002279}}},416:{inGameBounds:{top:60984.6,left:-84740,bottom:-63004,right:59658.75},mapBounds:{topLeft:{x:127,y:127},bottomRight:{x:128,y:128}}},446:{inGameBounds:{top:-3799.65,left:-4151.68,bottom:3693.64,right:4913.28},mapBounds:{topLeft:{x:127.30993798633666,y:127.32610604165714},bottomRight:{x:127.72487670388598,y:127.66915739086922}}}},i={536:{sky:{inGameBounds:{top:-2880.20996,left:-3917.2605,bottom:2991.81274,right:2932.87769},mapBounds:{topLeft:{x:127.41049983049089,y:127.19016690122483},bottomRight:{x:127.56726334017364,y:127.32425048015304}}},surface:{inGameBounds:{top:-3682.64209,left:-4430.50781,bottom:3692.96631,right:4897.24854},mapBounds:{topLeft:{x:127.39860605499337,y:127.4156870601055},bottomRight:{x:127.61222652253977,y:127.5845800175589}}}}},a=new o.Z,s=function(e,t,n){return e>n.mapBounds.topLeft.x&&en.mapBounds.topLeft.y&&t{"use strict";n.d(t,{Z:()=>s});var o=n(70854),r=n(30294),i=n(10916);function a(e,t){for(var n=0;n0}},{key:"getVisibleLocations",value:function(e){var t={};return window.mapData.locations.forEach((function(n){e(n)&&(t[n.id]=!0)})),t}}],(n=null)&&a(t.prototype,n),s&&a(t,s),e}();s.initialRegionIds=null,s.hidePopup=!1,s.highlightInitialPoint=!1,s.highlightRegions=!1,s.visibleGroupIds=null,s.visibleTagIds=null,s.routeWaypoints=null,s.showRoutePopup=!1,s.visibleLocationIds=null,s.rotation=0},61914:(e,t,n)=>{"use strict";n.r(t);var o=n(87757),r=n.n(o),i=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function a(e){try{l(o.next(e))}catch(e){i(e)}}function s(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){e.done?r(e.value):function(e){return e instanceof n?e:new n((function(t){t(e)}))}(e.value).then(a,s)}l((o=o.apply(e,t||[])).next())}))};$(document).ready((function(){var e=this;if(window.autoComplete){var t=function(){o.classList.remove("visible"),a.blur()},n=window.mapData.categories,o=document.getElementById("quick-jump-modal"),a=document.getElementById("quick-jump-input");$(document).on("keydown",(function(e){var n=e.which||e.keyCode;if(9===n){var r=store.getState();if(r.map.isEditingMarker||r.user.isEditingNote||document.activeElement&&document.activeElement.hasAttribute("data-tabbable")||document.querySelector(".modal.show"))return;e.preventDefault(),o.classList.contains("visible")?t():function(){if(o.classList.add("visible"),a.focus(),a.select(),a.value.length>0&&0===a.nextElementSibling.childElementCount){var e=new Event("input",{bubbles:!0,cancelable:!0});a.dispatchEvent(e)}}()}else 27===n&&t()})),a.addEventListener("keyup",(function(e){if("Enter"===e.key){var t=document.getElementById("autocomplete-list"),n=t.getElementsByClassName("autoComplete_result");if(n.length>0&&0===t.getElementsByClassName("autoComplete_selected").length){var o=new Event("mousedown");n[0].dispatchEvent(o)}}})),o.addEventListener("click",(function(e){e.target===o&&t()}));new window.autoComplete({data:{src:function(){return i(e,void 0,void 0,r().mark((function e(){return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",window.mapData.locations.concat(window.mapData.regions));case 1:case"end":return e.stop()}}),e)})))},key:["title"],cache:!1},sort:function(e,t){return e.matcht.match?1:0},placeHolder:"Jump to Location",selector:"#quick-jump-input",threshold:0,debounce:50,searchEngine:"strict",highlight:!0,maxResults:5,resultsList:{render:!0,container:function(e){e.setAttribute("id","autocomplete-list")},destination:a,position:"afterend",element:"ul"},resultItem:{content:function(e,t){var o=e.value.category_id;if(o){var r=n[o];t.innerHTML='
                                                                                                                                                                                    \n\ n ').concat(e.match,"\n
                                                                                                                                                                                ")}else t.innerHTML='\
                                                                                                                                                                                n\ n '.concat(e.match,"\n
                                                                                                                                                                                ")},element:"
                                                                                                                                                                                li "},noResults:function(){var e=document.createElement("
                                                                                                                                                                                li ");e.setAttribute("
                                                                                                                                                                                class ","
                                                                                                                                                                                autocomplete - no - results "),e.setAttribute("
                                                                                                                                                                                tabindex ","
                                                                                                                                                                                1 "),e.innerHTML="
                                                                                                                                                                                No Results ",document.getElementById("
                                                                                                                                                                                autocomplete - list ").appendChild(e)},onSelection:function(e){var n=e.selection.value;if(n.category_id){var o=n;window.mapManager.panToLocation(o.id),window.mapManager.setLocationHighlighted(o.id,!0,2500),store.getState().map.selectedLocation}else{var r=n;window.config.altMapSdk?window.mapManager.panToRegion(r):r.features.length>0&&window.mapManager.panToShape(r.features[0].geometry,window.isMobile?50:{left:300,right:-100,top:-100,bottom:-100})}t()}});["
                                                                                                                                                                                focus ","
                                                                                                                                                                                blur "].forEach((function(e){var t=document.getElementById("
                                                                                                                                                                                autocomplete - list ");a.addEventListener(e,(function(){"
                                                                                                                                                                                blur "===e?t.style.display="
                                                                                                                                                                                none ":"
                                                                                                                                                                                focus "===e&&(t.style.display="
                                                                                                                                                                                block ")}))}))}}))},8806:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.d(t,{Z:()=>a});var o=n(96486),r=n(6871);function i(e,t){for(var n=0;n{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;ns});var r="
                                                                                                                                                                                mg: settings: game_ ".concat(window.game.id,": remember_categories "),i="
                                                                                                                                                                                mg: settings: game_ ".concat(window.game.id,": icon_scaling_enabled "),a="
                                                                                                                                                                                mg: settings: game_ ".concat(window.game.id,": visible_categories: id_ ");var s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e)}var t,n,s;return t=e,s=[{key:"
                                                                                                                                                                                isRememberCategoriesEnabled ",value:function(){return this._isRememberCategoriesEnabled}},{key:"
                                                                                                                                                                                setRememberCategoriesEnabled ",value:function(t){if(t){localStorage.setItem(r,"
                                                                                                                                                                                true ");for(var n=window.store.getState().map,o=n.categoryIds,i=n.categories,a=0;a{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;nr});var r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e)}var t,n,r;return t=e,r=[{key:"
                                                                                                                                                                                show ",value:function(e,t){window.toastr.info(t,e,{positionClass:"
                                                                                                                                                                                toast - top - center ",toastClass:"
                                                                                                                                                                                toast toast - v2 no - icon basic ",timeOut:2500,extendedTimeOut:500,showDuration:100,hideDuration:100,tapToDismiss:!1})}},{key:"
                                                                                                                                                                                showPersistent ",value:function(e,t,n){window.toastr.info(t,e,{positionClass:"
                                                                                                                                                                                toast - top - center ",toastClass:"
                                                                                                                                                                                toast toast - v2 no - icon basic ",timeOut:0,extendedTimeOut:0,showDuration:100,hideDuration:100,tapToDismiss:!1,onclick:n})}},{key:"
                                                                                                                                                                                clearToasts ",value:function(){window.toastr.clear()}},{key:"
                                                                                                                                                                                clearToastsImmediately ",value:function(){window.toastr.remove()}}],(n=null)&&o(t.prototype,n),r&&o(t,r),e}()},5794:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e){var t=document.createElement("
                                                                                                                                                                                textarea ");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("
                                                                                                                                                                                copy "),document.body.removeChild(t)}function r(e){if(document.body.createTextRange){var t=document.body.createTextRange();t.moveToElementText(e),t.select(),t.execCommand("
                                                                                                                                                                                Copy "),i()}else if(window.getSelection&&document.createRange){var n=e.contentEditable,o=e.readOnly;e.contentEditable=!0,e.readOnly=!1;var r=document.createRange();r.selectNodeContents(e);var a=window.getSelection();if(a.removeAllRanges(),a.addRange(r),"
                                                                                                                                                                                TEXTAREA "!=e.nodeName&&"
                                                                                                                                                                                INPUT "!=e.nodeName||e.select(),e.setSelectionRange&&navigator.userAgent.match(/ipad|ipod|iphone/i)&&e.setSelectionRange(0,999999),e.contentEditable=n,e.readOnly=o,document.queryCommandSupported("
                                                                                                                                                                                copy "))document.execCommand("
                                                                                                                                                                                copy ")&&i();else navigator.userAgent.match(/ipad|ipod|iphone|android|silk/i)}}function i(){var e=$("
                                                                                                                                                                                #permalink - copy - button ").tooltip("
                                                                                                                                                                                show ");setTimeout((function(){e.tooltip("
                                                                                                                                                                                hide ")}),2e3)}n.d(t,{i:()=>o,n:()=>r})},29456:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e,t,n,o){var r=e-n,i=t-o;return Math.sqrt(r*r+i*i)}n.d(t,{G:()=>o})},74506:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;t||(t=e);var n=window.getSelection();r(e+n.toString()+t)}function r(e){document.activeElement&&setTimeout((function(){document.execCommand("
                                                                                                                                                                                insertText ",!1,e)}),0)}function i(e,t){var n=e.clientHeight,o=n/t,r=e.scrollHeight;r>n+10&&(e.style.height=r+o+"
                                                                                                                                                                                px ")}n.d(t,{DT:()=>o,XL:()=>r,c5:()=>i})},67723:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e,t){if(!e._controlPositions[t]){var n=document.createElement("
                                                                                                                                                                                div ");n.className="
                                                                                                                                                                                mapboxgl - ctrl - ".concat(t),e._controlContainer.appendChild(n),e._controlPositions[t]=n}}function r(e,t){return[e[0]*Math.cos(t)-e[1]*Math.sin(t),e[0]*Math.sin(t)+e[1]*Math.cos(t)]}function i(e,t){var n=Math.atan2(e[1]-t[1],e[0]-t[0]),o=[t[0]-e[0],t[1]-e[1]],i=Math.sqrt(Math.pow(o[0],2)+Math.pow(o[1],2)),a=[o[0]/i,o[1]/i],s=[t[0]-0*a[0],t[1]-0*a[1]],l=r([2e-4,1e-4],n),c=r([2e-4,-1e-4],n);return[e,s,[s[0]+l[0],s[1]+l[1]],s,[s[0]+c[0],s[1]+c[1]]]}n.d(t,{F:()=>o,P:()=>i})},22395:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.r(t);var o=n(96486);if(window.md){var r=window.md.renderer.rules.link_open||function(e,t,n,o,r){return r.renderToken(e,t,n)};window.handleDescriptionLinkClick=function(e){if(e.target.host===window.location.host&&o.trimEnd(e.target.href.replace(e.target.search,"
                                                                                                                                                                                ")," / ")===window.mapUrl){var t=function(e){var t=new URLSearchParams(e),n=t.get("
                                                                                                                                                                                locationIds "),o={};if(n){var r=n.split(", ");r.length>0&&(o.locationIds=r.map((function(e){return parseInt(e)})))}var i=t.get("
                                                                                                                                                                                catIds ");if(i){var a=i.split(", ");a.length>0&&(o.categoryIds=a.map((function(e){return parseInt(e)})))}var s=t.get("
                                                                                                                                                                                groups ");if(s){var l=s.split(", ");l.length>0&&(o.groupIds=l.map((function(e){return parseInt(e)})))}var c=t.get("
                                                                                                                                                                                regions ");if(c){var u=c.split(", ");u.length>0&&(o.regionIds=u.map((function(e){return parseInt(e)})))}var d=t.get("
                                                                                                                                                                                tags ");if(d){var p=d.split(", ");p.length>0&&(o.tagIds=p.map((function(e){return parseInt(e)})))}var f=t.get("
                                                                                                                                                                                zoom ");f&&(o.zoom=Number.parseFloat(f));var g=t.get("
                                                                                                                                                                                x "),h=t.get("
                                                                                                                                                                                y ");g&&h&&(o.x=Number.parseFloat(g),o.y=Number.parseFloat(h));var m=t.get("
                                                                                                                                                                                highlightRegions ");m&&(o.highlightRegions=!!m);var y=t.get("
                                                                                                                                                                                route ");return y&&(o.routeWaypoints=y.split(", ").map((function(e){if(e.startsWith("
                                                                                                                                                                                p ")){var t=e.substring(1).split(";
                                                                                                                                                                                ");return[parseFloat(t[0]),parseFloat(t[1])]}return parseInt(e)}))),o.search=t.get("
                                                                                                                                                                                search ")||null,o.locationIds||o.categoryIds||o.regionIds||o.tagIds||o.routeWaypoints||o.search||o.zoom&&o.x&&o.y?o:null}(e.target.search);if(t){var n=t.locationIds;if(n)return e.preventDefault(),1===n.length?window.mapManager.triggerMarkerClick(n[0]):window.mapManager.panToLocations(n),window.Analytics.trackEngagement("
                                                                                                                                                                                marker connect "),!0;if(t.regionIds&&t.regionIds.length>0)return e.preventDefault(),window.mapManager.focusAndHighlightRegions(t.regionIds),window.Analytics.trackEngagement("
                                                                                                                                                                                marker connect "),!0;if(t.search)return e.preventDefault(),$("
                                                                                                                                                                                #search - input ").val(t.search),$("
                                                                                                                                                                                #search - submit ").click(),window.Analytics.trackEngagement("
                                                                                                                                                                                marker connect "),!0;if(t.zoom&&t.x&&t.y)return e.preventDefault(),window.mapManager.panToLatLngZoom(t.y,t.x,t.zoom),window.Analytics.trackEngagement("
                                                                                                                                                                                marker connect "),!0;if(t.categoryIds&&t.categoryIds.length>0){e.preventDefault();var r=t.categoryIds.flatMap((function(e){return store.getState().map.locationsByCategory[e].map((function(e){return e.id}))}));window.mapManager.hideAllLocationMarkers(),window.mapManager.setMarkersVisibleById(r,!0),window.mapManager.setBoundsFromLocationIds(r),window.Analytics.trackEngagement("
                                                                                                                                                                                marker connect ")}}}return!1},window.md.renderer.rules.link_open=function(e,t,n,o,i){var a=e[t],s=a.attrIndex("
                                                                                                                                                                                href ");return a.attrs[s].length>1&&e[t].attrPush(["
                                                                                                                                                                                onclick ","
                                                                                                                                                                                window.handleDescriptionLinkClick(event)
                                                                                                                                                                                "]),r(e,t,n,o,i)}}},47958:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e,t){for(var n=0;nl});var r=Array.isArray||function(e){return" [object Array]
                                                                                                                                                                                "===Object.prototype.toString.call(e)};const i=function(){function e(t,n,o,i){if(function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                Cannot call a class as a
                                                                                                                                                                                function ")}(this,e),r(t))return this._a=t[0],this._b=t[1],this._c=t[2],void(this._d=t[3]);this._a=t,this._b=n,this._c=o,this._d=i}var t,n,i;return t=e,(n=[{key:"
                                                                                                                                                                                transform ",value:function(e,t){return this._transform(e.clone(),t)}},{key:"
                                                                                                                                                                                _transform ",value:function(e,t){return t=t||1,e.x=t*(this._a*e.x+this._b),e.y=t*(this._c*e.y+this._d),e}},{key:"
                                                                                                                                                                                untransform ",value:function(e,t){return t=t||1,{x:(e.x/t-this._b)/this._a,y:(e.y/t-this._d)/this._c}}}])&&o(t.prototype,n),i&&o(t,i),e}();function a(e,t){for(var n=0;n{"
                                                                                                                                                                                use strict ";n.d(t,{CC:()=>i,gA:()=>a});var o=n(71652),r=new(n(47958).Z),i=function(e,t,n){var i=(0,o.w6)(n.inGameBounds.left,n.inGameBounds.right,n.mapBounds.topLeft.x,n.mapBounds.bottomRight.x,e,!1),a=(0,o.w6)(n.inGameBounds.top,n.inGameBounds.bottom,n.mapBounds.topLeft.y,n.mapBounds.bottomRight.y,t,!1);return r.pointToLatLng({x:i,y:a},0)},a=function(e,t,n){var i=r.latLngToPoint({lat:e,lng:t},0);return{x:(0,o.w6)(n.mapBounds.topLeft.x,n.mapBounds.bottomRight.x,n.inGameBounds.left,n.inGameBounds.right,i.x,!1),y:(0,o.w6)(n.mapBounds.topLeft.y,n.mapBounds.bottomRight.y,n.inGameBounds.top,n.inGameBounds.bottom,i.y,!1)}}},96590:(e,t,n)=>{"
                                                                                                                                                                                use strict ";function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("
                                                                                                                                                                                undefined "!=typeof Symbol&&e[Symbol.iterator]||e["
                                                                                                                                                                                @ @iterator "]);if(null==n)return;var o,r,i=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(o=n.next()).done)&&(i.push(o.value),!t||i.length!==t);a=!0);}catch(e){s=!0,r=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw r}}return i}(e,t)||i(e,t)||function(){throw new TypeError("
                                                                                                                                                                                Invalid attempt to destructure non - iterable instance.\nIn order to be iterable, non - array objects must have a[Symbol.iterator]() method.
                                                                                                                                                                                ")}()}function r(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("
                                                                                                                                                                                undefined "!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["
                                                                                                                                                                                @ @iterator "])return Array.from(e)}(e)||i(e)||function(){throw new TypeError("
                                                                                                                                                                                Invalid attempt to spread non - iterable instance.\nIn order to be iterable, non - array objects must have a[Symbol.iterator]() method.
                                                                                                                                                                                ")}()}function i(e,t){if(e){if("
                                                                                                                                                                                string "==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"
                                                                                                                                                                                Object "===n&&e.constructor&&(n=e.constructor.name),"
                                                                                                                                                                                Map "===n||"
                                                                                                                                                                                Set "===n?Array.from(e):"
                                                                                                                                                                                Arguments "===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);nl,j_:()=>c});var s=new RegExp(/^\*\*(.*)?:\*\*/,"
                                                                                                                                                                                gim ");function l(e){var t={},n=r(e.matchAll(s));return n.forEach((function(o,r){var i=o[1],a=void 0;r+1=0){var s=r.indexOf(" ?? ",a);s>=0&&(r=" - "===r.charAt(s-2)?u(r,s-2,i.trim(),4):u(r,s,i.trimEnd()))}})),r}function u(e,t,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2;return e.substr(0,t)+n+e.substr(t+o)}},85351:(e,t,n)=>{"
                                                                                                                                                                                use strict ";n.r(t),n.d(t,{default:()=>we});var o=n(67294),r=n(73935),i=n(86763),a=n(97118),s=n(15429),l=n(38650),c=n(94879),u=n(41825),d=n(95575),p=n(96486),f=n(30148);function g(e,t){for(var n=0;n1&&(e.updateDistanceInfo(o),e.lastPositionMarker.setPosition(n.latLng))}))),this.listeners.push(google.maps.event.addListener(this.map,"
                                                                                                                                                                                mousemove ",(function(o){if(t>0){var r=o.latLng,i=e.activeLine.getPath();1===t&&1===i.length?i.insertAt(i.length-1,r):i.setAt(i.length-1,r),e.updateDistanceInfo(i),n=!0}}))),this.listeners.push(this.lastPositionMarker.addListener("
                                                                                                                                                                                click ",(function(t){t.stop(),e.map.setOptions({draggableCursor:"
                                                                                                                                                                                "}),e.listeners.forEach((function(e){return google.maps.event.removeListener(e)})),e.listeners=[],n&&e.activeLine.getPath().pop()}))),document.addEventListener("
                                                                                                                                                                                onkeydown ",this.onKeyDown),this.updateDistanceInfo([])}},{key:"
                                                                                                                                                                                disableDistanceMode ",value:function(){this.activeLine&&(this.activeLine.setMap(null),this.activeLine=null,this.lastPositionMarker.setMap(null),this.lastPositionMarker=null),this.listeners.forEach((function(e){return google.maps.event.removeListener(e)})),this.listeners=[],!1,this.map.setOptions({draggableCursor:"
                                                                                                                                                                                "}),h.classList.remove("
                                                                                                                                                                                active "),document.removeEventListener("
                                                                                                                                                                                onkeydown ",this.onKeyDown)}},{key:"
                                                                                                                                                                                updateDistanceInfo ",value:function(e){if(e.length>1){for(var t=this.calculateLineDistance(e),n=this.config.speeds,o="
                                                                                                                                                                                ",r=0;rDistance: ".concat(t, "m\
                                                                                                                                                                                    n Travel Time: ").concat(o,"\
                                                                                                                                                                                    n ")}else m.innerText="
                                                                                                                                                                                    Click the map to add points and calculate your travel time "}},{key:"
                                                                                                                                                                                    calculateLineDistance ",value:function(e){if(this.config.useHaversine){var t=google.maps.geometry.spherical.computeLength(e);return Math.round(t)}for(var n=0,o=e.getArray(),r=1e6,i=0;i0&&(e%=60*t),e<10?t+": 0 "+e:t+": "+e}},{key:"
                                                                                                                                                                                    onKeyDown ",value:function(e){27===e.keyCode||e.keyCode}},{key:"
                                                                                                                                                                                    enableRadiusTool ",value:function(){var e=this;if(y.classList.add("
                                                                                                                                                                                    active "),!this.radiusOverlay){var t=500/(1e5/this.config.scale)*2,n=this.map.getCenter(),o=new google.maps.LatLng(n.lat()-t/2,n.lng()-t/2),r=new google.maps.LatLng(o.lat()+t,o.lng()+t),i=new google.maps.LatLngBounds(o,r);this.radiusOverlay=new google.maps.GroundOverlay(" / images / games / tarkov / radius.svg ",i,{clickable:!1}),this.radiusRect=new google.maps.Rectangle({draggable:!0,bounds:i,fillOpacity:0,strokeWeight:0,map:this.map}),google.maps.event.addListener(this.radiusRect,"
                                                                                                                                                                                    drag ",(function(t){e.radiusOverlay.set("
                                                                                                                                                                                    bounds ",e.radiusRect.getBounds()),e.radiusOverlay.setMap(e.map)}))}this.radiusOverlay.setMap(this.map),this.radiusRect.setMap(this.map)}},{key:"
                                                                                                                                                                                    disableRadiusTool ",value:function(){this.radiusRect&&this.radiusRect.setMap(null),y.classList.remove("
                                                                                                                                                                                    active ")}},{key:"
                                                                                                                                                                                    clearRadiusOverlay ",value:function(){this.radiusOverlay&&this.radiusOverlay.setMap(null),this.radiusRect&&this.radiusOverlay.setMap(null)}}])&&g(t.prototype,n),o&&g(t,o),e}();var w=n(24820),b=n(32701),E=n(10684),k=n(15538),x=n(82669),C=n(67954),S=n(609),O=n(97985),P=n(97975);function L(e){return(L="
                                                                                                                                                                                    function "==typeof Symbol&&"
                                                                                                                                                                                    symbol "==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"
                                                                                                                                                                                    function "==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"
                                                                                                                                                                                    symbol ":typeof e})(e)}function T(e,t){for(var n=0;n ',maxWidth:window.isMobile?300:400}),pe=!0,fe=!1,ge=[],he=null,me=!1,ye=document.getElementById("
                                                                                                                                                                                    marker - tooltip "),ve=document.getElementById("
                                                                                                                                                                                    marker - tooltip - title "),we=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("
                                                                                                                                                                                    Cannot call a class as a
                                                                                                                                                                                    function ")}(this,e),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(this,"
                                                                                                                                                                                    isIgnModeActive ",(function(){return!1})),K=t,Y=new f.Z((function(e,t){K.dispatch(l.cq.markLocation(e,t))})),this.infoWindow=de}var t,n,c;return t=e,(n=[{key:"
                                                                                                                                                                                    initMap ",value:function(e){var t=this,n=window.getMapTypes(),o={backgroundColor:"
                                                                                                                                                                                    transparent ",center:window.initialPosition,zoom:window.preferredZoom||window.initialZoom,zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.RIGHT_BOTTOM},mapTypeControl:n.length>1&&!window.isMobile,mapTypeControlOptions:{style:google.maps.MapTypeControlStyle.HORIZONTAL_BAR,position:google.maps.ControlPosition.BOTTOM_RIGHT,mapTypeIds:window.mapTypeIds},fullscreenControl:!window.isMobile&&!window.isEmbedded,fullscreenControlOptions:{position:google.maps.ControlPosition.RIGHT_TOP},streetViewControl:!1,gestureHandling:"
                                                                                                                                                                                    greedy "};W=new window.google.maps.Map(document.getElementById("
                                                                                                                                                                                    map "),o),window.map=W,(J=new google.maps.OverlayView).draw=function(){},J.setMap(W);var r=function(e){var t=document.createElement("
                                                                                                                                                                                    div ");t.className="
                                                                                                                                                                                    map - control "+(window.user?"
                                                                                                                                                                                    ":"
                                                                                                                                                                                    disabled ");var n=document.createElement("
                                                                                                                                                                                    img ");return n.src='data:image/svg+xml;utf8,  ',t.appendChild(n),t.setAttribute("
                                                                                                                                                                                    id ","
                                                                                                                                                                                    add - note - control "),t.setAttribute("
                                                                                                                                                                                    data - toggle ","
                                                                                                                                                                                    tooltip "),t.setAttribute("
                                                                                                                                                                                    data - placement ","
                                                                                                                                                                                    left "),window.user?(window.user.hasPro||t.setAttribute("
                                                                                                                                                                                    title ","
                                                                                                                                                                                    Upgrade to PRO to add more notes "),t.addEventListener("
                                                                                                                                                                                    click ",(function(){window.user.hasPro||window.mapData.notes.length<5?e():$(t).tooltip("
                                                                                                                                                                                    show ")}))):(t.setAttribute("
                                                                                                                                                                                    title ","
                                                                                                                                                                                    Login to add notes to the map "),t.addEventListener("
                                                                                                                                                                                    click ",(function(){$(t).tooltip("
                                                                                                                                                                                    show ")}))),t}(this.addNewNote);r.index=1,W.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(r);var i=new v(W,window.mapData.distanceToolConfig);if(i.enabled){var a=function(e){var t=be("
                                                                                                                                                                                    distance - tool - control ",'data:image/svg+xml;utf8,  ');return t.addEventListener("
                                                                                                                                                                                    click ",(function(){var n=document.getElementById("
                                                                                                                                                                                    radius - tool - control ");n&&ke(e,n),t.classList.contains("
                                                                                                                                                                                    disabled ")?function(e,t){t.classList.remove("
                                                                                                                                                                                    disabled "),te&&removeEditorClickListener(),Pe(!1),e.enableDistanceMode()}(e,t):Ee(e,t)})),t}(i);if(a.index=1,W.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(a),20===window.game.id){var c=function(e){var t=be("
                                                                                                                                                                                    radius - tool - control ",'data:image/svg+xml;utf8,  ');return t.addEventListener("
                                                                                                                                                                                    click ",(function(){var n=document.getElementById("
                                                                                                                                                                                    distance - tool - control ");Ee(e,n),t.classList.contains("
                                                                                                                                                                                    disabled ")?function(e,t){t.classList.remove("
                                                                                                                                                                                    disabled "),te&&removeEditorClickListener(),Pe(!1),e.enableRadiusTool()}(e,t):ke(e,t)})),document.getElementById("
                                                                                                                                                                                    radius - clear - button ").addEventListener("
                                                                                                                                                                                    click ",(function(){ke(e,t),e.clearRadiusOverlay()})),t}(i);c.index=1,W.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(c)}}if($(document).ready((function(){$('[data-toggle="
                                                                                                                                                                                    tooltip "]').tooltip(),$("
                                                                                                                                                                                    #marker - tooltip ").insertAfter(document.getElementById("
                                                                                                                                                                                    map ").querySelector(".gm - style "))})),n.length>1&&window.isMobile){var u=be("
                                                                                                                                                                                    toggle - map - type ",'data:image/svg+xml;utf8,  ');u.addEventListener("
                                                                                                                                                                                    click ",(function(){u.classList.contains("
                                                                                                                                                                                    disabled ")?(u.classList.remove("
                                                                                                                                                                                    disabled "),W.setMapTypeId(n[1].name)):(u.classList.add("
                                                                                                                                                                                    disabled "),W.setMapTypeId(n[0].name))})),W.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(u)}n.forEach((function(e){W.mapTypes.set(e.name,e)}));var d=n[0].name;W.setMapTypeId(d);var p,f,g=d.replace(/ /g," - ");if(document.body.classList.add(g),google.maps.event.addListener(W,"
                                                                                                                                                                                    maptypeid_changed ",(function(){document.body.classList.remove(g);var e=W.getMapTypeId();document.body.classList.add(e.replace(/ /g," - ")),d=e})),68!==window.mapData.map.id||window.user&&window.user.hasPro,google.maps.event.addListener(W,"
                                                                                                                                                                                    click ",(function(e){e.latLng,window.isMobile&&null!=de&&t.hideInfoWindow()})),window.user,window.isEditor){setupAdminAddMarkerListener();var h=(p=be("
                                                                                                                                                                                    move - markers - control ",'data:image/svg+xml;utf8,  '),f=function(e){me=e,_.forOwn(se,(function(t){t.setDraggable(e)}))},p.addEventListener("
                                                                                                                                                                                    click ",(function(){p.classList.contains("
                                                                                                                                                                                    disabled ")?(p.classList.remove("
                                                                                                                                                                                    disabled "),f(!0)):(p.classList.add("
                                                                                                                                                                                    disabled "),f(!1))})),p);W.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(h);var m=function(){var e=be("
                                                                                                                                                                                    add - marker - control ",'data:image/svg+xml;utf8,  ');return e.addEventListener("
                                                                                                                                                                                    click ",(function(){e.classList.contains("
                                                                                                                                                                                    disabled ")?(e.classList.remove("
                                                                                                                                                                                    disabled "),K.dispatch(s.cq.setAddMarkerControlsVisible(!0))):(e.classList.add("
                                                                                                                                                                                    disabled "),K.dispatch(s.cq.setAddMarkerControlsVisible(!1)))})),e}();W.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(m)}var y=new google.maps.LatLngBounds,w=!1,b=window.visibleLocations&&1===Object.keys(window.visibleLocations).length;e.forEach((function(e){var n=t.addMarker(e);window.visibleLocations?window.visibleLocations[e.id]?(y.extend(n.getPosition()),w=!0,b&&t.openInfoWindow(e,n)):n.setMap(null):window.visibleCategories?window.visibleCategories[e.category_id]?(y.extend(n.getPosition()),w=!0):n.setMap(null):e.category.visible||n.setMap(null)}));var E,k,x=window.mapData.notes,C=window.mapData.sharedNotes,S=C&&1===Object.keys(C).length?Object.keys(C)[0]:null;if(x.forEach((function(e){var n=t.addNoteMarker(e);le[e.id]=n,C[e.id]?(n.setMap(W),y.extend(n.getPosition()),w=!0,S===e.id&&setTimeout((function(){K.dispatch(l.cq.selectNote(e,!0))}),2e3)):n.setMap(null)})),w&&(window.preferredZoom&&google.maps.event.addListenerOnce(W,"
                                                                                                                                                                                    bounds_changed ",(function(){this.setZoom(window.preferredZoom)})),W.fitBounds(y)),1===mapData.map.id)Oe([{bounds:{north:68.52729582060361,south:66.35986138358615,east:98.76487630100473,west:95.70865559787967},imageUrl:"
                                                                                                                                                                                    l_14_cave.svg "},{bounds:{north:70.63534686482888,south:70.25382884982702,east:116.51144870769394,west:113.88079441081891},imageUrl:"
                                                                                                                                                                                    ann_coal.svg "},{bounds:{north:70.85101299571456,south:69.50412708247543,east:111.851806640625,west:108.88104858398435},imageUrl:"
                                                                                                                                                                                    ann_mine_int_main.svg "},{bounds:{north:71.52956450932612,south:70.44056318275513,east:99.12397242979432,west:95.89109157041935},imageUrl:"
                                                                                                                                                                                    bea_01_int.svg "},{bounds:{north:62.96400889880602,south:61.973474876835574,east:-48.3837890625,west:-50.53436279296875},imageUrl:"
                                                                                                                                                                                    bgv_devilcave_int.svg "},{bounds:{north:8.673155048486413,south:7.925434318171292,east:59.84688842423759,west:58.87415893205002},imageUrl:"
                                                                                                                                                                                    bra_mansion_int.svg "},{bounds:{north:75.17305748053528,south:74.98884120739638,east:54.4824365496778,west:53.41983889342782},imageUrl:"
                                                                                                                                                                                    dis_grz_statue_int.svg "},{bounds:{north:73.33451239617452,south:73.0789335726444,east:100.17047875943285,west:99.1248879391203},imageUrl:"
                                                                                                                                                                                    dis_stonehenge_int.svg "},{bounds:{north:24.924291893835097,south:23.533480574509007,east:5.664517848173091,west:4.560787379423118},imageUrl:"
                                                                                                                                                                                    Exterior_Blackwater_Regular.svg "},{bounds:{north:16.33984676085247,south:13.242995605104078,east:112.45065024040355,west:100.67919516227857},imageUrl:"
                                                                                                                                                                                    Exterior_StDenisBoat.svg "},{bounds:{north:-6.506579617332966,south:-7.560511302129272,east:-9.782049791193458,west:-10.262591783380913},imageUrl:"
                                                                                                                                                                                    Exterior_ThievesLandingBoat.svg "},{bounds:{north:60.04234086394987,south:59.263423724902204,east:118.29037531225777,west:117.18811701147649},imageUrl:"
                                                                                                                                                                                    Exterior_VanHornBoat.svg "},{bounds:{north:-28.97061502848316,south:-31.795190399757832,east:-143.92328581481075,west:-146.61076140074823},imageUrl:"
                                                                                                                                                                                    gap_mine_int.svg "},{bounds:{north:73.95269560823652,south:73.57193518485067,east:100.91317347911377,west:100.0622603931763},imageUrl:"
                                                                                                                                                                                    j_14_cave01_int.svg "},{bounds:{north:63.116219575630964,south:62.808786360070314,east:-14.487466591181374,west:-14.889401405634544},imageUrl:"
                                                                                                                                                                                    l_07_cave_int.svg "},{bounds:{north:53.73501784537381,south:51.95109492787571,east:-31.047772251370816,west:-33.52470584512082},imageUrl:"
                                                                                                                                                                                    m05_bearcave_int.svg "},{bounds:{north:53.694699401266895,south:53.13781754138063,east:-38.29785724357146,west:-39.89224811271208},imageUrl:"
                                                                                                                                                                                    m05_mine_int.svg "},{bounds:{north:68.7692196920883,south:68.07436107102669,east:-10.606905155027903,west:-12.684804324949823},imageUrl:"
                                                                                                                                                                                    mil_mine.svg "},{bounds:{north:16.50738708935378,south:15.537241361170896,east:98.60934899649249,west:97.2689071019613},imageUrl:"
                                                                                                                                                                                    new_pie_tunnel_int.svg "},{bounds:{north:63.51656320932451,south:63.25552245058611,east:20.570399483251435,west:20.076234444188913},imageUrl:"
                                                                                                                                                                                    val_hotel_int_main.svg "},{bounds:{north:64.06357580685624,south:63.76284672760172,east:20.91542650925294,west:20.47048022019044},imageUrl:"
                                                                                                                                                                                    val_saloon_int.svg "}],{displayZoom:5,baseUrl:" / images / maps / rdr2 / overlays / ",opacity:.7});else if(3===mapData.map.id)Oe([{bounds:{north:1.0036576476813068,south:.9794673163315637,east:-.7790622600058441,west:-.8207759746054535},imageUrl:"
                                                                                                                                                                                    dawnguard.png "},{bounds:{north:1.3660443013819419,south:1.3237843333566026,east:-1.312255350319333,west:-1.3514370596088838},imageUrl:"
                                                                                                                                                                                    volkihar_castle.png "}],{displayZoom:14,baseUrl:" / images / maps / skyrim / skyrim / overlays / ",opacity:1});else if(5===mapData.map.id||63===mapData.map.id)Se(mapData.regions.map((function(e){return{title:e.title,coords:e.features[0].geometry.coordinates[0].map((function(e){return{lat:e[1],lng:e[0]}})),isDarkZone:e.title.startsWith("
                                                                                                                                                                                    DZ ")}})),{fontFamily:"
                                                                                                                                                                                    Borda Medium, sans - serif ",fontColor:"
                                                                                                                                                                                    white ",borderColor:"
                                                                                                                                                                                    white "});else if(6===mapData.map.id)Se(mapData.regions.map((function(e){return{title:e.title,coords:e.features[0].geometry.coordinates[0].map((function(e){return{lat:e[1],lng:e[0]}})),isDarkZone:!1}})),{fontFamily:"
                                                                                                                                                                                    zanzinger, sans - serif ",fontColor:"
                                                                                                                                                                                    #FFF6DE ",borderColor:"
                                                                                                                                                                                    #FFF6DE ",polygonStrokeWeight:2,strokeWeight:4,strokeColor:"
                                                                                                                                                                                    black "});else if(7===mapData.map.id){var O={fontFamily:"
                                                                                                                                                                                    sans - serif ",fontColor:"
                                                                                                                                                                                    #dad636 ",borderColor:"
                                                                                                                                                                                    #58bca1",borderColorHover:"# dad636 ",fillOpacity:0,fillOpacityHover:.1,polygonStrokeWeight:2,strokeWeight:4,strokeColor:"
                                                                                                                                                                                    black "};_e(mapData.regions.filter((function(e){return e.features&&e.features.length>0})).map((function(e){return{title:e.title,coords:e.features[0].geometry.coordinates[0].map((function(e){return{lat:e[1],lng:e[0]}})),style:O}})))}else if(28===window.game.id){var P={fontFamily:"
                                                                                                                                                                                    CompactWhiskey, sans - serif ",fontColor:"
                                                                                                                                                                                    #FFFFFF ",fontSize:18,borderColor:"
                                                                                                                                                                                    #4F5151",borderColorHover:"# b1b1b1 ",fillOpacity:0,fillOpacityHover:0,polygonStrokeWeight:0,strokeWeight:0,strokeColor:"
                                                                                                                                                                                    #000000",clickable:!1,polygonEnabled:!1};_e(mapData.regions.filter((function(e){return e.features&&e.features.length>0})).map((function(e){return{title:e.title,coords:e.features[0].geometry.coordinates[0].map((function(e){return{lat:e[1],lng:e[0]}})),style:P}})))}else if(29= == window.game.id) {
                                                                                                                                                                                    var L = {
                                                                                                                                                                                            fontFamily: "Lintel, sans-serif",
                                                                                                                                                                                            fontColor: "#c29cd8",
                                                                                                                                                                                            borderColor: "#533f5d",
                                                                                                                                                                                            borderColorHover: "#533f5d",
                                                                                                                                                                                            fillOpacity: .2,
                                                                                                                                                                                            fillOpacityHover: .4,
                                                                                                                                                                                            polygonStrokeWeight: 2,
                                                                                                                                                                                            strokeWeight: 2,
                                                                                                                                                                                            strokeColor: "#372a3e"
                                                                                                                                                                                        },
                                                                                                                                                                                        T = {
                                                                                                                                                                                            fontFamily: "Lintel, sans-serif",
                                                                                                                                                                                            fontColor: "#769CB3",
                                                                                                                                                                                            borderColor: "#445A67",
                                                                                                                                                                                            borderColorHover: "#445A67",
                                                                                                                                                                                            fillOpacity: .2,
                                                                                                                                                                                            fillOpacityHover: .4,
                                                                                                                                                                                            polygonStrokeWeight: 2,
                                                                                                                                                                                            strokeWeight: 2,
                                                                                                                                                                                            strokeColor: "#253139"
                                                                                                                                                                                        },
                                                                                                                                                                                        M = {
                                                                                                                                                                                            fontFamily: "Lintel, sans-serif",
                                                                                                                                                                                            fontColor: "#61BA76",
                                                                                                                                                                                            borderColor: "#3C7449",
                                                                                                                                                                                            borderColorHover: "#3C7449",
                                                                                                                                                                                            fillOpacity: .2,
                                                                                                                                                                                            fillOpacityHover: .4,
                                                                                                                                                                                            polygonStrokeWeight: 2,
                                                                                                                                                                                            strokeWeight: 2,
                                                                                                                                                                                            strokeColor: "#23462B"
                                                                                                                                                                                        },
                                                                                                                                                                                        I = {
                                                                                                                                                                                            fontFamily: "Lintel, sans-serif",
                                                                                                                                                                                            fontColor: "#efefef",
                                                                                                                                                                                            borderColor: "#b1b1b1",
                                                                                                                                                                                            borderColorHover: "#b1b1b1",
                                                                                                                                                                                            fillOpacity: .1,
                                                                                                                                                                                            fillOpacityHover: .2,
                                                                                                                                                                                            polygonStrokeWeight: 2,
                                                                                                                                                                                            strokeWeight: 1,
                                                                                                                                                                                            strokeColor: "#aaaaaa"
                                                                                                                                                                                        },
                                                                                                                                                                                        N = {
                                                                                                                                                                                            126: L,
                                                                                                                                                                                            127: L,
                                                                                                                                                                                            128: L,
                                                                                                                                                                                            129: T,
                                                                                                                                                                                            130: T,
                                                                                                                                                                                            131: T,
                                                                                                                                                                                            132: I,
                                                                                                                                                                                            133: I,
                                                                                                                                                                                            134: M,
                                                                                                                                                                                            135: M,
                                                                                                                                                                                            136: M
                                                                                                                                                                                        };
                                                                                                                                                                                    _e(mapData.regions.filter((function(e) {
                                                                                                                                                                                        return e.features && e.features.length > 0
                                                                                                                                                                                    })).map((function(e) {
                                                                                                                                                                                        return {
                                                                                                                                                                                            title: e.title,
                                                                                                                                                                                            coords: e.features[0].geometry.coordinates[0].map((function(e) {
                                                                                                                                                                                                return {
                                                                                                                                                                                                    lat: e[1],
                                                                                                                                                                                                    lng: e[0]
                                                                                                                                                                                                }
                                                                                                                                                                                            })),
                                                                                                                                                                                            style: N[e.id] || I
                                                                                                                                                                                        }
                                                                                                                                                                                    })))
                                                                                                                                                                                } else if (41 === window.game.id) {
                                                                                                                                                                                    var R = {
                                                                                                                                                                                        fontFamily: "aaux-pro, sans-serif",
                                                                                                                                                                                        fontColor: "#FFFFFF",
                                                                                                                                                                                        fontSize: 14,
                                                                                                                                                                                        borderColor: "#4F5151",
                                                                                                                                                                                        borderColorHover: "#b1b1b1",
                                                                                                                                                                                        fillOpacity: 0,
                                                                                                                                                                                        fillOpacityHover: 0,
                                                                                                                                                                                        polygonStrokeWeight: 0,
                                                                                                                                                                                        strokeWeight: 2,
                                                                                                                                                                                        strokeColor: "#000000",
                                                                                                                                                                                        clickable: !1
                                                                                                                                                                                    };
                                                                                                                                                                                    _e(mapData.regions.filter((function(e) {
                                                                                                                                                                                        return e.features && e.features.length > 0
                                                                                                                                                                                    })).map((function(e) {
                                                                                                                                                                                        return {
                                                                                                                                                                                            title: e.title.toUpperCase(),
                                                                                                                                                                                            coords: e.features[0].geometry.coordinates[0].map((function(e) {
                                                                                                                                                                                                return {
                                                                                                                                                                                                    lat: e[1],
                                                                                                                                                                                                    lng: e[0]
                                                                                                                                                                                                }
                                                                                                                                                                                            })),
                                                                                                                                                                                            style: R,
                                                                                                                                                                                            center_x: e.center_x,
                                                                                                                                                                                            center_y: e.center_y
                                                                                                                                                                                        }
                                                                                                                                                                                    })))
                                                                                                                                                                                } else if (50 === window.game.id) {
                                                                                                                                                                                    var F = {
                                                                                                                                                                                        fontFamily: "AmyrisBold, sans-serif",
                                                                                                                                                                                        fontColor: "#E9DB7D",
                                                                                                                                                                                        fontSize: 16,
                                                                                                                                                                                        borderColor: "#000000",
                                                                                                                                                                                        borderColorHover: "#000000",
                                                                                                                                                                                        fillOpacity: 0,
                                                                                                                                                                                        fillOpacityHover: 0,
                                                                                                                                                                                        polygonStrokeWeight: 0,
                                                                                                                                                                                        strokeWeight: 2,
                                                                                                                                                                                        strokeColor: "#000000",
                                                                                                                                                                                        clickable: !1
                                                                                                                                                                                    };
                                                                                                                                                                                    _e(mapData.regions.map((function(e) {
                                                                                                                                                                                        return {
                                                                                                                                                                                            title: e.title,
                                                                                                                                                                                            coords: null,
                                                                                                                                                                                            style: F,
                                                                                                                                                                                            center_x: e.center_x,
                                                                                                                                                                                            center_y: e.center_y
                                                                                                                                                                                        }
                                                                                                                                                                                    })))
                                                                                                                                                                                } else if (48 === window.game.id) {
                                                                                                                                                                                    var D = {
                                                                                                                                                                                        fontFamily: "Orpheus, serif",
                                                                                                                                                                                        fontColor: "#2e2a24",
                                                                                                                                                                                        fontSize: 16,
                                                                                                                                                                                        borderColor: "#000000",
                                                                                                                                                                                        borderColorHover: "#000000",
                                                                                                                                                                                        fillOpacity: 0,
                                                                                                                                                                                        fillOpacityHover: 0,
                                                                                                                                                                                        polygonStrokeWeight: 0,
                                                                                                                                                                                        strokeWeight: 2,
                                                                                                                                                                                        strokeColor: "#908679",
                                                                                                                                                                                        clickable: !1
                                                                                                                                                                                    };
                                                                                                                                                                                    _e(mapData.regions.map((function(e) {
                                                                                                                                                                                        return {
                                                                                                                                                                                            title: e.title,
                                                                                                                                                                                            coords: null,
                                                                                                                                                                                            style: D,
                                                                                                                                                                                            center_x: e.center_x,
                                                                                                                                                                                            center_y: e.center_y
                                                                                                                                                                                        }
                                                                                                                                                                                    })))
                                                                                                                                                                                } else if (80 === window.game.id) {
                                                                                                                                                                                    var A = {
                                                                                                                                                                                        fontFamily: "IMFellDWPica, serif",
                                                                                                                                                                                        fontColor: "#E4E0DD",
                                                                                                                                                                                        fontSize: 20,
                                                                                                                                                                                        borderColor: "#E4E0DD",
                                                                                                                                                                                        borderColorHover: "#000000",
                                                                                                                                                                                        fillOpacity: 0,
                                                                                                                                                                                        fillOpacityHover: 0,
                                                                                                                                                                                        polygonStrokeWeight: 2,
                                                                                                                                                                                        strokeWeight: 2,
                                                                                                                                                                                        strokeColor: "#56524D",
                                                                                                                                                                                        clickable: !1
                                                                                                                                                                                    };
                                                                                                                                                                                    _e(mapData.regions.map((function(e) {
                                                                                                                                                                                        return {
                                                                                                                                                                                            title: e.title,
                                                                                                                                                                                            coords: e.features && e.features.length ? e.features[0].geometry.coordinates[0].map((function(e) {
                                                                                                                                                                                                return {
                                                                                                                                                                                                    lat: e[1],
                                                                                                                                                                                                    lng: e[0]
                                                                                                                                                                                                }
                                                                                                                                                                                            })) : null,
                                                                                                                                                                                            style: A,
                                                                                                                                                                                            center_x: e.center_x,
                                                                                                                                                                                            center_y: e.center_y
                                                                                                                                                                                        }
                                                                                                                                                                                    })))
                                                                                                                                                                                } else window.getOverlay && (E = window.getOverlay(), (k = $("#toggle-overlay")).hasClass("disabled") ? W.overlayMapTypes.setAt(0, null) : W.overlayMapTypes.setAt(0, E), k.click((function() {
                                                                                                                                                                                    var e = $(this);
                                                                                                                                                                                    e.toggleClass("disabled"), e.hasClass("disabled") ? W.overlayMapTypes.setAt(0, null) : W.overlayMapTypes.setAt(0, E)
                                                                                                                                                                                })));
                                                                                                                                                                                window.isEditor && (document.addEventListener("keydown", (function(e) {
                                                                                                                                                                                    16 === e.which && (fe = !0)
                                                                                                                                                                                })), document.addEventListener("keyup", (function(e) {
                                                                                                                                                                                    16 === e.which && (fe = !1)
                                                                                                                                                                                })))
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            key: "addMarker",
                                                                                                                                                                            value: function(e) {
                                                                                                                                                                                var t = e.features && e.features.length > 0 && "Polygon" === e.features[0].geometry.type;
                                                                                                                                                                                if (t && 80 !== window.game.id) {
                                                                                                                                                                                    var n = e.features[0].geometry,
                                                                                                                                                                                        i = re[e.category_id] || {
                                                                                                                                                                                            strokeColor: "#CC4411",
                                                                                                                                                                                            fillColor: "#CC4411"
                                                                                                                                                                                        },
                                                                                                                                                                                        s = new google.maps.Polygon({
                                                                                                                                                                                            paths: n.coordinates[0].map((function(e) {
                                                                                                                                                                                                return {
                                                                                                                                                                                                    lat: e[1],
                                                                                                                                                                                                    lng: e[0]
                                                                                                                                                                                                }
                                                                                                                                                                                            })),
                                                                                                                                                                                            strokeColor: i.strokeColor,
                                                                                                                                                                                            strokeOpacity: .8,
                                                                                                                                                                                            strokeWeight: 1,
                                                                                                                                                                                            fillColor: i.fillColor,
                                                                                                                                                                                            fillOpacity: ae
                                                                                                                                                                                        });
                                                                                                                                                                                    return s.setMap(W), se[e.id] = s, s
                                                                                                                                                                                }
                                                                                                                                                                                var c = window.user,
                                                                                                                                                                                    u = e.category,
                                                                                                                                                                                    d = c && c.locations[e.id];
                                                                                                                                                                                if (954 === e.category_id) {
                                                                                                                                                                                    var p = "#62CEFE",
                                                                                                                                                                                        f = e.title.toUpperCase(); - 1 !== f.indexOf("[PMC]") ? (p = "#00E99B", f = f.replace("[PMC]", "")) : -1 !== f.indexOf("[SCAV]") ? (p = "#FFAA00", f = f.replace("[SCAV]", "")) : f = f.replace("[ALL]", ""), new MapLabel({
                                                                                                                                                                                        text: f,
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 16,
                                                                                                                                                                                        fontColor: p,
                                                                                                                                                                                        fontFamily: "Bender, sans-serif",
                                                                                                                                                                                        strokeWeight: 6,
                                                                                                                                                                                        strokeColor: "#000",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    })
                                                                                                                                                                                } else if (952 === e.category_id) {
                                                                                                                                                                                    var g = new MapLabel({
                                                                                                                                                                                        text: e.title,
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 12,
                                                                                                                                                                                        fontColor: "#ffffff",
                                                                                                                                                                                        fontFamily: "Bender, sans-serif",
                                                                                                                                                                                        strokeWeight: 3,
                                                                                                                                                                                        strokeColor: "#000000",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = g, g
                                                                                                                                                                                } else if (978 === e.category_id) {
                                                                                                                                                                                    var h = new MapLabel({
                                                                                                                                                                                        text: e.title.toUpperCase(),
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 139 === window.mapData.map.id ? 12 : 14,
                                                                                                                                                                                        fontColor: "rgba(255, 255, 255, 1)",
                                                                                                                                                                                        fontFamily: "Roboto, sans-serif",
                                                                                                                                                                                        strokeWeight: 139 === window.mapData.map.id ? 8 : 10,
                                                                                                                                                                                        strokeColor: "rgba(22,22,22,0.6)",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = h, h
                                                                                                                                                                                } else if (1042 === e.category_id) {
                                                                                                                                                                                    var m = new MapLabel({
                                                                                                                                                                                        text: e.title.toUpperCase(),
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 12,
                                                                                                                                                                                        fontColor: "#ffffff",
                                                                                                                                                                                        fontFamily: "ITC Serif Gothic LT Bold, sans-serif",
                                                                                                                                                                                        strokeWeight: 0,
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = m, m
                                                                                                                                                                                } else if (1450 === e.category_id) {
                                                                                                                                                                                    var y = new MapLabel({
                                                                                                                                                                                        text: e.title.toUpperCase(),
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 13,
                                                                                                                                                                                        fontColor: "#ffffff",
                                                                                                                                                                                        fontFamily: "CenturyGothic, sans-serif",
                                                                                                                                                                                        strokeWeight: 1.5,
                                                                                                                                                                                        strokeColor: "#000000",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = y, y
                                                                                                                                                                                } else if (1896 === e.category_id) {
                                                                                                                                                                                    var v = new MapLabel({
                                                                                                                                                                                        text: e.title,
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 13,
                                                                                                                                                                                        fontColor: "#ffffff",
                                                                                                                                                                                        fontFamily: "CronosProBold, sans-serif",
                                                                                                                                                                                        strokeWeight: 1.5,
                                                                                                                                                                                        strokeColor: "#000000",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = v, v
                                                                                                                                                                                } else if (2200 === e.category_id) {
                                                                                                                                                                                    var w = new MapLabel({
                                                                                                                                                                                        text: e.title,
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 14,
                                                                                                                                                                                        fontColor: "#111111",
                                                                                                                                                                                        fontFamily: "Orpheus, serif",
                                                                                                                                                                                        strokeWeight: 2,
                                                                                                                                                                                        strokeColor: "#8c8c8c",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = w, w
                                                                                                                                                                                } else if (2250 === e.category_id) {
                                                                                                                                                                                    var b = new MapLabel({
                                                                                                                                                                                        text: e.title.toUpperCase(),
                                                                                                                                                                                        position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                        map: W,
                                                                                                                                                                                        fontSize: 11,
                                                                                                                                                                                        fontColor: "#FFFFFF",
                                                                                                                                                                                        fontFamily: "AvalonPlain, sans-serif",
                                                                                                                                                                                        strokeWeight: 0,
                                                                                                                                                                                        strokeColor: "#8c8c8c",
                                                                                                                                                                                        align: "center"
                                                                                                                                                                                    });
                                                                                                                                                                                    if (!window.isEditor) return se[e.id] = b, b
                                                                                                                                                                                } else {
                                                                                                                                                                                    if (214 === u.group_id) {
                                                                                                                                                                                        var E = re[e.category_id] || {
                                                                                                                                                                                                strokeColor: "#CC4411",
                                                                                                                                                                                                fillColor: "#CC4411"
                                                                                                                                                                                            },
                                                                                                                                                                                            k = new google.maps.Circle({
                                                                                                                                                                                                strokeColor: E.strokeColor,
                                                                                                                                                                                                strokeOpacity: .9,
                                                                                                                                                                                                strokeWeight: 1,
                                                                                                                                                                                                fillColor: E.fillColor,
                                                                                                                                                                                                fillOpacity: E.fillOpacity,
                                                                                                                                                                                                map: W,
                                                                                                                                                                                                center: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                                radius: 139 === window.mapData.map.id ? 1800 : 750
                                                                                                                                                                                            });
                                                                                                                                                                                        return se[e.id] = k, window.isEditor && k.addListener("click", (function() {
                                                                                                                                                                                            var t = a.wl.getLocation(K.getState(), e.id);
                                                                                                                                                                                            K.dispatch(a.cq.showLocationInfo(t, !0))
                                                                                                                                                                                        })), k
                                                                                                                                                                                    }
                                                                                                                                                                                    if (2330 === u.id) {
                                                                                                                                                                                        var x = new MapLabel({
                                                                                                                                                                                            text: e.title,
                                                                                                                                                                                            position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                            map: W,
                                                                                                                                                                                            fontSize: 15,
                                                                                                                                                                                            fontColor: "#ffffff",
                                                                                                                                                                                            fontFamily: "NHGRegular, sans-serif",
                                                                                                                                                                                            strokeWeight: 2,
                                                                                                                                                                                            strokeColor: "#000000",
                                                                                                                                                                                            align: "center"
                                                                                                                                                                                        });
                                                                                                                                                                                        if (!window.isEditor) return se[e.id] = x, x
                                                                                                                                                                                    } else if (2713 === u.id) {
                                                                                                                                                                                        var C = new MapLabel({
                                                                                                                                                                                            text: e.title,
                                                                                                                                                                                            position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                            map: W,
                                                                                                                                                                                            fontSize: 12,
                                                                                                                                                                                            fontColor: "#ffffff",
                                                                                                                                                                                            fontFamily: "PalatinoL, serif",
                                                                                                                                                                                            strokeWeight: 2,
                                                                                                                                                                                            strokeColor: "#000000",
                                                                                                                                                                                            align: "center"
                                                                                                                                                                                        });
                                                                                                                                                                                        if (!window.isEditor) return se[e.id] = C, C
                                                                                                                                                                                    } else {
                                                                                                                                                                                        if (3584 === u.id) {
                                                                                                                                                                                            var S = new MapLabel({
                                                                                                                                                                                                text: e.title,
                                                                                                                                                                                                position: new google.maps.LatLng(e.latitude, e.longitude),
                                                                                                                                                                                                map: W,
                                                                                                                                                                                                fontSize: 14,
                                                                                                                                                                                                fontColor: 264 === window.mapData.map.id ? "#1E1819" : "#E4E0DD",
                                                                                                                                                                                                fontFamily: "IMFellDWPica, serif",
                                                                                                                                                                                                strokeWeight: 264 === window.mapData.map.id ? 0 : 1,
                                                                                                                                                                                                strokeColor: 264 === window.mapData.map.id ? 0 : "#56524D",
                                                                                                                                                                                                align: "center"
                                                                                                                                                                                            });
                                                                                                                                                                                            return se[e.id] = S, S
                                                                                                                                                                                        }
                                                                                                                                                                                        if (80 === window.game.id && t) {
                                                                                                                                                                                            var _ = e.features[0].geometry,
                                                                                                                                                                                                O = (e.tags.length ? ie[e.tags[0]] : re[e.category_id]) || {
                                                                                                                                                                                                    strokeColor: "#7B2E25",
                                                                                                                                                                                                    fillColor: "#7B2E25"
                                                                                                                                                                                                },
                                                                                                                                                                                                P = new google.maps.Polygon({
                                                                                                                                                                                                    paths: _.coordinates[0].map((function(e) {
                                                                                                                                                                                                        return {
                                                                                                                                                                                                            lat: e[1],
                                                                                                                                                                                                            lng: e[0]
                                                                                                                                                                                                        }
                                                                                                                                                                                                    })),
                                                                                                                                                                                                    strokeColor: O.fillColor,
                                                                                                                                                                                                    strokeOpacity: 1,
                                                                                                                                                                                                    strokeWeight: 1,
                                                                                                                                                                                                    fillColor: O.fillColor,
                                                                                                                                                                                                    fillOpacity: ae,
                                                                                                                                                                                                    clickable: !1
                                                                                                                                                                                                });
                                                                                                                                                                                            return P.setMap(W), se[e.id] = P, P
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                    }, 38418: () => {
                                                                                                                            var e = null;

                                                                                                                            function t(e) {
                                                                                                                                this.set("fontFamily", "sans-serif"), this.set("fontWeight", "normal"), this.set("fontSize", 12), this.set("fontColor", "#000000"), this.set("strokeWeight", 4), this.set("strokeColor", "#ffffff"), this.set("align", "center"), this.set("zIndex", 1e3), this.setValues(e)
                                                                                                                            }
                                                                                                                            t.prototype = new google.maps.OverlayView, window.MapLabel = t, t.prototype.changed = function(e) {
                                                                                                                                switch (e) {
                                                                                                                                    case "fontFamily":
                                                                                                                                    case "fontWeight":
                                                                                                                                    case "fontSize":
                                                                                                                                    case "fontColor":
                                                                                                                                    case "strokeWeight":
                                                                                                                                    case "strokeColor":
                                                                                                                                    case "align":
                                                                                                                                    case "text":
                                                                                                                                        return this.drawCanvas_();
                                                                                                                                    case "maxZoom":
                                                                                                                                    case "minZoom":
                                                                                                                                    case "position":
                                                                                                                                        return this.draw()
                                                                                                                                }
                                                                                                                            
        }, 8679: (e, t, n) => {
            "use strict";
            var o = n(59864),
                r = {
                    childContextTypes: !0,
                    contextType: !0,
                    contextTypes: !0,
                    defaultProps: !0,
                    displayName: !0,
                    getDefaultProps: !0,
                    getDerivedStateFromError: !0,
                    getDerivedStateFromProps: !0,
                    mixins: !0,
                    propTypes: !0,
                    type: !0
                },
                i = {
                    name: !0,
                    length: !0,
                    prototype: !0,
                    caller: !0,
                    callee: !0,
                    arguments: !0,
                    arity: !0
                },
                a = {
                    $$typeof: !0,
                    compare: !0,
                    defaultProps: !0,
                    displayName: !0,
                    propTypes: !0,
                    type: !0
                },
                s = {};

            function l(e) {
                return o.isMemo(e) ? a : s[e.$$typeof] || r
            }
            s[o.ForwardRef] = {
                $$typeof: !0,
                render: !0,
                defaultProps: !0,
                displayName: !0,
                propTypes: !0
            }, s[o.Memo] = a;
            var c = Object.defineProperty,
                u = Object.getOwnPropertyNames,
                d = Object.getOwnPropertySymbols,
                p = Object.getOwnPropertyDescriptor,
                f = Object.getPrototypeOf,
                g = Object.prototype;
            e.exports = function e(t, n, o) {
                e = n.nmd(e),
                    function() {
                        var r, i = "Expected a function",
                            a = "__lodash_hash_undefined__",
                            s = "__lodash_placeholder__",
                            l = 16,
                            c = 32,
                            u = 64,
                            d = 128,
                            p = 256,
                            f = 1 / 0,
                            g = 9007199254740991,
                            h = NaN,
                            m = 4294967295,
                            y = [
                                ["ary", d],
                                ["bind", 1],
                                ["bindKey", 2],
                                ["curry", 8],
                                ["curryRight", l],
                                ["flip", 512],
                                ["partial", c],
                                ["partialRight", u],
                                ["rearg", p]
                            ],
                            v = "[object Arguments]",
                            w = "[object Array]",
                            b = "[object Boolean]",
                            E = "[object Date]",
                            k = "[object Error]",
                            x = "[object Function]",
                            C = "[object GeneratorFunction]",
                            S = "[object Map]",
                            _ = "[object Number]",
                            O = "[object Object]",
                            P = "[object Promise]",
                            L = "[object RegExp]",
                            T = "[object Set]",
                            M = "[object String]",
                            I = "[object Symbol]",
                            N = "[object WeakMap]",
                            R = "[object ArrayBuffer]",
                            F = "[object DataView]",
                            D = "[object Float32Array]",
                            A = "[object Float64Array]",
                            j = "[object Int8Array]",
                            B = "[object Int16Array]",
                            z = "[object Int32Array]",
                            Z = "[object Uint8Array]",
                            U = "[object Uint8ClampedArray]",
                            W = "[object Uint16Array]",
                            H = "[object Uint32Array]",
                            V = /\b__p \+= '';/g,
                            $ = /\b(__p \+=) '' \+/g,
                            q = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                            G = /&(?:amp|lt|gt|quot|#39);/g,
                            K = /[&<>"']/g,
                            Y = RegExp(G.source),
                            X = RegExp(K.source),
                            Q = /<%-([\s\S]+?)%>/g,
                            J = /<%([\s\S]+?)%>/g,
                            ee = /<%=([\s\S]+?)%>/g,
                            te = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                            ne = /^\w*$/,
                            oe = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                            re = /[\\^$.*+?()[\]{}|]/g,
                            ie = RegExp(re.source),
                            ae = /^\s+|\s+$/g,
                            se = /^\s+/,
                            le = /\s+$/,
                            ce = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                            ue = /\{\n\/\* \[wrapped with (.+)\] \*/,
                            de = /,? & /,
                            pe = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                            fe = /\\(\\)?/g,
                            ge = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                            he = /\w*$/,
                            me = /^[-+]0x[0-9a-f]+$/i,
                            ye = /^0b[01]+$/i,
                            ve = /^\[object .+?Constructor\]$/,
                            we = /^0o[0-7]+$/i,
                            be = /^(?:0|[1-9]\d*)$/,
                            Ee = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                            ke = /($^)/,
                            xe = /['\n\r\u2028\u2029\\]/g,
                            Ce = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                            Se = "\\u2700-\\u27bf",
                            _e = "a-z\\xdf-\\xf6\\xf8-\\xff",
                            Oe = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                            Pe = "\\ufe0e\\ufe0f",
                            Le = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                            Te = "['â€™]",
                            Me = "[\\ud800-\\udfff]",
                            Ie = "[" + Le + "]",
                            Ne = "[" + Ce + "]",
                            Re = "\\d+",
                            Fe = "[\\u2700-\\u27bf]",
                            De = "[" + _e + "]",
                            Ae = "[^\\ud800-\\udfff" + Le + Re + Se + _e + Oe + "]",
                            je = "\\ud83c[\\udffb-\\udfff]",
                            Be = "[^\\ud800-\\udfff]",
                            ze = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                            Ze = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                            Ue = "[" + Oe + "]",
                            We = "(?:" + De + "|" + Ae + ")",
                            He = "(?:" + Ue + "|" + Ae + ")",
                            Ve = "(?:['â€™](?:d|ll|m|re|s|t|ve))?",
                            $e = "(?:['â€™](?:D|LL|M|RE|S|T|VE))?",
                            qe = "(?:" + Ne + "|" + je + ")" + "?",
                            Ge = "[\\ufe0e\\ufe0f]?",
                            Ke = Ge + qe + ("(?:\\u200d(?:" + [Be, ze, Ze].join("|") + ")" + Ge + qe + ")*"),
                            Ye = "(?:" + [Fe, ze, Ze].join("|") + ")" + Ke,
                            Xe = "(?:" + [Be + Ne + "?", Ne, ze, Ze, Me].join("|") + ")",
                            Qe = RegExp(Te, "g"),
                            Je = RegExp(Ne, "g"),
                            et = RegExp(je + "(?=" + je + ")|" + Xe + Ke, "g"),
                            tt = RegExp([Ue + "?" + De + "+" + Ve + "(?=" + [Ie, Ue, "$"].join("|") + ")", He + "+" + $e + "(?=" + [Ie, Ue + We, "$"].join("|") + ")", Ue + "?" + We + "+" + Ve, Ue + "+" + $e, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Re, Ye].join("|"), "g"),
                            nt = RegExp("[\\u200d\\ud800-\\udfff" + Ce + Pe + "]"),
                            ot = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                            rt = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                            it = -1,
                            at = {};
                        at[D] = at[A] = at[j] = at[B] = at[z] = at[Z] = at[U] = at[W] = at[H] = !0, at[v] = at[w] = at[R] = at[b] = at[F] = at[E] = at[k] = at[x] = at[S] = at[_] = at[O] = at[L] = at[T] = at[M] = at[N] = !1;
                        var st = {};
                        st[v] = st[w] = st[R] = st[F] = st[b] = st[E] = st[D] = st[A] = st[j] = st[B] = st[z] = st[S] = st[_] = st[O] = st[L] = st[T] = st[M] = st[I] = st[Z] = st[U] = st[W] = st[H] = !0, st[k] = st[x] = st[N] = !1;
                        var lt = {
                                "\\": "\\",
                                "'": "'",
                                "\n": "n",
                                "\r": "r",
                                "\u2028": "u2028",
                                "\u2029": "u2029"
                            },
                            ct = parseFloat,
                            ut = parseInt,
                            dt = "object" == typeof n.g && n.g && n.g.Object === Object && n.g,
                            pt = "object" == typeof self && self && self.Object === Object && self,
                            ft = dt || pt || Function("return this")(),
                            gt = t && !t.nodeType && t,
                            ht = gt && e && !e.nodeType && e,
                            mt = ht && ht.exports === gt,
                            yt = mt && dt.process,
                            vt = function() {
                                try {
                                    var e = ht && ht.require && ht.require("util").types;
                                    return e || yt && yt.binding && yt.binding("util")
                                } catch (e) {}
                            }(),
                            wt = vt && vt.isArrayBuffer,
                            bt = vt && vt.isDate,
                            Et = vt && vt.isMap,
                            kt = vt && vt.isRegExp,
                            xt = vt && vt.isSet,
                            Ct = vt && vt.isTypedArray;

                                                                    var n = new e;
                                                                    return e.prototype = r, n
                                                                }
                                                            }();